
package examination_centers.desktop_app;

import com.google.gson.Gson;
import com.google.gson.reflect.TypeToken;
import java.awt.Color;
import java.awt.Font;
import java.io.File;
import java.io.FileNotFoundException;
import java.io.FileOutputStream;
import java.io.IOException;
import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;
import java.util.ArrayList;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.BorderFactory;
import javax.swing.JFileChooser;
import javax.swing.ListSelectionModel;
import javax.swing.event.ListSelectionEvent;
import javax.swing.event.ListSelectionListener;
import javax.swing.table.DefaultTableModel;
import javax.ws.rs.ClientErrorException;
import javax.ws.rs.client.Client;
import javax.ws.rs.client.WebTarget;
import org.apache.poi.ss.usermodel.Cell;
import org.apache.poi.ss.usermodel.CellStyle;
import org.apache.poi.ss.usermodel.CreationHelper;
import org.apache.poi.ss.usermodel.DataFormatter;
import org.apache.poi.ss.usermodel.IndexedColors;
import org.apache.poi.ss.usermodel.Row;
import org.apache.poi.ss.usermodel.Sheet;
import org.apache.poi.ss.usermodel.Workbook;
import org.apache.poi.ss.usermodel.WorkbookFactory;
import org.apache.poi.xssf.usermodel.XSSFWorkbook;

/**
 *
 * @author devmode
 */
public class AdminApp extends javax.swing.JFrame {

    /**
     * Creates new form AdminApp
     */
    String id_userSelected;
    String id_user;
    String username;
    String name;
    String lastname;
    String address;
    String phone;
    String email;
    String role;
    
    public AdminApp() {
        initComponents();
    }
    
    public AdminApp(String id_user,String username){
        this.id_user = id_user;
        this.username = username;
        try{
            Class.forName("com.mysql.jdbc.Driver");
            String database = "jdbc:mysql://localhost:3306/examination_centers?user=root&password=026849";
            Connection connection = DriverManager.getConnection(database);
            Statement statement = connection.createStatement();
            ResultSet rs;
            String sql = "select * from user where id_user = '"+this.id_user+"'";
            rs = statement.executeQuery(sql);
            if(rs.first()){
                this.username = rs.getString("username");
                this.name = rs.getString("name");
                this.lastname = rs.getString("lastname");
                this.address = rs.getString("address");
                this.phone = rs.getString("phone");
                this.email = rs.getString("email");
                this.role = "admin";
            }
            rs.close();
            connection.close();
        }catch(SQLException | ClassNotFoundException e){e.printStackTrace();}
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        fileChooser = new javax.swing.JFileChooser();
        generalPanel = new javax.swing.JPanel();
        titlePanel = new javax.swing.JPanel();
        title = new javax.swing.JLabel();
        titleMessage = new javax.swing.JLabel();
        menuPanel = new javax.swing.JPanel();
        usersButton = new javax.swing.JButton();
        profilButton = new javax.swing.JButton();
        classesButton = new javax.swing.JButton();
        examsButton = new javax.swing.JButton();
        subjectsButton = new javax.swing.JButton();
        questionsButton = new javax.swing.JButton();
        reportsButton = new javax.swing.JButton();
        logoutButton = new javax.swing.JButton();
        searchButton = new javax.swing.JButton();
        containerPanel = new javax.swing.JPanel();
        profilPanel = new javax.swing.JPanel();
        usernameTitleLabel = new javax.swing.JLabel();
        profilUsernameLabel = new javax.swing.JLabel();
        lastnameTitleLabel = new javax.swing.JLabel();
        profilNameLabel = new javax.swing.JLabel();
        nameTitleLabel = new javax.swing.JLabel();
        profilLastnameLabel = new javax.swing.JLabel();
        phoneTitleLabel = new javax.swing.JLabel();
        profilPhoneLabel = new javax.swing.JLabel();
        addressTitleLabel = new javax.swing.JLabel();
        profilAddressLabel = new javax.swing.JLabel();
        emailTitleLabel = new javax.swing.JLabel();
        profilEmailLabel = new javax.swing.JLabel();
        roleTitleLabel = new javax.swing.JLabel();
        profilRoleLabel = new javax.swing.JLabel();
        usersPanel = new javax.swing.JPanel();
        usersMenuPanel = new javax.swing.JPanel();
        removeUsersButton = new javax.swing.JButton();
        insertUsersButton = new javax.swing.JButton();
        insertSupervisorsButton = new javax.swing.JButton();
        usersContainerPanel = new javax.swing.JPanel();
        insertUsersPanel = new javax.swing.JPanel();
        insertUserTitleLabel = new javax.swing.JLabel();
        insertUserTitle2Label = new javax.swing.JLabel();
        insertUsersUsernameLabel = new javax.swing.JLabel();
        insertUsersUsernameTextField = new javax.swing.JTextField();
        insertUsersPasswordLabel = new javax.swing.JLabel();
        insertUsersNameTextField = new javax.swing.JTextField();
        insertUsersNameLabel = new javax.swing.JLabel();
        insertUsersLastnameTextField = new javax.swing.JTextField();
        insertUsersLastnameLabel = new javax.swing.JLabel();
        insertUsersPhoneTextField = new javax.swing.JTextField();
        insertUsersPhoneLabel = new javax.swing.JLabel();
        insertUsersAddressTextField = new javax.swing.JTextField();
        insertUsersAddressLabel = new javax.swing.JLabel();
        insertUsersEmailTextField = new javax.swing.JTextField();
        insertUsersEmailLabel = new javax.swing.JLabel();
        insertUsersRoleLabel = new javax.swing.JLabel();
        insertUsersRoleComboBox = new javax.swing.JComboBox<>();
        insertUsersFileButton = new javax.swing.JButton();
        insertUsersSubmitButton = new javax.swing.JButton();
        insertUsersErrorLabel = new javax.swing.JLabel();
        insertUsersPasswordPasswordField = new javax.swing.JPasswordField();
        insertUsersFileInfoLabel = new javax.swing.JLabel();
        insertUsersFileInfo2Label = new javax.swing.JLabel();
        removeUsersPanel = new javax.swing.JPanel();
        removeUserTitleLabel = new javax.swing.JLabel();
        removeUserTitle2Label = new javax.swing.JLabel();
        removeUsersUsernameLabel = new javax.swing.JLabel();
        removeUsersUsernameTextField = new javax.swing.JTextField();
        removeUsersNameLabel = new javax.swing.JLabel();
        removeUsersLastnameTextField = new javax.swing.JTextField();
        removeUsersLastnameLabel = new javax.swing.JLabel();
        removeUsersFileButton = new javax.swing.JButton();
        removeUsersSubmitButton = new javax.swing.JButton();
        removeUsersErrorLabel = new javax.swing.JLabel();
        removeUsersFileInfoLabel = new javax.swing.JLabel();
        removeUsersFileInfo2Label = new javax.swing.JLabel();
        removeUsersNameTextField = new javax.swing.JTextField();
        insertSupervisorsPanel = new javax.swing.JPanel();
        insertSupervisorsTitleLabel = new javax.swing.JLabel();
        insertSupervisorsTitle2Label = new javax.swing.JLabel();
        insertSupervisorsUsernameLabel = new javax.swing.JLabel();
        insertSupervisorsFileButton = new javax.swing.JButton();
        insertSupervisorsSubmitButton = new javax.swing.JButton();
        insertSupervisorsErrorLabel = new javax.swing.JLabel();
        insertSupervisorsFileInfoLabel = new javax.swing.JLabel();
        insertSupervisorsFileInfo2Label = new javax.swing.JLabel();
        insertSupervisorsUsernameTextField = new javax.swing.JTextField();
        insertSupervisorsNameTextField = new javax.swing.JTextField();
        insertSupervisorsNameLabel = new javax.swing.JLabel();
        insertSupervisorsLastnameTextField = new javax.swing.JTextField();
        insertSupervisorsLastnameLabel = new javax.swing.JLabel();
        insertSupervisorsId_classLabel = new javax.swing.JLabel();
        insertSupervisorsId_classComboBox = new javax.swing.JComboBox<>();
        classesPanel = new javax.swing.JPanel();
        classesMenuPanel = new javax.swing.JPanel();
        removeClassesButton = new javax.swing.JButton();
        insertClassesButton = new javax.swing.JButton();
        classesContainerPanel = new javax.swing.JPanel();
        insertClassesPanel = new javax.swing.JPanel();
        insertClassesTitleLabel = new javax.swing.JLabel();
        insertClassesTitle2Label = new javax.swing.JLabel();
        insertClassesId_classLabel = new javax.swing.JLabel();
        insertClassesId_classTextField = new javax.swing.JTextField();
        insertClassesNameLabel = new javax.swing.JLabel();
        insertClassesNameTextField = new javax.swing.JTextField();
        insertClassesAddressLabel = new javax.swing.JLabel();
        insertClassesId_examLabel = new javax.swing.JLabel();
        insertClassesId_examComboBox = new javax.swing.JComboBox<>();
        insertClassesFileButton = new javax.swing.JButton();
        insertClassesSubmitButton = new javax.swing.JButton();
        insertClassesErrorLabel = new javax.swing.JLabel();
        insertClassesFileInfoLabel = new javax.swing.JLabel();
        insertClassesFileInfo2Label = new javax.swing.JLabel();
        insertClassesAddressTextField = new javax.swing.JTextField();
        removeClassesPanel = new javax.swing.JPanel();
        removeClassesTitleLabel = new javax.swing.JLabel();
        removeClassesTitle2Label = new javax.swing.JLabel();
        removeClassesId_classLabel = new javax.swing.JLabel();
        removeClassesId_classTextField = new javax.swing.JTextField();
        removeClassesFileButton = new javax.swing.JButton();
        removeClassesSubmitButton = new javax.swing.JButton();
        removeClassesErrorLabel = new javax.swing.JLabel();
        removeClassesFileInfoLabel = new javax.swing.JLabel();
        removeClassesFileInfo2Label = new javax.swing.JLabel();
        examsPanel = new javax.swing.JPanel();
        examsContainerPanel = new javax.swing.JPanel();
        insertExamsPanel = new javax.swing.JPanel();
        insertExamsTitleLabel = new javax.swing.JLabel();
        insertExamsTitle2Label = new javax.swing.JLabel();
        insertExamsId_examLabel = new javax.swing.JLabel();
        insertExamsId_examTextField = new javax.swing.JTextField();
        insertExamsDateLabel = new javax.swing.JLabel();
        insertExamsYearTextField = new javax.swing.JTextField();
        insertExamsFileButton = new javax.swing.JButton();
        insertExamsSubmitButton = new javax.swing.JButton();
        insertExamsErrorLabel = new javax.swing.JLabel();
        insertExamsFileInfoLabel = new javax.swing.JLabel();
        insertExamsFileInfo2Label = new javax.swing.JLabel();
        insertExamsId_subjectComboBox = new javax.swing.JComboBox<>();
        insertExamsId_subjectLabel = new javax.swing.JLabel();
        insertExamsDayTextField = new javax.swing.JTextField();
        insertExamsMonthTextField = new javax.swing.JTextField();
        insertExamsHourTextField = new javax.swing.JTextField();
        insertExamsMinuteTextField = new javax.swing.JTextField();
        insertExamsSecondTextField = new javax.swing.JTextField();
        removeExamsPanel = new javax.swing.JPanel();
        removeExamsTitleLabel = new javax.swing.JLabel();
        removeExamsTitle2Label = new javax.swing.JLabel();
        removeExamsId_examLabel = new javax.swing.JLabel();
        removeExamsId_examTextField = new javax.swing.JTextField();
        removeExamsFileButton = new javax.swing.JButton();
        removeExamsSubmitButton = new javax.swing.JButton();
        removeExamsErrorLabel = new javax.swing.JLabel();
        removeExamsFileInfoLabel = new javax.swing.JLabel();
        removeExamsFileInfo2Label = new javax.swing.JLabel();
        examsMenuPanel = new javax.swing.JPanel();
        removeExamsButton = new javax.swing.JButton();
        insertExamsButton = new javax.swing.JButton();
        subjectsPanel = new javax.swing.JPanel();
        subjectsContainerPanel = new javax.swing.JPanel();
        insertSubjectsPanel = new javax.swing.JPanel();
        insertSubjectsTitleLabel = new javax.swing.JLabel();
        insertSubjectsTitle2Label = new javax.swing.JLabel();
        insertSubjectsId_subjectLabel = new javax.swing.JLabel();
        insertSubjectsSubjectTitleLabel = new javax.swing.JLabel();
        insertSubjectsFileButton = new javax.swing.JButton();
        insertSubjectsSubmitButton = new javax.swing.JButton();
        insertSubjectsErrorLabel = new javax.swing.JLabel();
        insertSubjectsFileInfoLabel = new javax.swing.JLabel();
        insertSubjectsFileInfo2Label = new javax.swing.JLabel();
        insertSubjectsDescriptionLabel = new javax.swing.JLabel();
        insertSubjectsId_subjectTextField = new javax.swing.JTextField();
        insertSubjectsTitleTextField = new javax.swing.JTextField();
        jScrollPane1 = new javax.swing.JScrollPane();
        insertSubjectsDescriptionTextArea = new javax.swing.JTextArea();
        removeSubjectsPanel = new javax.swing.JPanel();
        removeSubjectsTitleLabel = new javax.swing.JLabel();
        removeSubjectsTitle2Label = new javax.swing.JLabel();
        removeSubjectsId_subjectLabel = new javax.swing.JLabel();
        removeSubjectsId_subjectTextField = new javax.swing.JTextField();
        removeSubjectsFileButton = new javax.swing.JButton();
        removeSubjectsSubmitButton = new javax.swing.JButton();
        removeSubjectsErrorLabel = new javax.swing.JLabel();
        removeSubjectsFileInfoLabel = new javax.swing.JLabel();
        removeSubjectsFileInfo2Label = new javax.swing.JLabel();
        subjectsMenuPanel = new javax.swing.JPanel();
        removeSubjectsButton = new javax.swing.JButton();
        insertSubjectsButton = new javax.swing.JButton();
        questionsPanel = new javax.swing.JPanel();
        questionsMenuPanel = new javax.swing.JPanel();
        removeQuestionsButton = new javax.swing.JButton();
        insertQuestionsButton = new javax.swing.JButton();
        questionsContainerPanel = new javax.swing.JPanel();
        insertQuestionsPanel = new javax.swing.JPanel();
        insertQuestionsTitleLabel = new javax.swing.JLabel();
        insertQuestionsTitle2Label1 = new javax.swing.JLabel();
        insertQuestionsId_questionLabel = new javax.swing.JLabel();
        insertQuestionsId_questionTextField = new javax.swing.JTextField();
        insertQuestionsQuestionLabel = new javax.swing.JLabel();
        insertQuestionsId_subjectLabel = new javax.swing.JLabel();
        insertQuestionsId_subjectComboBox = new javax.swing.JComboBox<>();
        insertQuestionsFileButton = new javax.swing.JButton();
        insertQuestionsSubmitButton = new javax.swing.JButton();
        insertQuestionsErrorLabel = new javax.swing.JLabel();
        insertQuestionsFileInfoLabel = new javax.swing.JLabel();
        insertQuestionsFileInfo2Label = new javax.swing.JLabel();
        jScrollPane2 = new javax.swing.JScrollPane();
        insertQuestionsAnswer1TextArea = new javax.swing.JTextArea();
        insertQuestionsAnswer1Label = new javax.swing.JLabel();
        jScrollPane3 = new javax.swing.JScrollPane();
        insertQuestionsQuestionTextArea = new javax.swing.JTextArea();
        jScrollPane4 = new javax.swing.JScrollPane();
        insertQuestionsAnswer2TextArea = new javax.swing.JTextArea();
        insertQuestionsAnswer2Label = new javax.swing.JLabel();
        jScrollPane5 = new javax.swing.JScrollPane();
        insertQuestionsAnswer3TextArea = new javax.swing.JTextArea();
        insertQuestionsAnswer3Label = new javax.swing.JLabel();
        jScrollPane6 = new javax.swing.JScrollPane();
        insertQuestionsAnswer4TextArea = new javax.swing.JTextArea();
        insertQuestionsAnswer4Label = new javax.swing.JLabel();
        jScrollPane7 = new javax.swing.JScrollPane();
        insertQuestionsCorrectTextArea = new javax.swing.JTextArea();
        insertQuestionsCorrectLabel = new javax.swing.JLabel();
        removeQuestionsPanel = new javax.swing.JPanel();
        removeQuestionsTitleLabel = new javax.swing.JLabel();
        removeQuestionsTitle2Label = new javax.swing.JLabel();
        removeQuestionsId_questionLabel = new javax.swing.JLabel();
        removeQuestionsId_questionTextField = new javax.swing.JTextField();
        removeQuestionsFileButton = new javax.swing.JButton();
        removeQuestionsSubmitButton = new javax.swing.JButton();
        removeQuestionsErrorLabel = new javax.swing.JLabel();
        removeQuestionsFileInfoLabel = new javax.swing.JLabel();
        removeQuestionsFileInfo2Label = new javax.swing.JLabel();
        reportsPanel = new javax.swing.JPanel();
        reportsContainerPanel = new javax.swing.JPanel();
        reportsStudentsPanel = new javax.swing.JPanel();
        reportsStudentsTitleLabel = new javax.swing.JLabel();
        jScrollPane9 = new javax.swing.JScrollPane();
        reportsStudentsTable = new javax.swing.JTable();
        reportsStudentsMessageLabel = new javax.swing.JLabel();
        reportsStudentsDownloadButton = new javax.swing.JButton();
        reportsClassesPanel = new javax.swing.JPanel();
        reportsClassesMessageLabel = new javax.swing.JLabel();
        jScrollPane10 = new javax.swing.JScrollPane();
        reportsClassesTable = new javax.swing.JTable();
        reportsClassesTitleLabel = new javax.swing.JLabel();
        reportsClassesDownloadButton = new javax.swing.JButton();
        reportsExamsPanel = new javax.swing.JPanel();
        reportsExamsTitleLabel = new javax.swing.JLabel();
        jScrollPane11 = new javax.swing.JScrollPane();
        reportsExamsTable = new javax.swing.JTable();
        reportsExamsMessageLabel = new javax.swing.JLabel();
        reportsExamsDownloadButton = new javax.swing.JButton();
        reportsMenuPanel = new javax.swing.JPanel();
        reportsClassesButton = new javax.swing.JButton();
        reportsStudentsButton = new javax.swing.JButton();
        reportsExamsButton = new javax.swing.JButton();
        searchPanel = new javax.swing.JPanel();
        searchLastnameTextField = new javax.swing.JTextField();
        searchLastnameLabel = new javax.swing.JLabel();
        searchNameTextField = new javax.swing.JTextField();
        searchNameLabel = new javax.swing.JLabel();
        searchUsernameTextField = new javax.swing.JTextField();
        searchErrorLabel = new javax.swing.JLabel();
        searchTitleLabel = new javax.swing.JLabel();
        searchUsernameLabel = new javax.swing.JLabel();
        searchSubmitButton = new javax.swing.JButton();
        searchResultPanel = new javax.swing.JPanel();
        searchResultTitle2Label = new javax.swing.JLabel();
        searchResultUsernameLabel = new javax.swing.JLabel();
        searchResultUsername = new javax.swing.JLabel();
        searchResultNameLabel = new javax.swing.JLabel();
        searchResultName = new javax.swing.JLabel();
        searchResultLastnameLabel = new javax.swing.JLabel();
        searchResultLastname = new javax.swing.JLabel();
        searchResultAddressLabel = new javax.swing.JLabel();
        searchResultAddress = new javax.swing.JLabel();
        searchResultEmail = new javax.swing.JLabel();
        searchResultEmailLabel = new javax.swing.JLabel();
        searchResultPhone = new javax.swing.JLabel();
        searchResultPhoneLabel = new javax.swing.JLabel();
        searchResultRole = new javax.swing.JLabel();
        searchResultRoleLabel = new javax.swing.JLabel();
        searchResultTitleLabel = new javax.swing.JLabel();
        jScrollPane8 = new javax.swing.JScrollPane();
        searchResultTable = new javax.swing.JTable();
        searchResultBackButton = new javax.swing.JButton();
        searchResultStudentPanel = new javax.swing.JPanel();
        searchResultStudentBackButton = new javax.swing.JButton();
        jScrollPane12 = new javax.swing.JScrollPane();
        searchResultStudentTable = new javax.swing.JTable();
        searchResultStudentTitleLabel = new javax.swing.JLabel();
        searchResultStudentRoleLabel = new javax.swing.JLabel();
        searchResultStudentRole = new javax.swing.JLabel();
        searchResultStudentPhoneLabel = new javax.swing.JLabel();
        searchResultStudentPhone = new javax.swing.JLabel();
        searchResultStudentEmailLabel = new javax.swing.JLabel();
        searchResultStudentEmail = new javax.swing.JLabel();
        searchResultStudentAddress = new javax.swing.JLabel();
        searchResultStudentAddressLabel = new javax.swing.JLabel();
        searchResultStudentLastname = new javax.swing.JLabel();
        searchResultStudentLastnameLabel = new javax.swing.JLabel();
        searchResultStudentName = new javax.swing.JLabel();
        searchResultStudentNameLabel = new javax.swing.JLabel();
        searchResultStudentUsername = new javax.swing.JLabel();
        searchResultStudentUsernameLabel = new javax.swing.JLabel();
        searchResultStudentTitle2Label = new javax.swing.JLabel();
        searchResultStudentId_class = new javax.swing.JLabel();
        searchResultStudentId_classLabel = new javax.swing.JLabel();
        searchResultStudentId_exam = new javax.swing.JLabel();
        searchResultStudentId_examLabel = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Ξ•ΞΎΞµΟ„Ξ¬ΟƒΞµΞΉΟ‚ Ξ ΞΉΟƒΟ„ΞΏΟ€ΞΏΞ―Ξ·ΟƒΞ·Ο‚ Ξ“Ξ½Ο�ΟƒΞµΟ‰Ξ½");
        setName("generalFrame"); // NOI18N
        setResizable(false);

        generalPanel.setBackground(new java.awt.Color(66, 66, 66));
        generalPanel.setPreferredSize(new java.awt.Dimension(800, 600));

        titlePanel.setBackground(new java.awt.Color(255, 255, 255));
        titlePanel.setBorder(javax.swing.BorderFactory.createMatteBorder(0, 0, 5, 0, new java.awt.Color(68, 138, 255)));

        title.setFont(new java.awt.Font("Tahoma", 0, 24)); // NOI18N
        title.setForeground(new java.awt.Color(68, 138, 255));
        title.setText("Ξ•ΞΎΞµΟ„Ξ¬ΟƒΞµΞΉΟ‚ Ξ ΞΉΟƒΟ„ΞΏΟ€ΞΏΞ―Ξ·ΟƒΞ·Ο‚ Ξ“Ξ½Ο�ΟƒΞµΟ‰Ξ½");

        titleMessage.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        titleMessage.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        titleMessage.setText("Logged in as : ");

        javax.swing.GroupLayout titlePanelLayout = new javax.swing.GroupLayout(titlePanel);
        titlePanel.setLayout(titlePanelLayout);
        titlePanelLayout.setHorizontalGroup(
            titlePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(titlePanelLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(title)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(titleMessage, javax.swing.GroupLayout.PREFERRED_SIZE, 260, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );
        titlePanelLayout.setVerticalGroup(
            titlePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, titlePanelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(titlePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(titlePanelLayout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(titleMessage))
                    .addComponent(title, javax.swing.GroupLayout.DEFAULT_SIZE, 63, Short.MAX_VALUE))
                .addContainerGap())
        );

        titleMessage.setText("Logged in as : "+username);

        menuPanel.setBackground(new java.awt.Color(66, 66, 66));
        menuPanel.setBorder(javax.swing.BorderFactory.createMatteBorder(0, 5, 0, 0, new java.awt.Color(68, 138, 255)));

        usersButton.setBackground(new java.awt.Color(255, 255, 255));
        usersButton.setFont(new java.awt.Font("Tahoma", 0, 16)); // NOI18N
        usersButton.setForeground(new java.awt.Color(255, 255, 255));
        usersButton.setText("Ξ§Ο�Ξ®ΟƒΟ„ΞµΟ‚");
        usersButton.setBorder(javax.swing.BorderFactory.createMatteBorder(0, 0, 1, 0, new java.awt.Color(68, 138, 255)));
        usersButton.setContentAreaFilled(false);
        usersButton.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                usersButtonMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                usersButtonMouseExited(evt);
            }
        });
        usersButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                usersButtonActionPerformed(evt);
            }
        });

        profilButton.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        profilButton.setForeground(new java.awt.Color(255, 255, 255));
        profilButton.setText("Ξ Ο�ΞΏΟ†Ξ―Ξ» Ξ§Ο�Ξ®ΟƒΟ„Ξ·");
        profilButton.setBorder(javax.swing.BorderFactory.createMatteBorder(0, 0, 1, 0, new java.awt.Color(68, 138, 255)));
        profilButton.setContentAreaFilled(false);
        profilButton.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                profilButtonMouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                profilButtonMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                profilButtonMouseExited(evt);
            }
        });
        profilButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                profilButtonActionPerformed(evt);
            }
        });

        classesButton.setFont(new java.awt.Font("Tahoma", 0, 16)); // NOI18N
        classesButton.setForeground(new java.awt.Color(255, 255, 255));
        classesButton.setText("Ξ•ΞΎΞµΟ„Ξ±ΟƒΟ„ΞΉΞΊΞ¬ Ξ�Ξ­Ξ½Ο„Ο�Ξ±");
        classesButton.setBorder(javax.swing.BorderFactory.createMatteBorder(0, 0, 1, 0, new java.awt.Color(68, 138, 255)));
        classesButton.setContentAreaFilled(false);
        classesButton.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                classesButtonMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                classesButtonMouseExited(evt);
            }
        });
        classesButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                classesButtonActionPerformed(evt);
            }
        });

        examsButton.setFont(new java.awt.Font("Tahoma", 0, 16)); // NOI18N
        examsButton.setForeground(new java.awt.Color(255, 255, 255));
        examsButton.setText("Ξ•ΞΎΞµΟ„Ξ¬ΟƒΞµΞΉΟ‚");
        examsButton.setBorder(javax.swing.BorderFactory.createMatteBorder(0, 0, 1, 0, new java.awt.Color(68, 138, 255)));
        examsButton.setContentAreaFilled(false);
        examsButton.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                examsButtonMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                examsButtonMouseExited(evt);
            }
        });
        examsButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                examsButtonActionPerformed(evt);
            }
        });

        subjectsButton.setFont(new java.awt.Font("Tahoma", 0, 16)); // NOI18N
        subjectsButton.setForeground(new java.awt.Color(255, 255, 255));
        subjectsButton.setText("Ξ�Ξ±ΞΈΞ®ΞΌΞ±Ο„Ξ±");
        subjectsButton.setBorder(javax.swing.BorderFactory.createMatteBorder(0, 0, 1, 0, new java.awt.Color(68, 138, 255)));
        subjectsButton.setContentAreaFilled(false);
        subjectsButton.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                subjectsButtonMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                subjectsButtonMouseExited(evt);
            }
            public void mousePressed(java.awt.event.MouseEvent evt) {
                subjectsButtonMousePressed(evt);
            }
        });
        subjectsButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                subjectsButtonActionPerformed(evt);
            }
        });

        questionsButton.setFont(new java.awt.Font("Tahoma", 0, 16)); // NOI18N
        questionsButton.setForeground(new java.awt.Color(255, 255, 255));
        questionsButton.setText("Ξ•Ο�Ο‰Ο„Ξ®ΟƒΞµΞΉΟ‚");
        questionsButton.setBorder(javax.swing.BorderFactory.createMatteBorder(0, 0, 1, 0, new java.awt.Color(68, 138, 255)));
        questionsButton.setContentAreaFilled(false);
        questionsButton.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                questionsButtonMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                questionsButtonMouseExited(evt);
            }
        });
        questionsButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                questionsButtonActionPerformed(evt);
            }
        });

        reportsButton.setFont(new java.awt.Font("Tahoma", 0, 16)); // NOI18N
        reportsButton.setForeground(new java.awt.Color(255, 255, 255));
        reportsButton.setText("Ξ‘Ξ½Ξ±Ο†ΞΏΟ�Ξ­Ο‚");
        reportsButton.setBorder(javax.swing.BorderFactory.createMatteBorder(0, 0, 1, 0, new java.awt.Color(68, 138, 255)));
        reportsButton.setContentAreaFilled(false);
        reportsButton.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                reportsButtonMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                reportsButtonMouseExited(evt);
            }
        });
        reportsButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                reportsButtonActionPerformed(evt);
            }
        });

        logoutButton.setFont(new java.awt.Font("Tahoma", 0, 16)); // NOI18N
        logoutButton.setForeground(new java.awt.Color(255, 255, 255));
        logoutButton.setText("Ξ�ΞΎΞΏΞ΄ΞΏΟ‚");
        logoutButton.setBorder(javax.swing.BorderFactory.createMatteBorder(0, 0, 1, 0, new java.awt.Color(68, 138, 255)));
        logoutButton.setContentAreaFilled(false);
        logoutButton.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                logoutButtonMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                logoutButtonMouseExited(evt);
            }
        });
        logoutButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                logoutButtonActionPerformed(evt);
            }
        });

        searchButton.setFont(new java.awt.Font("Tahoma", 0, 16)); // NOI18N
        searchButton.setForeground(new java.awt.Color(255, 255, 255));
        searchButton.setText("Ξ‘Ξ½Ξ±Ξ¶Ξ®Ο„Ξ·ΟƒΞ·");
        searchButton.setBorder(javax.swing.BorderFactory.createMatteBorder(0, 0, 1, 0, new java.awt.Color(68, 138, 255)));
        searchButton.setContentAreaFilled(false);
        searchButton.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                searchButtonMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                searchButtonMouseExited(evt);
            }
        });
        searchButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                searchButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout menuPanelLayout = new javax.swing.GroupLayout(menuPanel);
        menuPanel.setLayout(menuPanelLayout);
        menuPanelLayout.setHorizontalGroup(
            menuPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(menuPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(menuPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(profilButton, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(usersButton, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(classesButton, javax.swing.GroupLayout.DEFAULT_SIZE, 165, Short.MAX_VALUE)
                    .addComponent(examsButton, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(subjectsButton, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(questionsButton, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(reportsButton, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(logoutButton, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(searchButton, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );
        menuPanelLayout.setVerticalGroup(
            menuPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(menuPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(profilButton, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(usersButton, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(classesButton, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(examsButton, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(subjectsButton, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(questionsButton, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(reportsButton, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(searchButton, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(logoutButton, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        containerPanel.setBackground(new java.awt.Color(255, 255, 255));
        containerPanel.setLayout(new java.awt.CardLayout());

        profilPanel.setBackground(new java.awt.Color(255, 255, 255));

        usernameTitleLabel.setBackground(new java.awt.Color(255, 255, 255));
        usernameTitleLabel.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        usernameTitleLabel.setText("Ξ�Ξ½ΞΏΞΌΞ± Ξ›ΞΏΞ³Ξ±Ο�ΞΉΞ±ΟƒΞΌΞΏΟ�");

        profilUsernameLabel.setBackground(new java.awt.Color(241, 241, 241));
        profilUsernameLabel.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        profilUsernameLabel.setBorder(javax.swing.BorderFactory.createMatteBorder(1, 1, 1, 1, new java.awt.Color(204, 204, 204)));
        profilUsernameLabel.setOpaque(true);

        lastnameTitleLabel.setBackground(new java.awt.Color(255, 255, 255));
        lastnameTitleLabel.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        lastnameTitleLabel.setText("Ξ•Ο€Ξ―ΞΈΞµΟ„ΞΏ");

        profilNameLabel.setBackground(new java.awt.Color(241, 241, 241));
        profilNameLabel.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        profilNameLabel.setBorder(javax.swing.BorderFactory.createMatteBorder(1, 1, 1, 1, new java.awt.Color(204, 204, 204)));
        profilNameLabel.setOpaque(true);

        nameTitleLabel.setBackground(new java.awt.Color(255, 255, 255));
        nameTitleLabel.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        nameTitleLabel.setText("Ξ�Ξ½ΞΏΞΌΞ±");

        profilLastnameLabel.setBackground(new java.awt.Color(241, 241, 241));
        profilLastnameLabel.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        profilLastnameLabel.setBorder(javax.swing.BorderFactory.createMatteBorder(1, 1, 1, 1, new java.awt.Color(204, 204, 204)));
        profilLastnameLabel.setOpaque(true);

        phoneTitleLabel.setBackground(new java.awt.Color(255, 255, 255));
        phoneTitleLabel.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        phoneTitleLabel.setText("Ξ¤Ξ·Ξ»Ξ­Ο†Ο‰Ξ½ΞΏ");

        profilPhoneLabel.setBackground(new java.awt.Color(241, 241, 241));
        profilPhoneLabel.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        profilPhoneLabel.setBorder(javax.swing.BorderFactory.createMatteBorder(1, 1, 1, 1, new java.awt.Color(204, 204, 204)));
        profilPhoneLabel.setOpaque(true);

        addressTitleLabel.setBackground(new java.awt.Color(255, 255, 255));
        addressTitleLabel.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        addressTitleLabel.setText("Ξ”ΞΉΞµΟ�ΞΈΟ…Ξ½ΟƒΞ·");

        profilAddressLabel.setBackground(new java.awt.Color(241, 241, 241));
        profilAddressLabel.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        profilAddressLabel.setBorder(javax.swing.BorderFactory.createMatteBorder(1, 1, 1, 1, new java.awt.Color(204, 204, 204)));
        profilAddressLabel.setOpaque(true);

        emailTitleLabel.setBackground(new java.awt.Color(255, 255, 255));
        emailTitleLabel.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        emailTitleLabel.setText("email");

        profilEmailLabel.setBackground(new java.awt.Color(241, 241, 241));
        profilEmailLabel.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        profilEmailLabel.setBorder(javax.swing.BorderFactory.createMatteBorder(1, 1, 1, 1, new java.awt.Color(204, 204, 204)));
        profilEmailLabel.setOpaque(true);

        roleTitleLabel.setBackground(new java.awt.Color(255, 255, 255));
        roleTitleLabel.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        roleTitleLabel.setText("Ξ΅Ο�Ξ»ΞΏΟ‚");

        profilRoleLabel.setBackground(new java.awt.Color(241, 241, 241));
        profilRoleLabel.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        profilRoleLabel.setBorder(javax.swing.BorderFactory.createMatteBorder(1, 1, 1, 1, new java.awt.Color(204, 204, 204)));
        profilRoleLabel.setOpaque(true);

        javax.swing.GroupLayout profilPanelLayout = new javax.swing.GroupLayout(profilPanel);
        profilPanel.setLayout(profilPanelLayout);
        profilPanelLayout.setHorizontalGroup(
            profilPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(profilPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(profilPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                    .addComponent(profilEmailLabel, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 250, Short.MAX_VALUE)
                    .addComponent(emailTitleLabel, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(profilAddressLabel, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(addressTitleLabel, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(profilPhoneLabel, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(phoneTitleLabel, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(profilLastnameLabel, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(lastnameTitleLabel, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(profilNameLabel, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(nameTitleLabel, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(profilUsernameLabel, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(usernameTitleLabel, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 120, Short.MAX_VALUE)
                .addGroup(profilPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(profilRoleLabel, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 250, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(roleTitleLabel, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 250, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap())
        );
        profilPanelLayout.setVerticalGroup(
            profilPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(profilPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(profilPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(usernameTitleLabel)
                    .addComponent(roleTitleLabel))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(profilPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(profilRoleLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(profilUsernameLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addComponent(nameTitleLabel)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(profilNameLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(lastnameTitleLabel)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(profilLastnameLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(phoneTitleLabel)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(profilPhoneLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(addressTitleLabel)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(profilAddressLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(emailTitleLabel)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(profilEmailLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(341, Short.MAX_VALUE))
        );

        profilUsernameLabel.setText(this.username);
        profilNameLabel.setText(this.name);
        profilLastnameLabel.setText(this.lastname);
        profilPhoneLabel.setText(this.phone);
        profilAddressLabel.setText(this.address);
        profilEmailLabel.setText(this.email);
        profilRoleLabel.setText(this.role);

        containerPanel.add(profilPanel, "card2");

        usersMenuPanel.setBackground(new java.awt.Color(255, 255, 255));

        removeUsersButton.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        removeUsersButton.setText("Ξ‘Ο†Ξ±Ξ―Ο�ΞµΟƒΞ· Ξ§Ο�Ξ·ΟƒΟ„Ο�Ξ½");
        removeUsersButton.setBorder(javax.swing.BorderFactory.createMatteBorder(0, 1, 0, 1, new java.awt.Color(68, 138, 255)));
        removeUsersButton.setContentAreaFilled(false);
        removeUsersButton.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                removeUsersButtonMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                removeUsersButtonMouseExited(evt);
            }
        });
        removeUsersButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                removeUsersButtonActionPerformed(evt);
            }
        });

        insertUsersButton.setFont(new java.awt.Font("Tahoma", 0, 16)); // NOI18N
        insertUsersButton.setText("Ξ•ΞΉΟƒΞ±Ξ³Ο‰Ξ³Ξ® Ξ§Ο�Ξ·ΟƒΟ„Ο�Ξ½");
        insertUsersButton.setBorder(javax.swing.BorderFactory.createMatteBorder(0, 1, 0, 1, new java.awt.Color(68, 138, 255)));
        insertUsersButton.setContentAreaFilled(false);
        insertUsersButton.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                insertUsersButtonMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                insertUsersButtonMouseExited(evt);
            }
        });
        insertUsersButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                insertUsersButtonActionPerformed(evt);
            }
        });

        insertSupervisorsButton.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        insertSupervisorsButton.setText("Ξ�Ο�ΞΉΟƒΞΌΟ�Ο‚ Ξ¥Ο€ΞµΟ…ΞΈΟ�Ξ½Ο‰Ξ½");
        insertSupervisorsButton.setBorder(javax.swing.BorderFactory.createMatteBorder(0, 1, 0, 1, new java.awt.Color(68, 138, 255)));
        insertSupervisorsButton.setContentAreaFilled(false);
        insertSupervisorsButton.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                insertSupervisorsButtonMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                insertSupervisorsButtonMouseExited(evt);
            }
        });
        insertSupervisorsButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                insertSupervisorsButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout usersMenuPanelLayout = new javax.swing.GroupLayout(usersMenuPanel);
        usersMenuPanel.setLayout(usersMenuPanelLayout);
        usersMenuPanelLayout.setHorizontalGroup(
            usersMenuPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(usersMenuPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(insertUsersButton, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(insertSupervisorsButton, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(removeUsersButton, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );
        usersMenuPanelLayout.setVerticalGroup(
            usersMenuPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, usersMenuPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(usersMenuPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(removeUsersButton, javax.swing.GroupLayout.DEFAULT_SIZE, 28, Short.MAX_VALUE)
                    .addComponent(insertUsersButton, javax.swing.GroupLayout.DEFAULT_SIZE, 28, Short.MAX_VALUE)
                    .addComponent(insertSupervisorsButton, javax.swing.GroupLayout.DEFAULT_SIZE, 28, Short.MAX_VALUE))
                .addContainerGap())
        );

        usersContainerPanel.setBackground(new java.awt.Color(255, 255, 255));
        usersContainerPanel.setLayout(new java.awt.CardLayout());

        insertUsersPanel.setBackground(new java.awt.Color(255, 255, 255));

        insertUserTitleLabel.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        insertUserTitleLabel.setText("Ξ£Ο„ΞΏΞΉΟ‡ΞµΞ―Ξ± Ξ±Ο€Ο� Ο†Ο�Ο�ΞΌΞ±");

        insertUserTitle2Label.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        insertUserTitle2Label.setText("Ξ£Ο„ΞΏΞΉΟ‡ΞµΞ―Ξ± Ξ±Ο€Ο� Ξ±Ο�Ο‡ΞµΞ―ΞΏ");

        insertUsersUsernameLabel.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        insertUsersUsernameLabel.setText("Ξ�Ξ½ΞΏΞΌΞ± Ξ›ΞΏΞ³Ξ±Ο�ΞΉΞ±ΟƒΞΌΞΏΟ�");

        insertUsersUsernameTextField.setBackground(new java.awt.Color(241, 241, 241));
        insertUsersUsernameTextField.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N

        insertUsersPasswordLabel.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        insertUsersPasswordLabel.setText("Ξ�Ο‰Ξ΄ΞΉΞΊΟ�Ο‚ Ο€Ο�Ο�ΟƒΞ²Ξ±ΟƒΞ·Ο‚");

        insertUsersNameTextField.setBackground(new java.awt.Color(241, 241, 241));
        insertUsersNameTextField.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N

        insertUsersNameLabel.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        insertUsersNameLabel.setText("Ξ�Ξ½ΞΏΞΌΞ± Ξ§Ο�Ξ®ΟƒΟ„Ξ·");

        insertUsersLastnameTextField.setBackground(new java.awt.Color(241, 241, 241));
        insertUsersLastnameTextField.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        insertUsersLastnameTextField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                insertUsersLastnameTextFieldActionPerformed(evt);
            }
        });

        insertUsersLastnameLabel.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        insertUsersLastnameLabel.setText("Ξ•Ο€Ξ―ΞΈΞµΟ„ΞΏ");

        insertUsersPhoneTextField.setBackground(new java.awt.Color(241, 241, 241));
        insertUsersPhoneTextField.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N

        insertUsersPhoneLabel.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        insertUsersPhoneLabel.setText("Ξ¤Ξ·Ξ»Ξ­Ο†Ο‰Ξ½ΞΏ");

        insertUsersAddressTextField.setBackground(new java.awt.Color(241, 241, 241));
        insertUsersAddressTextField.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N

        insertUsersAddressLabel.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        insertUsersAddressLabel.setText("Ξ”ΞΉΞµΟ�ΞΈΟ…Ξ½ΟƒΞ·");

        insertUsersEmailTextField.setBackground(new java.awt.Color(241, 241, 241));
        insertUsersEmailTextField.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N

        insertUsersEmailLabel.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        insertUsersEmailLabel.setText("Email");

        insertUsersRoleLabel.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        insertUsersRoleLabel.setText("Ξ΅Ο�Ξ»ΞΏΟ‚");

        insertUsersRoleComboBox.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        insertUsersRoleComboBox.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Student", "Supervisor", "Admin" }));

        insertUsersFileButton.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        insertUsersFileButton.setText("Ξ•Ο€ΞΉΞ»ΞΏΞ³Ξ® Ξ‘Ο�Ο‡ΞµΞ―ΞΏΟ… Excel");
        insertUsersFileButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                insertUsersFileButtonActionPerformed(evt);
            }
        });

        insertUsersSubmitButton.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        insertUsersSubmitButton.setText("Ξ¥Ο€ΞΏΞ²ΞΏΞ»Ξ®");
        insertUsersSubmitButton.setBorder(javax.swing.BorderFactory.createMatteBorder(0, 1, 0, 1, new java.awt.Color(68, 138, 255)));
        insertUsersSubmitButton.setContentAreaFilled(false);
        insertUsersSubmitButton.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                insertUsersSubmitButtonMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                insertUsersSubmitButtonMouseExited(evt);
            }
        });
        insertUsersSubmitButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                insertUsersSubmitButtonActionPerformed(evt);
            }
        });

        insertUsersErrorLabel.setForeground(new java.awt.Color(255, 51, 51));
        insertUsersErrorLabel.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);

        insertUsersPasswordPasswordField.setBackground(new java.awt.Color(241, 241, 241));
        insertUsersPasswordPasswordField.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N

        insertUsersFileInfoLabel.setText("Ξ�ΞΏΟ�Ο†Ξ® : Ο�Ξ΄ΞΉΞ± ΟƒΞµΞΉΟ�Ξ¬ ΞΌΞµ Ο„Ξ·Ξ½ Ο†Ο�Ο�ΞΌΞ±.");

        insertUsersFileInfo2Label.setText("Ξ— Ο€Ο�Ο�Ο„Ξ· Ξ³Ο�Ξ±ΞΌΞΌΞ® ΞµΞ―Ξ½Ξ±ΞΉ Ξ³ΞΉΞ± Ο„ΞΏΟ…Ο‚ Ο„Ξ―Ο„Ξ»ΞΏΟ…Ο‚.");

        javax.swing.GroupLayout insertUsersPanelLayout = new javax.swing.GroupLayout(insertUsersPanel);
        insertUsersPanel.setLayout(insertUsersPanelLayout);
        insertUsersPanelLayout.setHorizontalGroup(
            insertUsersPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(insertUsersPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(insertUsersPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(insertUsersErrorLabel, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(insertUsersPanelLayout.createSequentialGroup()
                        .addComponent(insertUserTitleLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 300, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(insertUserTitle2Label, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(insertUsersPanelLayout.createSequentialGroup()
                        .addGroup(insertUsersPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(insertUsersNameLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 335, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(insertUsersLastnameLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 335, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(insertUsersPhoneLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 335, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(insertUsersAddressLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 335, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(insertUsersEmailLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 335, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(insertUsersRoleLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 335, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(insertUsersNameTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 300, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(insertUsersLastnameTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 300, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(insertUsersPhoneTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 300, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(insertUsersAddressTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 300, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(insertUsersEmailTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 300, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(insertUsersRoleComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, 300, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(insertUsersSubmitButton, javax.swing.GroupLayout.PREFERRED_SIZE, 300, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(insertUsersPasswordLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 335, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(insertUsersPanelLayout.createSequentialGroup()
                                .addGroup(insertUsersPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(insertUsersUsernameLabel, javax.swing.GroupLayout.DEFAULT_SIZE, 300, Short.MAX_VALUE)
                                    .addComponent(insertUsersUsernameTextField))
                                .addGap(18, 18, 18)
                                .addGroup(insertUsersPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(insertUsersFileInfoLabel)
                                    .addComponent(insertUsersFileInfo2Label, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                            .addGroup(insertUsersPanelLayout.createSequentialGroup()
                                .addComponent(insertUsersPasswordPasswordField, javax.swing.GroupLayout.PREFERRED_SIZE, 300, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(insertUsersFileButton, javax.swing.GroupLayout.PREFERRED_SIZE, 280, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(0, 22, Short.MAX_VALUE)))
                .addContainerGap())
        );
        insertUsersPanelLayout.setVerticalGroup(
            insertUsersPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(insertUsersPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(insertUsersPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(insertUserTitleLabel)
                    .addComponent(insertUserTitle2Label))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(insertUsersErrorLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(insertUsersPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(insertUsersUsernameLabel)
                    .addComponent(insertUsersFileInfoLabel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(insertUsersPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(insertUsersUsernameTextField)
                    .addComponent(insertUsersFileInfo2Label, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(insertUsersPasswordLabel)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(insertUsersPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(insertUsersPasswordPasswordField, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(insertUsersFileButton))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(insertUsersNameLabel)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(insertUsersNameTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(insertUsersLastnameLabel)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(insertUsersLastnameTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(insertUsersPhoneLabel)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(insertUsersPhoneTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(insertUsersAddressLabel)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(insertUsersAddressTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(insertUsersEmailLabel)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(insertUsersEmailTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(insertUsersRoleLabel)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(insertUsersRoleComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 146, Short.MAX_VALUE)
                .addComponent(insertUsersSubmitButton, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        usersContainerPanel.add(insertUsersPanel, "card2");

        removeUsersPanel.setBackground(new java.awt.Color(255, 255, 255));

        removeUserTitleLabel.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        removeUserTitleLabel.setText("Ξ£Ο„ΞΏΞΉΟ‡ΞµΞ―Ξ± Ξ±Ο€Ο� Ο†Ο�Ο�ΞΌΞ±");

        removeUserTitle2Label.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        removeUserTitle2Label.setText("Ξ£Ο„ΞΏΞΉΟ‡ΞµΞ―Ξ± Ξ±Ο€Ο� Ξ±Ο�Ο‡ΞµΞ―ΞΏ");

        removeUsersUsernameLabel.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        removeUsersUsernameLabel.setText("Ξ�Ξ½ΞΏΞΌΞ± Ξ›ΞΏΞ³Ξ±Ο�ΞΉΞ±ΟƒΞΌΞΏΟ�");

        removeUsersUsernameTextField.setBackground(new java.awt.Color(241, 241, 241));
        removeUsersUsernameTextField.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N

        removeUsersNameLabel.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        removeUsersNameLabel.setText("Ξ�Ξ½ΞΏΞΌΞ±");

        removeUsersLastnameTextField.setBackground(new java.awt.Color(241, 241, 241));
        removeUsersLastnameTextField.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N

        removeUsersLastnameLabel.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        removeUsersLastnameLabel.setText("Ξ•Ο€Ξ―ΞΈΞµΟ„ΞΏ");

        removeUsersFileButton.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        removeUsersFileButton.setText("Ξ•Ο€ΞΉΞ»ΞΏΞ³Ξ® Ξ‘Ο�Ο‡ΞµΞ―ΞΏΟ… Excel");
        removeUsersFileButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                removeUsersFileButtonActionPerformed(evt);
            }
        });

        removeUsersSubmitButton.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        removeUsersSubmitButton.setText("Ξ¥Ο€ΞΏΞ²ΞΏΞ»Ξ®");
        removeUsersSubmitButton.setBorder(javax.swing.BorderFactory.createMatteBorder(0, 1, 0, 1, new java.awt.Color(68, 138, 255)));
        removeUsersSubmitButton.setContentAreaFilled(false);
        removeUsersSubmitButton.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                removeUsersSubmitButtonMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                removeUsersSubmitButtonMouseExited(evt);
            }
        });
        removeUsersSubmitButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                removeUsersSubmitButtonActionPerformed(evt);
            }
        });

        removeUsersErrorLabel.setForeground(new java.awt.Color(255, 51, 51));
        removeUsersErrorLabel.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);

        removeUsersFileInfoLabel.setText("Ξ�ΞΏΟ�Ο†Ξ® : Ο�Ξ΄ΞΉΞ± ΟƒΞµΞΉΟ�Ξ¬ ΞΌΞµ Ο„Ξ·Ξ½ Ο†Ο�Ο�ΞΌΞ±.");

        removeUsersFileInfo2Label.setText("Ξ— Ο€Ο�Ο�Ο„Ξ· Ξ³Ο�Ξ±ΞΌΞΌΞ® ΞµΞ―Ξ½Ξ±ΞΉ Ξ³ΞΉΞ± Ο„ΞΏΟ…Ο‚ Ο„Ξ―Ο„Ξ»ΞΏΟ…Ο‚.");

        removeUsersNameTextField.setBackground(new java.awt.Color(241, 241, 241));
        removeUsersNameTextField.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N

        javax.swing.GroupLayout removeUsersPanelLayout = new javax.swing.GroupLayout(removeUsersPanel);
        removeUsersPanel.setLayout(removeUsersPanelLayout);
        removeUsersPanelLayout.setHorizontalGroup(
            removeUsersPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(removeUsersPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(removeUsersPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(removeUsersErrorLabel, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(removeUsersPanelLayout.createSequentialGroup()
                        .addComponent(removeUserTitleLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 300, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(removeUserTitle2Label, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(removeUsersPanelLayout.createSequentialGroup()
                        .addGroup(removeUsersPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(removeUsersLastnameLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 335, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(removeUsersLastnameTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 300, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(removeUsersSubmitButton, javax.swing.GroupLayout.PREFERRED_SIZE, 300, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(removeUsersNameLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 335, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(removeUsersPanelLayout.createSequentialGroup()
                                .addGroup(removeUsersPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(removeUsersUsernameLabel, javax.swing.GroupLayout.DEFAULT_SIZE, 300, Short.MAX_VALUE)
                                    .addComponent(removeUsersUsernameTextField))
                                .addGap(18, 18, 18)
                                .addGroup(removeUsersPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(removeUsersFileInfoLabel)
                                    .addComponent(removeUsersFileInfo2Label, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                            .addGroup(removeUsersPanelLayout.createSequentialGroup()
                                .addComponent(removeUsersNameTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 300, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(removeUsersFileButton, javax.swing.GroupLayout.PREFERRED_SIZE, 280, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(0, 22, Short.MAX_VALUE)))
                .addContainerGap())
        );
        removeUsersPanelLayout.setVerticalGroup(
            removeUsersPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(removeUsersPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(removeUsersPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(removeUserTitleLabel)
                    .addComponent(removeUserTitle2Label))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(removeUsersErrorLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(removeUsersPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(removeUsersUsernameLabel)
                    .addComponent(removeUsersFileInfoLabel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(removeUsersPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(removeUsersUsernameTextField)
                    .addComponent(removeUsersFileInfo2Label, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(removeUsersNameLabel)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(removeUsersPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(removeUsersFileButton, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(removeUsersNameTextField))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(removeUsersLastnameLabel)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(removeUsersLastnameTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 414, Short.MAX_VALUE)
                .addComponent(removeUsersSubmitButton, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        usersContainerPanel.add(removeUsersPanel, "card3");

        insertSupervisorsPanel.setBackground(new java.awt.Color(255, 255, 255));

        insertSupervisorsTitleLabel.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        insertSupervisorsTitleLabel.setText("Ξ£Ο„ΞΏΞΉΟ‡ΞµΞ―Ξ± Ξ±Ο€Ο� Ο†Ο�Ο�ΞΌΞ±");

        insertSupervisorsTitle2Label.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        insertSupervisorsTitle2Label.setText("Ξ£Ο„ΞΏΞΉΟ‡ΞµΞ―Ξ± Ξ±Ο€Ο� Ξ±Ο�Ο‡ΞµΞ―ΞΏ");

        insertSupervisorsUsernameLabel.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        insertSupervisorsUsernameLabel.setText("Ξ›ΞΏΞ³Ξ±Ο�ΞΉΞ±ΟƒΞΌΟ�Ο‚");

        insertSupervisorsFileButton.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        insertSupervisorsFileButton.setText("Ξ•Ο€ΞΉΞ»ΞΏΞ³Ξ® Ξ‘Ο�Ο‡ΞµΞ―ΞΏΟ… Excel");
        insertSupervisorsFileButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                insertSupervisorsFileButtonActionPerformed(evt);
            }
        });

        insertSupervisorsSubmitButton.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        insertSupervisorsSubmitButton.setText("Ξ¥Ο€ΞΏΞ²ΞΏΞ»Ξ®");
        insertSupervisorsSubmitButton.setBorder(javax.swing.BorderFactory.createMatteBorder(0, 1, 0, 1, new java.awt.Color(68, 138, 255)));
        insertSupervisorsSubmitButton.setContentAreaFilled(false);
        insertSupervisorsSubmitButton.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                insertSupervisorsSubmitButtonMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                insertSupervisorsSubmitButtonMouseExited(evt);
            }
        });
        insertSupervisorsSubmitButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                insertSupervisorsSubmitButtonActionPerformed(evt);
            }
        });

        insertSupervisorsErrorLabel.setForeground(new java.awt.Color(255, 51, 51));
        insertSupervisorsErrorLabel.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);

        insertSupervisorsFileInfoLabel.setText("Ξ�ΞΏΟ�Ο†Ξ® : Ο�Ξ΄ΞΉΞ± ΟƒΞµΞΉΟ�Ξ¬ ΞΌΞµ Ο„Ξ·Ξ½ Ο†Ο�Ο�ΞΌΞ±.");

        insertSupervisorsFileInfo2Label.setText("Ξ— Ο€Ο�Ο�Ο„Ξ· Ξ³Ο�Ξ±ΞΌΞΌΞ® ΞµΞ―Ξ½Ξ±ΞΉ Ξ³ΞΉΞ± Ο„ΞΏΟ…Ο‚ Ο„Ξ―Ο„Ξ»ΞΏΟ…Ο‚.");

        insertSupervisorsUsernameTextField.setBackground(new java.awt.Color(241, 241, 241));
        insertSupervisorsUsernameTextField.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N

        insertSupervisorsNameTextField.setBackground(new java.awt.Color(241, 241, 241));
        insertSupervisorsNameTextField.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N

        insertSupervisorsNameLabel.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        insertSupervisorsNameLabel.setText("Ξ�Ξ½ΞΏΞΌΞ±");

        insertSupervisorsLastnameTextField.setBackground(new java.awt.Color(241, 241, 241));
        insertSupervisorsLastnameTextField.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N

        insertSupervisorsLastnameLabel.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        insertSupervisorsLastnameLabel.setText("Ξ•Ο€Ξ―ΞΈΞµΟ„ΞΏ");

        insertSupervisorsId_classLabel.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        insertSupervisorsId_classLabel.setText("Ξ�Ο‰Ξ΄ΞΉΞΊΟ�Ο‚ Ξ•ΞΎΞµΟ„Ξ±ΟƒΟ„ΞΉΞΊΞΏΟ� Ξ�Ξ­Ξ½Ο„Ο�ΞΏΟ…");

        javax.swing.GroupLayout insertSupervisorsPanelLayout = new javax.swing.GroupLayout(insertSupervisorsPanel);
        insertSupervisorsPanel.setLayout(insertSupervisorsPanelLayout);
        insertSupervisorsPanelLayout.setHorizontalGroup(
            insertSupervisorsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(insertSupervisorsPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(insertSupervisorsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(insertSupervisorsErrorLabel, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(insertSupervisorsPanelLayout.createSequentialGroup()
                        .addComponent(insertSupervisorsTitleLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 300, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(insertSupervisorsTitle2Label, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(insertSupervisorsPanelLayout.createSequentialGroup()
                        .addGroup(insertSupervisorsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(insertSupervisorsSubmitButton, javax.swing.GroupLayout.PREFERRED_SIZE, 300, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(insertSupervisorsPanelLayout.createSequentialGroup()
                                .addGroup(insertSupervisorsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(insertSupervisorsUsernameLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 300, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(insertSupervisorsUsernameTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 300, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(18, 18, 18)
                                .addGroup(insertSupervisorsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(insertSupervisorsFileInfoLabel)
                                    .addComponent(insertSupervisorsFileInfo2Label, javax.swing.GroupLayout.PREFERRED_SIZE, 321, javax.swing.GroupLayout.PREFERRED_SIZE)))
                            .addGroup(insertSupervisorsPanelLayout.createSequentialGroup()
                                .addGroup(insertSupervisorsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(insertSupervisorsNameLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 300, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(insertSupervisorsNameTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 300, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(18, 18, 18)
                                .addComponent(insertSupervisorsFileButton, javax.swing.GroupLayout.PREFERRED_SIZE, 280, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(insertSupervisorsLastnameLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 300, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(insertSupervisorsLastnameTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 300, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(insertSupervisorsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                .addComponent(insertSupervisorsId_classComboBox, javax.swing.GroupLayout.Alignment.LEADING, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(insertSupervisorsId_classLabel, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 300, Short.MAX_VALUE)))
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
        );
        insertSupervisorsPanelLayout.setVerticalGroup(
            insertSupervisorsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(insertSupervisorsPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(insertSupervisorsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(insertSupervisorsTitleLabel)
                    .addComponent(insertSupervisorsTitle2Label))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(insertSupervisorsErrorLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(insertSupervisorsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(insertSupervisorsUsernameLabel)
                    .addComponent(insertSupervisorsFileInfoLabel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(insertSupervisorsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(insertSupervisorsFileInfo2Label, javax.swing.GroupLayout.PREFERRED_SIZE, 21, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(insertSupervisorsUsernameTextField))
                .addGap(13, 13, 13)
                .addGroup(insertSupervisorsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(insertSupervisorsFileButton)
                    .addGroup(insertSupervisorsPanelLayout.createSequentialGroup()
                        .addComponent(insertSupervisorsNameLabel)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(insertSupervisorsNameTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(18, 18, 18)
                .addComponent(insertSupervisorsLastnameLabel)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(insertSupervisorsLastnameTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(insertSupervisorsId_classLabel)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(insertSupervisorsId_classComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 342, Short.MAX_VALUE)
                .addComponent(insertSupervisorsSubmitButton, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        //display all classes
        try{
            Class.forName("com.mysql.jdbc.Driver");
            String database = "jdbc:mysql://localhost:3306/examination_centers?user=root&password=026849";
            Connection connection = DriverManager.getConnection(database);
            Statement statement = connection.createStatement();
            int size = 0;
            String sql = "select count(*) from class";
            ResultSet rs = statement.executeQuery(sql);
            if(rs.first()){
                size = rs.getInt("count(*)");
            }
            rs.close();
            String[] list = new String[size];
            sql = "select * from class";
            rs = statement.executeQuery(sql);
            int i=0;
            while(rs.next()){
                list[i] = rs.getString("id_class");
                i++;
            }
            rs.close();
            insertSupervisorsId_classComboBox.setModel(new javax.swing.DefaultComboBoxModel<>(list));
            connection.close();
        }catch(ClassNotFoundException | SQLException e){
            e.printStackTrace();
        }

        usersContainerPanel.add(insertSupervisorsPanel, "card2");

        javax.swing.GroupLayout usersPanelLayout = new javax.swing.GroupLayout(usersPanel);
        usersPanel.setLayout(usersPanelLayout);
        usersPanelLayout.setHorizontalGroup(
            usersPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(usersMenuPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(usersContainerPanel, javax.swing.GroupLayout.DEFAULT_SIZE, 0, Short.MAX_VALUE)
        );
        usersPanelLayout.setVerticalGroup(
            usersPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(usersPanelLayout.createSequentialGroup()
                .addComponent(usersMenuPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(usersContainerPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        containerPanel.add(usersPanel, "card3");

        classesMenuPanel.setBackground(new java.awt.Color(255, 255, 255));

        removeClassesButton.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        removeClassesButton.setText("Ξ‘Ο†Ξ±Ξ―Ο�ΞµΟƒΞ· Ξ�Ξ­Ξ½Ο„Ο�Ο‰Ξ½");
        removeClassesButton.setBorder(javax.swing.BorderFactory.createMatteBorder(0, 1, 0, 1, new java.awt.Color(68, 138, 255)));
        removeClassesButton.setContentAreaFilled(false);
        removeClassesButton.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                removeClassesButtonMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                removeClassesButtonMouseExited(evt);
            }
        });
        removeClassesButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                removeClassesButtonActionPerformed(evt);
            }
        });

        insertClassesButton.setFont(new java.awt.Font("Tahoma", 0, 16)); // NOI18N
        insertClassesButton.setText("Ξ•ΞΉΟƒΞ±Ξ³Ο‰Ξ³Ξ® Ξ�Ξ­Ξ½Ο„Ο�Ο‰Ξ½");
        insertClassesButton.setBorder(javax.swing.BorderFactory.createMatteBorder(0, 1, 0, 1, new java.awt.Color(68, 138, 255)));
        insertClassesButton.setContentAreaFilled(false);
        insertClassesButton.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                insertClassesButtonMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                insertClassesButtonMouseExited(evt);
            }
        });
        insertClassesButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                insertClassesButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout classesMenuPanelLayout = new javax.swing.GroupLayout(classesMenuPanel);
        classesMenuPanel.setLayout(classesMenuPanelLayout);
        classesMenuPanelLayout.setHorizontalGroup(
            classesMenuPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(classesMenuPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(insertClassesButton, javax.swing.GroupLayout.PREFERRED_SIZE, 300, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(removeClassesButton, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );
        classesMenuPanelLayout.setVerticalGroup(
            classesMenuPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, classesMenuPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(classesMenuPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(removeClassesButton, javax.swing.GroupLayout.DEFAULT_SIZE, 28, Short.MAX_VALUE)
                    .addComponent(insertClassesButton, javax.swing.GroupLayout.DEFAULT_SIZE, 28, Short.MAX_VALUE))
                .addContainerGap())
        );

        classesContainerPanel.setBackground(new java.awt.Color(255, 255, 255));
        classesContainerPanel.setLayout(new java.awt.CardLayout());

        insertClassesPanel.setBackground(new java.awt.Color(255, 255, 255));

        insertClassesTitleLabel.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        insertClassesTitleLabel.setText("Ξ£Ο„ΞΏΞΉΟ‡ΞµΞ―Ξ± Ξ±Ο€Ο� Ο†Ο�Ο�ΞΌΞ±");

        insertClassesTitle2Label.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        insertClassesTitle2Label.setText("Ξ£Ο„ΞΏΞΉΟ‡ΞµΞ―Ξ± Ξ±Ο€Ο� Ξ±Ο�Ο‡ΞµΞ―ΞΏ");

        insertClassesId_classLabel.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        insertClassesId_classLabel.setText("Ξ�Ο‰Ξ΄ΞΉΞΊΟ�Ο‚ Ξ�Ξ­Ξ½Ο„Ο�ΞΏΟ…");

        insertClassesId_classTextField.setBackground(new java.awt.Color(241, 241, 241));
        insertClassesId_classTextField.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N

        insertClassesNameLabel.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        insertClassesNameLabel.setText("Ξ�Ξ½ΞΏΞΌΞ±");

        insertClassesNameTextField.setBackground(new java.awt.Color(241, 241, 241));
        insertClassesNameTextField.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N

        insertClassesAddressLabel.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        insertClassesAddressLabel.setText("Ξ”ΞΉΞµΟ�ΞΈΟ…Ξ½ΟƒΞ·");

        insertClassesId_examLabel.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        insertClassesId_examLabel.setText("Ξ�Ο‰Ξ΄ΞΉΞΊΟ�Ο‚ Ξ•ΞΎΞ­Ο„Ξ±ΟƒΞ·Ο‚");

        insertClassesId_examComboBox.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N

        insertClassesFileButton.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        insertClassesFileButton.setText("Ξ•Ο€ΞΉΞ»ΞΏΞ³Ξ® Ξ‘Ο�Ο‡ΞµΞ―ΞΏΟ… Excel");
        insertClassesFileButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                insertClassesFileButtonActionPerformed(evt);
            }
        });

        insertClassesSubmitButton.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        insertClassesSubmitButton.setText("Ξ¥Ο€ΞΏΞ²ΞΏΞ»Ξ®");
        insertClassesSubmitButton.setBorder(javax.swing.BorderFactory.createMatteBorder(0, 1, 0, 1, new java.awt.Color(68, 138, 255)));
        insertClassesSubmitButton.setContentAreaFilled(false);
        insertClassesSubmitButton.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                insertClassesSubmitButtonMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                insertClassesSubmitButtonMouseExited(evt);
            }
        });
        insertClassesSubmitButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                insertClassesSubmitButtonActionPerformed(evt);
            }
        });

        insertClassesErrorLabel.setForeground(new java.awt.Color(255, 51, 51));
        insertClassesErrorLabel.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);

        insertClassesFileInfoLabel.setText("Ξ�ΞΏΟ�Ο†Ξ® : Ο�Ξ΄ΞΉΞ± ΟƒΞµΞΉΟ�Ξ¬ ΞΌΞµ Ο„Ξ·Ξ½ Ο†Ο�Ο�ΞΌΞ±.");

        insertClassesFileInfo2Label.setText("Ξ— Ο€Ο�Ο�Ο„Ξ· Ξ³Ο�Ξ±ΞΌΞΌΞ® ΞµΞ―Ξ½Ξ±ΞΉ Ξ³ΞΉΞ± Ο„ΞΏΟ…Ο‚ Ο„Ξ―Ο„Ξ»ΞΏΟ…Ο‚.");

        insertClassesAddressTextField.setBackground(new java.awt.Color(241, 241, 241));
        insertClassesAddressTextField.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N

        javax.swing.GroupLayout insertClassesPanelLayout = new javax.swing.GroupLayout(insertClassesPanel);
        insertClassesPanel.setLayout(insertClassesPanelLayout);
        insertClassesPanelLayout.setHorizontalGroup(
            insertClassesPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(insertClassesPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(insertClassesPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(insertClassesErrorLabel, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(insertClassesPanelLayout.createSequentialGroup()
                        .addComponent(insertClassesTitleLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 300, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(insertClassesTitle2Label, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(insertClassesPanelLayout.createSequentialGroup()
                        .addGroup(insertClassesPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(insertClassesAddressLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 335, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(insertClassesId_examComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, 300, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(insertClassesSubmitButton, javax.swing.GroupLayout.PREFERRED_SIZE, 300, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(insertClassesNameLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 335, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(insertClassesPanelLayout.createSequentialGroup()
                                .addGroup(insertClassesPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(insertClassesId_classLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 300, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(insertClassesId_classTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 300, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(18, 18, 18)
                                .addGroup(insertClassesPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(insertClassesFileInfoLabel)
                                    .addComponent(insertClassesFileInfo2Label, javax.swing.GroupLayout.PREFERRED_SIZE, 321, javax.swing.GroupLayout.PREFERRED_SIZE)))
                            .addGroup(insertClassesPanelLayout.createSequentialGroup()
                                .addComponent(insertClassesNameTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 300, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(insertClassesFileButton, javax.swing.GroupLayout.PREFERRED_SIZE, 280, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(insertClassesAddressTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 300, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(insertClassesId_examLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 335, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
        );
        insertClassesPanelLayout.setVerticalGroup(
            insertClassesPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(insertClassesPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(insertClassesPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(insertClassesTitleLabel)
                    .addComponent(insertClassesTitle2Label))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(insertClassesErrorLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(insertClassesPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(insertClassesId_classLabel)
                    .addComponent(insertClassesFileInfoLabel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(insertClassesPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(insertClassesId_classTextField)
                    .addComponent(insertClassesFileInfo2Label, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(insertClassesNameLabel)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(insertClassesPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(insertClassesFileButton)
                    .addComponent(insertClassesNameTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(insertClassesAddressLabel)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(insertClassesAddressTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(insertClassesId_examLabel)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(insertClassesId_examComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 361, Short.MAX_VALUE)
                .addComponent(insertClassesSubmitButton, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        try{
            Class.forName("com.mysql.jdbc.Driver");
            String database = "jdbc:mysql://localhost:3306/examination_centers?user=root&password=026849";
            Connection connection = DriverManager.getConnection(database);
            Statement statement = connection.createStatement();
            int size = 0;
            String sql = "select count(*) from examination";
            ResultSet rs = statement.executeQuery(sql);
            if(rs.first()){
                size = rs.getInt("count(*)");
            }
            rs.close();
            String[] list = new String[size];
            sql = "select * from examination";
            rs = statement.executeQuery(sql);
            int i=0;
            while(rs.next()){
                list[i] = rs.getString("id_examination");
                i++;
            }
            rs.close();
            insertClassesId_examComboBox.setModel(new javax.swing.DefaultComboBoxModel<>(list));
            connection.close();
        }catch(ClassNotFoundException | SQLException e){
            e.printStackTrace();
        }

        classesContainerPanel.add(insertClassesPanel, "card2");

        removeClassesPanel.setBackground(new java.awt.Color(255, 255, 255));

        removeClassesTitleLabel.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        removeClassesTitleLabel.setText("Ξ£Ο„ΞΏΞΉΟ‡ΞµΞ―Ξ± Ξ±Ο€Ο� Ο†Ο�Ο�ΞΌΞ±");

        removeClassesTitle2Label.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        removeClassesTitle2Label.setText("Ξ£Ο„ΞΏΞΉΟ‡ΞµΞ―Ξ± Ξ±Ο€Ο� Ξ±Ο�Ο‡ΞµΞ―ΞΏ");

        removeClassesId_classLabel.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        removeClassesId_classLabel.setText("Ξ�Ο‰Ξ΄ΞΉΞΊΟ�Ο‚ Ξ�Ξ­Ξ½Ο„Ο�ΞΏΟ…");

        removeClassesId_classTextField.setBackground(new java.awt.Color(241, 241, 241));
        removeClassesId_classTextField.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N

        removeClassesFileButton.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        removeClassesFileButton.setText("Ξ•Ο€ΞΉΞ»ΞΏΞ³Ξ® Ξ‘Ο�Ο‡ΞµΞ―ΞΏΟ… Excel");
        removeClassesFileButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                removeClassesFileButtonActionPerformed(evt);
            }
        });

        removeClassesSubmitButton.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        removeClassesSubmitButton.setText("Ξ¥Ο€ΞΏΞ²ΞΏΞ»Ξ®");
        removeClassesSubmitButton.setBorder(javax.swing.BorderFactory.createMatteBorder(0, 1, 0, 1, new java.awt.Color(68, 138, 255)));
        removeClassesSubmitButton.setContentAreaFilled(false);
        removeClassesSubmitButton.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                removeClassesSubmitButtonMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                removeClassesSubmitButtonMouseExited(evt);
            }
        });
        removeClassesSubmitButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                removeClassesSubmitButtonActionPerformed(evt);
            }
        });

        removeClassesErrorLabel.setForeground(new java.awt.Color(255, 51, 51));
        removeClassesErrorLabel.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);

        removeClassesFileInfoLabel.setText("Ξ�ΞΏΟ�Ο†Ξ® : Ο�Ξ΄ΞΉΞ± ΟƒΞµΞΉΟ�Ξ¬ ΞΌΞµ Ο„Ξ·Ξ½ Ο†Ο�Ο�ΞΌΞ±.");

        removeClassesFileInfo2Label.setText("Ξ— Ο€Ο�Ο�Ο„Ξ· Ξ³Ο�Ξ±ΞΌΞΌΞ® ΞµΞ―Ξ½Ξ±ΞΉ Ξ³ΞΉΞ± Ο„ΞΏΟ…Ο‚ Ο„Ξ―Ο„Ξ»ΞΏΟ…Ο‚.");

        javax.swing.GroupLayout removeClassesPanelLayout = new javax.swing.GroupLayout(removeClassesPanel);
        removeClassesPanel.setLayout(removeClassesPanelLayout);
        removeClassesPanelLayout.setHorizontalGroup(
            removeClassesPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(removeClassesPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(removeClassesPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(removeClassesErrorLabel, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(removeClassesPanelLayout.createSequentialGroup()
                        .addComponent(removeClassesTitleLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 300, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(removeClassesTitle2Label, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(removeClassesPanelLayout.createSequentialGroup()
                        .addGroup(removeClassesPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(removeClassesSubmitButton, javax.swing.GroupLayout.PREFERRED_SIZE, 300, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(removeClassesPanelLayout.createSequentialGroup()
                                .addGroup(removeClassesPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(removeClassesId_classLabel, javax.swing.GroupLayout.DEFAULT_SIZE, 300, Short.MAX_VALUE)
                                    .addComponent(removeClassesId_classTextField))
                                .addGap(18, 18, 18)
                                .addGroup(removeClassesPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(removeClassesFileInfoLabel)
                                    .addComponent(removeClassesFileInfo2Label, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                            .addGroup(removeClassesPanelLayout.createSequentialGroup()
                                .addGap(318, 318, 318)
                                .addComponent(removeClassesFileButton, javax.swing.GroupLayout.PREFERRED_SIZE, 280, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(0, 22, Short.MAX_VALUE)))
                .addContainerGap())
        );
        removeClassesPanelLayout.setVerticalGroup(
            removeClassesPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(removeClassesPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(removeClassesPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(removeClassesTitleLabel)
                    .addComponent(removeClassesTitle2Label))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(removeClassesErrorLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(removeClassesPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(removeClassesId_classLabel)
                    .addComponent(removeClassesFileInfoLabel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(removeClassesPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(removeClassesId_classTextField)
                    .addComponent(removeClassesFileInfo2Label, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(32, 32, 32)
                .addComponent(removeClassesFileButton)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 462, Short.MAX_VALUE)
                .addComponent(removeClassesSubmitButton, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        classesContainerPanel.add(removeClassesPanel, "card3");

        javax.swing.GroupLayout classesPanelLayout = new javax.swing.GroupLayout(classesPanel);
        classesPanel.setLayout(classesPanelLayout);
        classesPanelLayout.setHorizontalGroup(
            classesPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(classesMenuPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(classesContainerPanel, javax.swing.GroupLayout.DEFAULT_SIZE, 0, Short.MAX_VALUE)
        );
        classesPanelLayout.setVerticalGroup(
            classesPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(classesPanelLayout.createSequentialGroup()
                .addComponent(classesMenuPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(classesContainerPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        containerPanel.add(classesPanel, "card4");

        examsContainerPanel.setBackground(new java.awt.Color(255, 255, 255));
        examsContainerPanel.setLayout(new java.awt.CardLayout());

        insertExamsPanel.setBackground(new java.awt.Color(255, 255, 255));

        insertExamsTitleLabel.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        insertExamsTitleLabel.setText("Ξ£Ο„ΞΏΞΉΟ‡ΞµΞ―Ξ± Ξ±Ο€Ο� Ο†Ο�Ο�ΞΌΞ±");

        insertExamsTitle2Label.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        insertExamsTitle2Label.setText("Ξ£Ο„ΞΏΞΉΟ‡ΞµΞ―Ξ± Ξ±Ο€Ο� Ξ±Ο�Ο‡ΞµΞ―ΞΏ");

        insertExamsId_examLabel.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        insertExamsId_examLabel.setText("Ξ�Ο‰Ξ΄ΞΉΞΊΟ�Ο‚ Ξ•ΞΎΞ­Ο„Ξ±ΟƒΞ·Ο‚");

        insertExamsId_examTextField.setBackground(new java.awt.Color(241, 241, 241));
        insertExamsId_examTextField.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N

        insertExamsDateLabel.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        insertExamsDateLabel.setText("Ξ—ΞΌΞµΟ�ΞΏΞΌΞ·Ξ½Ξ―Ξ± Ξ�Ξ½Ξ±Ο�ΞΎΞ·Ο‚ - Ξ�ΞΏΟ�Ο†Ξ® (yyyy-MM-dd)(hh-mm-ss)");

        insertExamsYearTextField.setBackground(new java.awt.Color(241, 241, 241));
        insertExamsYearTextField.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        insertExamsYearTextField.setMinimumSize(new java.awt.Dimension(45, 22));
        insertExamsYearTextField.setPreferredSize(new java.awt.Dimension(45, 22));

        insertExamsFileButton.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        insertExamsFileButton.setText("Ξ•Ο€ΞΉΞ»ΞΏΞ³Ξ® Ξ‘Ο�Ο‡ΞµΞ―ΞΏΟ… Excel");
        insertExamsFileButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                insertExamsFileButtonActionPerformed(evt);
            }
        });

        insertExamsSubmitButton.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        insertExamsSubmitButton.setText("Ξ¥Ο€ΞΏΞ²ΞΏΞ»Ξ®");
        insertExamsSubmitButton.setBorder(javax.swing.BorderFactory.createMatteBorder(0, 1, 0, 1, new java.awt.Color(68, 138, 255)));
        insertExamsSubmitButton.setContentAreaFilled(false);
        insertExamsSubmitButton.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                insertExamsSubmitButtonMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                insertExamsSubmitButtonMouseExited(evt);
            }
        });
        insertExamsSubmitButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                insertExamsSubmitButtonActionPerformed(evt);
            }
        });

        insertExamsErrorLabel.setForeground(new java.awt.Color(255, 51, 51));
        insertExamsErrorLabel.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);

        insertExamsFileInfoLabel.setText("Ξ�ΞΏΟ�Ο†Ξ® : Ο�Ξ΄ΞΉΞ± ΟƒΞµΞΉΟ�Ξ¬ ΞΌΞµ Ο„Ξ·Ξ½ Ο†Ο�Ο�ΞΌΞ±.");

        insertExamsFileInfo2Label.setText("Ξ— Ο€Ο�Ο�Ο„Ξ· Ξ³Ο�Ξ±ΞΌΞΌΞ® ΞµΞ―Ξ½Ξ±ΞΉ Ξ³ΞΉΞ± Ο„ΞΏΟ…Ο‚ Ο„Ξ―Ο„Ξ»ΞΏΟ…Ο‚.");

        insertExamsId_subjectComboBox.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N

        insertExamsId_subjectLabel.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        insertExamsId_subjectLabel.setText("Ξ�Ο‰Ξ΄ΞΉΞΊΟ�Ο‚ Ξ�Ξ±ΞΈΞ®ΞΌΞ±Ο„ΞΏΟ‚");

        insertExamsDayTextField.setBackground(new java.awt.Color(241, 241, 241));
        insertExamsDayTextField.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        insertExamsDayTextField.setMinimumSize(new java.awt.Dimension(28, 22));
        insertExamsDayTextField.setPreferredSize(new java.awt.Dimension(28, 22));

        insertExamsMonthTextField.setBackground(new java.awt.Color(241, 241, 241));
        insertExamsMonthTextField.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        insertExamsMonthTextField.setMinimumSize(new java.awt.Dimension(28, 22));
        insertExamsMonthTextField.setPreferredSize(new java.awt.Dimension(28, 22));

        insertExamsHourTextField.setBackground(new java.awt.Color(241, 241, 241));
        insertExamsHourTextField.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        insertExamsHourTextField.setMinimumSize(new java.awt.Dimension(28, 22));
        insertExamsHourTextField.setPreferredSize(new java.awt.Dimension(28, 22));

        insertExamsMinuteTextField.setBackground(new java.awt.Color(241, 241, 241));
        insertExamsMinuteTextField.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        insertExamsMinuteTextField.setMinimumSize(new java.awt.Dimension(28, 22));
        insertExamsMinuteTextField.setPreferredSize(new java.awt.Dimension(28, 22));

        insertExamsSecondTextField.setBackground(new java.awt.Color(241, 241, 241));
        insertExamsSecondTextField.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        insertExamsSecondTextField.setMinimumSize(new java.awt.Dimension(28, 22));
        insertExamsSecondTextField.setPreferredSize(new java.awt.Dimension(28, 22));
        insertExamsSecondTextField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                insertExamsSecondTextFieldActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout insertExamsPanelLayout = new javax.swing.GroupLayout(insertExamsPanel);
        insertExamsPanel.setLayout(insertExamsPanelLayout);
        insertExamsPanelLayout.setHorizontalGroup(
            insertExamsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(insertExamsPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(insertExamsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(insertExamsErrorLabel, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(insertExamsPanelLayout.createSequentialGroup()
                        .addComponent(insertExamsTitleLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 300, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(insertExamsTitle2Label, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(insertExamsPanelLayout.createSequentialGroup()
                        .addGroup(insertExamsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(insertExamsSubmitButton, javax.swing.GroupLayout.PREFERRED_SIZE, 300, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(insertExamsDateLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 335, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(insertExamsPanelLayout.createSequentialGroup()
                                .addGroup(insertExamsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(insertExamsId_examLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 300, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(insertExamsId_examTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 300, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(18, 18, 18)
                                .addGroup(insertExamsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(insertExamsFileInfoLabel)
                                    .addComponent(insertExamsFileInfo2Label, javax.swing.GroupLayout.PREFERRED_SIZE, 321, javax.swing.GroupLayout.PREFERRED_SIZE)))
                            .addComponent(insertExamsId_subjectComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, 300, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(insertExamsPanelLayout.createSequentialGroup()
                                .addGroup(insertExamsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(insertExamsId_subjectLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 300, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addGroup(insertExamsPanelLayout.createSequentialGroup()
                                        .addComponent(insertExamsYearTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(insertExamsMonthTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(insertExamsDayTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(18, 18, 18)
                                        .addComponent(insertExamsHourTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(insertExamsMinuteTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(insertExamsSecondTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                .addGap(18, 18, 18)
                                .addComponent(insertExamsFileButton, javax.swing.GroupLayout.PREFERRED_SIZE, 280, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
        );
        insertExamsPanelLayout.setVerticalGroup(
            insertExamsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(insertExamsPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(insertExamsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(insertExamsTitleLabel)
                    .addComponent(insertExamsTitle2Label))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(insertExamsErrorLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(insertExamsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(insertExamsId_examLabel)
                    .addComponent(insertExamsFileInfoLabel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(insertExamsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(insertExamsId_examTextField)
                    .addComponent(insertExamsFileInfo2Label, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(insertExamsDateLabel)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(insertExamsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(insertExamsFileButton)
                    .addComponent(insertExamsYearTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(insertExamsDayTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(insertExamsMonthTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(insertExamsHourTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(insertExamsMinuteTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(insertExamsSecondTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(insertExamsId_subjectLabel)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(insertExamsId_subjectComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 409, Short.MAX_VALUE)
                .addComponent(insertExamsSubmitButton, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        try{
            Class.forName("com.mysql.jdbc.Driver");
            String database = "jdbc:mysql://localhost:3306/examination_centers?user=root&password=026849";
            Connection connection = DriverManager.getConnection(database);
            Statement statement = connection.createStatement();
            int size = 0;
            String sql = "select count(*) from subject";
            ResultSet rs = statement.executeQuery(sql);
            if(rs.first()){
                size = rs.getInt("count(*)");
            }
            rs.close();
            String[] list = new String[size];
            sql = "select * from subject";
            rs = statement.executeQuery(sql);
            int i=0;
            while(rs.next()){
                list[i] = rs.getString("id_subject");
                i++;
            }
            rs.close();
            insertExamsId_subjectComboBox.setModel(new javax.swing.DefaultComboBoxModel<>(list));
            connection.close();
        }catch(ClassNotFoundException | SQLException e){
            e.printStackTrace();
        }

        examsContainerPanel.add(insertExamsPanel, "card2");

        removeExamsPanel.setBackground(new java.awt.Color(255, 255, 255));

        removeExamsTitleLabel.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        removeExamsTitleLabel.setText("Ξ£Ο„ΞΏΞΉΟ‡ΞµΞ―Ξ± Ξ±Ο€Ο� Ο†Ο�Ο�ΞΌΞ±");

        removeExamsTitle2Label.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        removeExamsTitle2Label.setText("Ξ£Ο„ΞΏΞΉΟ‡ΞµΞ―Ξ± Ξ±Ο€Ο� Ξ±Ο�Ο‡ΞµΞ―ΞΏ");

        removeExamsId_examLabel.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        removeExamsId_examLabel.setText("Ξ�Ο‰Ξ΄ΞΉΞΊΟ�Ο‚ Ξ•ΞΎΞ­Ο„Ξ±ΟƒΞ·Ο‚");

        removeExamsId_examTextField.setBackground(new java.awt.Color(241, 241, 241));
        removeExamsId_examTextField.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N

        removeExamsFileButton.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        removeExamsFileButton.setText("Ξ•Ο€ΞΉΞ»ΞΏΞ³Ξ® Ξ‘Ο�Ο‡ΞµΞ―ΞΏΟ… Excel");
        removeExamsFileButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                removeExamsFileButtonActionPerformed(evt);
            }
        });

        removeExamsSubmitButton.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        removeExamsSubmitButton.setText("Ξ¥Ο€ΞΏΞ²ΞΏΞ»Ξ®");
        removeExamsSubmitButton.setBorder(javax.swing.BorderFactory.createMatteBorder(0, 1, 0, 1, new java.awt.Color(68, 138, 255)));
        removeExamsSubmitButton.setContentAreaFilled(false);
        removeExamsSubmitButton.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                removeExamsSubmitButtonMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                removeExamsSubmitButtonMouseExited(evt);
            }
        });
        removeExamsSubmitButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                removeExamsSubmitButtonActionPerformed(evt);
            }
        });

        removeExamsErrorLabel.setForeground(new java.awt.Color(255, 51, 51));
        removeExamsErrorLabel.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);

        removeExamsFileInfoLabel.setText("Ξ�ΞΏΟ�Ο†Ξ® : Ο�Ξ΄ΞΉΞ± ΟƒΞµΞΉΟ�Ξ¬ ΞΌΞµ Ο„Ξ·Ξ½ Ο†Ο�Ο�ΞΌΞ±.");

        removeExamsFileInfo2Label.setText("Ξ— Ο€Ο�Ο�Ο„Ξ· Ξ³Ο�Ξ±ΞΌΞΌΞ® ΞµΞ―Ξ½Ξ±ΞΉ Ξ³ΞΉΞ± Ο„ΞΏΟ…Ο‚ Ο„Ξ―Ο„Ξ»ΞΏΟ…Ο‚.");

        javax.swing.GroupLayout removeExamsPanelLayout = new javax.swing.GroupLayout(removeExamsPanel);
        removeExamsPanel.setLayout(removeExamsPanelLayout);
        removeExamsPanelLayout.setHorizontalGroup(
            removeExamsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(removeExamsPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(removeExamsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(removeExamsErrorLabel, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(removeExamsPanelLayout.createSequentialGroup()
                        .addComponent(removeExamsTitleLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 300, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(removeExamsTitle2Label, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(removeExamsPanelLayout.createSequentialGroup()
                        .addGroup(removeExamsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(removeExamsSubmitButton, javax.swing.GroupLayout.PREFERRED_SIZE, 300, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(removeExamsPanelLayout.createSequentialGroup()
                                .addGroup(removeExamsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(removeExamsId_examLabel, javax.swing.GroupLayout.DEFAULT_SIZE, 300, Short.MAX_VALUE)
                                    .addComponent(removeExamsId_examTextField))
                                .addGap(18, 18, 18)
                                .addGroup(removeExamsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(removeExamsFileInfoLabel)
                                    .addComponent(removeExamsFileInfo2Label, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                            .addGroup(removeExamsPanelLayout.createSequentialGroup()
                                .addGap(318, 318, 318)
                                .addComponent(removeExamsFileButton, javax.swing.GroupLayout.PREFERRED_SIZE, 280, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(0, 22, Short.MAX_VALUE)))
                .addContainerGap())
        );
        removeExamsPanelLayout.setVerticalGroup(
            removeExamsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(removeExamsPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(removeExamsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(removeExamsTitleLabel)
                    .addComponent(removeExamsTitle2Label))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(removeExamsErrorLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(removeExamsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(removeExamsId_examLabel)
                    .addComponent(removeExamsFileInfoLabel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(removeExamsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(removeExamsId_examTextField)
                    .addComponent(removeExamsFileInfo2Label, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(32, 32, 32)
                .addComponent(removeExamsFileButton)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 462, Short.MAX_VALUE)
                .addComponent(removeExamsSubmitButton, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        examsContainerPanel.add(removeExamsPanel, "card3");

        examsMenuPanel.setBackground(new java.awt.Color(255, 255, 255));

        removeExamsButton.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        removeExamsButton.setText("Ξ‘Ο†Ξ±Ξ―Ο�ΞµΟƒΞ· Ξ•ΞΎΞµΟ„Ξ¬ΟƒΞµΟ‰Ξ½");
        removeExamsButton.setBorder(javax.swing.BorderFactory.createMatteBorder(0, 1, 0, 1, new java.awt.Color(68, 138, 255)));
        removeExamsButton.setContentAreaFilled(false);
        removeExamsButton.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                removeExamsButtonMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                removeExamsButtonMouseExited(evt);
            }
        });
        removeExamsButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                removeExamsButtonActionPerformed(evt);
            }
        });

        insertExamsButton.setFont(new java.awt.Font("Tahoma", 0, 16)); // NOI18N
        insertExamsButton.setText("Ξ•ΞΉΟƒΞ±Ξ³Ο‰Ξ³Ξ® Ξ•ΞΎΞµΟ„Ξ¬ΟƒΞµΟ‰Ξ½");
        insertExamsButton.setBorder(javax.swing.BorderFactory.createMatteBorder(0, 1, 0, 1, new java.awt.Color(68, 138, 255)));
        insertExamsButton.setContentAreaFilled(false);
        insertExamsButton.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                insertExamsButtonMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                insertExamsButtonMouseExited(evt);
            }
        });
        insertExamsButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                insertExamsButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout examsMenuPanelLayout = new javax.swing.GroupLayout(examsMenuPanel);
        examsMenuPanel.setLayout(examsMenuPanelLayout);
        examsMenuPanelLayout.setHorizontalGroup(
            examsMenuPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(examsMenuPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(insertExamsButton, javax.swing.GroupLayout.PREFERRED_SIZE, 300, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(removeExamsButton, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );
        examsMenuPanelLayout.setVerticalGroup(
            examsMenuPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, examsMenuPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(examsMenuPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(removeExamsButton, javax.swing.GroupLayout.DEFAULT_SIZE, 28, Short.MAX_VALUE)
                    .addComponent(insertExamsButton, javax.swing.GroupLayout.DEFAULT_SIZE, 28, Short.MAX_VALUE))
                .addContainerGap())
        );

        javax.swing.GroupLayout examsPanelLayout = new javax.swing.GroupLayout(examsPanel);
        examsPanel.setLayout(examsPanelLayout);
        examsPanelLayout.setHorizontalGroup(
            examsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(examsMenuPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(examsContainerPanel, javax.swing.GroupLayout.DEFAULT_SIZE, 0, Short.MAX_VALUE)
        );
        examsPanelLayout.setVerticalGroup(
            examsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(examsPanelLayout.createSequentialGroup()
                .addComponent(examsMenuPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(examsContainerPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        containerPanel.add(examsPanel, "card5");

        subjectsContainerPanel.setBackground(new java.awt.Color(255, 255, 255));
        subjectsContainerPanel.setLayout(new java.awt.CardLayout());

        insertSubjectsPanel.setBackground(new java.awt.Color(255, 255, 255));

        insertSubjectsTitleLabel.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        insertSubjectsTitleLabel.setText("Ξ£Ο„ΞΏΞΉΟ‡ΞµΞ―Ξ± Ξ±Ο€Ο� Ο†Ο�Ο�ΞΌΞ±");

        insertSubjectsTitle2Label.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        insertSubjectsTitle2Label.setText("Ξ£Ο„ΞΏΞΉΟ‡ΞµΞ―Ξ± Ξ±Ο€Ο� Ξ±Ο�Ο‡ΞµΞ―ΞΏ");

        insertSubjectsId_subjectLabel.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        insertSubjectsId_subjectLabel.setText("Ξ�Ο‰Ξ΄ΞΉΞΊΟ�Ο‚ Ξ�Ξ±ΞΈΞ®ΞΌΞ±Ο„ΞΏΟ‚");

        insertSubjectsSubjectTitleLabel.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        insertSubjectsSubjectTitleLabel.setText("Ξ¤Ξ―Ο„Ξ»ΞΏΟ‚");

        insertSubjectsFileButton.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        insertSubjectsFileButton.setText("Ξ•Ο€ΞΉΞ»ΞΏΞ³Ξ® Ξ‘Ο�Ο‡ΞµΞ―ΞΏΟ… Excel");
        insertSubjectsFileButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                insertSubjectsFileButtonActionPerformed(evt);
            }
        });

        insertSubjectsSubmitButton.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        insertSubjectsSubmitButton.setText("Ξ¥Ο€ΞΏΞ²ΞΏΞ»Ξ®");
        insertSubjectsSubmitButton.setBorder(javax.swing.BorderFactory.createMatteBorder(0, 1, 0, 1, new java.awt.Color(68, 138, 255)));
        insertSubjectsSubmitButton.setContentAreaFilled(false);
        insertSubjectsSubmitButton.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                insertSubjectsSubmitButtonMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                insertSubjectsSubmitButtonMouseExited(evt);
            }
        });
        insertSubjectsSubmitButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                insertSubjectsSubmitButtonActionPerformed(evt);
            }
        });

        insertSubjectsErrorLabel.setForeground(new java.awt.Color(255, 51, 51));
        insertSubjectsErrorLabel.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);

        insertSubjectsFileInfoLabel.setText("Ξ�ΞΏΟ�Ο†Ξ® : Ο�Ξ΄ΞΉΞ± ΟƒΞµΞΉΟ�Ξ¬ ΞΌΞµ Ο„Ξ·Ξ½ Ο†Ο�Ο�ΞΌΞ±.");

        insertSubjectsFileInfo2Label.setText("Ξ— Ο€Ο�Ο�Ο„Ξ· Ξ³Ο�Ξ±ΞΌΞΌΞ® ΞµΞ―Ξ½Ξ±ΞΉ Ξ³ΞΉΞ± Ο„ΞΏΟ…Ο‚ Ο„Ξ―Ο„Ξ»ΞΏΟ…Ο‚.");

        insertSubjectsDescriptionLabel.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        insertSubjectsDescriptionLabel.setText("Ξ ΞµΟ�ΞΉΞ³Ο�Ξ±Ο†Ξ®");

        insertSubjectsId_subjectTextField.setBackground(new java.awt.Color(241, 241, 241));
        insertSubjectsId_subjectTextField.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N

        insertSubjectsTitleTextField.setBackground(new java.awt.Color(241, 241, 241));
        insertSubjectsTitleTextField.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N

        insertSubjectsDescriptionTextArea.setColumns(20);
        insertSubjectsDescriptionTextArea.setFont(new java.awt.Font("Arial", 0, 10)); // NOI18N
        insertSubjectsDescriptionTextArea.setRows(4);
        jScrollPane1.setViewportView(insertSubjectsDescriptionTextArea);

        javax.swing.GroupLayout insertSubjectsPanelLayout = new javax.swing.GroupLayout(insertSubjectsPanel);
        insertSubjectsPanel.setLayout(insertSubjectsPanelLayout);
        insertSubjectsPanelLayout.setHorizontalGroup(
            insertSubjectsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(insertSubjectsPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(insertSubjectsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(insertSubjectsErrorLabel, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(insertSubjectsPanelLayout.createSequentialGroup()
                        .addComponent(insertSubjectsTitleLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 300, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(insertSubjectsTitle2Label, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(insertSubjectsPanelLayout.createSequentialGroup()
                        .addGroup(insertSubjectsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(insertSubjectsSubmitButton, javax.swing.GroupLayout.PREFERRED_SIZE, 300, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(insertSubjectsSubjectTitleLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 335, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(insertSubjectsPanelLayout.createSequentialGroup()
                                .addGroup(insertSubjectsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(insertSubjectsId_subjectLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 300, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(insertSubjectsId_subjectTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 300, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(18, 18, 18)
                                .addGroup(insertSubjectsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(insertSubjectsFileInfoLabel)
                                    .addComponent(insertSubjectsFileInfo2Label, javax.swing.GroupLayout.PREFERRED_SIZE, 321, javax.swing.GroupLayout.PREFERRED_SIZE)))
                            .addGroup(insertSubjectsPanelLayout.createSequentialGroup()
                                .addComponent(insertSubjectsTitleTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 300, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(insertSubjectsFileButton, javax.swing.GroupLayout.PREFERRED_SIZE, 280, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(insertSubjectsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                .addComponent(jScrollPane1, javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(insertSubjectsDescriptionLabel, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 300, Short.MAX_VALUE)))
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
        );
        insertSubjectsPanelLayout.setVerticalGroup(
            insertSubjectsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(insertSubjectsPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(insertSubjectsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(insertSubjectsTitleLabel)
                    .addComponent(insertSubjectsTitle2Label))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(insertSubjectsErrorLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(insertSubjectsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(insertSubjectsId_subjectLabel)
                    .addComponent(insertSubjectsFileInfoLabel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(insertSubjectsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(insertSubjectsFileInfo2Label, javax.swing.GroupLayout.PREFERRED_SIZE, 21, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(insertSubjectsId_subjectTextField))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(insertSubjectsSubjectTitleLabel)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(insertSubjectsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(insertSubjectsFileButton)
                    .addGroup(insertSubjectsPanelLayout.createSequentialGroup()
                        .addComponent(insertSubjectsTitleTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(insertSubjectsDescriptionLabel)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 373, Short.MAX_VALUE)
                .addComponent(insertSubjectsSubmitButton, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        subjectsContainerPanel.add(insertSubjectsPanel, "card2");

        removeSubjectsPanel.setBackground(new java.awt.Color(255, 255, 255));

        removeSubjectsTitleLabel.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        removeSubjectsTitleLabel.setText("Ξ£Ο„ΞΏΞΉΟ‡ΞµΞ―Ξ± Ξ±Ο€Ο� Ο†Ο�Ο�ΞΌΞ±");

        removeSubjectsTitle2Label.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        removeSubjectsTitle2Label.setText("Ξ£Ο„ΞΏΞΉΟ‡ΞµΞ―Ξ± Ξ±Ο€Ο� Ξ±Ο�Ο‡ΞµΞ―ΞΏ");

        removeSubjectsId_subjectLabel.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        removeSubjectsId_subjectLabel.setText("Ξ�Ο‰Ξ΄ΞΉΞΊΟ�Ο‚ Ξ•ΞΎΞ­Ο„Ξ±ΟƒΞ·Ο‚");

        removeSubjectsId_subjectTextField.setBackground(new java.awt.Color(241, 241, 241));
        removeSubjectsId_subjectTextField.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N

        removeSubjectsFileButton.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        removeSubjectsFileButton.setText("Ξ•Ο€ΞΉΞ»ΞΏΞ³Ξ® Ξ‘Ο�Ο‡ΞµΞ―ΞΏΟ… Excel");
        removeSubjectsFileButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                removeSubjectsFileButtonActionPerformed(evt);
            }
        });

        removeSubjectsSubmitButton.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        removeSubjectsSubmitButton.setText("Ξ¥Ο€ΞΏΞ²ΞΏΞ»Ξ®");
        removeSubjectsSubmitButton.setBorder(javax.swing.BorderFactory.createMatteBorder(0, 1, 0, 1, new java.awt.Color(68, 138, 255)));
        removeSubjectsSubmitButton.setContentAreaFilled(false);
        removeSubjectsSubmitButton.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                removeSubjectsSubmitButtonMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                removeSubjectsSubmitButtonMouseExited(evt);
            }
        });
        removeSubjectsSubmitButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                removeSubjectsSubmitButtonActionPerformed(evt);
            }
        });

        removeSubjectsErrorLabel.setForeground(new java.awt.Color(255, 51, 51));
        removeSubjectsErrorLabel.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);

        removeSubjectsFileInfoLabel.setText("Ξ�ΞΏΟ�Ο†Ξ® : Ο�Ξ΄ΞΉΞ± ΟƒΞµΞΉΟ�Ξ¬ ΞΌΞµ Ο„Ξ·Ξ½ Ο†Ο�Ο�ΞΌΞ±.");

        removeSubjectsFileInfo2Label.setText("Ξ— Ο€Ο�Ο�Ο„Ξ· Ξ³Ο�Ξ±ΞΌΞΌΞ® ΞµΞ―Ξ½Ξ±ΞΉ Ξ³ΞΉΞ± Ο„ΞΏΟ…Ο‚ Ο„Ξ―Ο„Ξ»ΞΏΟ…Ο‚.");

        javax.swing.GroupLayout removeSubjectsPanelLayout = new javax.swing.GroupLayout(removeSubjectsPanel);
        removeSubjectsPanel.setLayout(removeSubjectsPanelLayout);
        removeSubjectsPanelLayout.setHorizontalGroup(
            removeSubjectsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(removeSubjectsPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(removeSubjectsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(removeSubjectsErrorLabel, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(removeSubjectsPanelLayout.createSequentialGroup()
                        .addComponent(removeSubjectsTitleLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 300, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(removeSubjectsTitle2Label, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(removeSubjectsPanelLayout.createSequentialGroup()
                        .addGroup(removeSubjectsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(removeSubjectsSubmitButton, javax.swing.GroupLayout.PREFERRED_SIZE, 300, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(removeSubjectsPanelLayout.createSequentialGroup()
                                .addGroup(removeSubjectsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(removeSubjectsId_subjectLabel, javax.swing.GroupLayout.DEFAULT_SIZE, 300, Short.MAX_VALUE)
                                    .addComponent(removeSubjectsId_subjectTextField))
                                .addGap(18, 18, 18)
                                .addGroup(removeSubjectsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(removeSubjectsFileInfoLabel)
                                    .addComponent(removeSubjectsFileInfo2Label, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                            .addGroup(removeSubjectsPanelLayout.createSequentialGroup()
                                .addGap(318, 318, 318)
                                .addComponent(removeSubjectsFileButton, javax.swing.GroupLayout.PREFERRED_SIZE, 280, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(0, 22, Short.MAX_VALUE)))
                .addContainerGap())
        );
        removeSubjectsPanelLayout.setVerticalGroup(
            removeSubjectsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(removeSubjectsPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(removeSubjectsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(removeSubjectsTitleLabel)
                    .addComponent(removeSubjectsTitle2Label))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(removeSubjectsErrorLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(removeSubjectsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(removeSubjectsId_subjectLabel)
                    .addComponent(removeSubjectsFileInfoLabel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(removeSubjectsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(removeSubjectsId_subjectTextField)
                    .addComponent(removeSubjectsFileInfo2Label, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(32, 32, 32)
                .addComponent(removeSubjectsFileButton)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 462, Short.MAX_VALUE)
                .addComponent(removeSubjectsSubmitButton, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        subjectsContainerPanel.add(removeSubjectsPanel, "card3");

        subjectsMenuPanel.setBackground(new java.awt.Color(255, 255, 255));

        removeSubjectsButton.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        removeSubjectsButton.setText("Ξ‘Ο†Ξ±Ξ―Ο�ΞµΟƒΞ· Ξ�Ξ±ΞΈΞ·ΞΌΞ¬Ο„Ο‰Ξ½");
        removeSubjectsButton.setBorder(javax.swing.BorderFactory.createMatteBorder(0, 1, 0, 1, new java.awt.Color(68, 138, 255)));
        removeSubjectsButton.setContentAreaFilled(false);
        removeSubjectsButton.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                removeSubjectsButtonMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                removeSubjectsButtonMouseExited(evt);
            }
        });
        removeSubjectsButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                removeSubjectsButtonActionPerformed(evt);
            }
        });

        insertSubjectsButton.setFont(new java.awt.Font("Tahoma", 0, 16)); // NOI18N
        insertSubjectsButton.setText("Ξ•ΞΉΟƒΞ±Ξ³Ο‰Ξ³Ξ® Ξ�Ξ±ΞΈΞ·ΞΌΞ¬Ο„Ο‰Ξ½");
        insertSubjectsButton.setBorder(javax.swing.BorderFactory.createMatteBorder(0, 1, 0, 1, new java.awt.Color(68, 138, 255)));
        insertSubjectsButton.setContentAreaFilled(false);
        insertSubjectsButton.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                insertSubjectsButtonMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                insertSubjectsButtonMouseExited(evt);
            }
        });
        insertSubjectsButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                insertSubjectsButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout subjectsMenuPanelLayout = new javax.swing.GroupLayout(subjectsMenuPanel);
        subjectsMenuPanel.setLayout(subjectsMenuPanelLayout);
        subjectsMenuPanelLayout.setHorizontalGroup(
            subjectsMenuPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(subjectsMenuPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(insertSubjectsButton, javax.swing.GroupLayout.PREFERRED_SIZE, 300, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(removeSubjectsButton, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );
        subjectsMenuPanelLayout.setVerticalGroup(
            subjectsMenuPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, subjectsMenuPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(subjectsMenuPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(removeSubjectsButton, javax.swing.GroupLayout.DEFAULT_SIZE, 28, Short.MAX_VALUE)
                    .addComponent(insertSubjectsButton, javax.swing.GroupLayout.DEFAULT_SIZE, 28, Short.MAX_VALUE))
                .addContainerGap())
        );

        javax.swing.GroupLayout subjectsPanelLayout = new javax.swing.GroupLayout(subjectsPanel);
        subjectsPanel.setLayout(subjectsPanelLayout);
        subjectsPanelLayout.setHorizontalGroup(
            subjectsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(subjectsMenuPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(subjectsContainerPanel, javax.swing.GroupLayout.DEFAULT_SIZE, 0, Short.MAX_VALUE)
        );
        subjectsPanelLayout.setVerticalGroup(
            subjectsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(subjectsPanelLayout.createSequentialGroup()
                .addComponent(subjectsMenuPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(subjectsContainerPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        containerPanel.add(subjectsPanel, "card6");

        questionsMenuPanel.setBackground(new java.awt.Color(255, 255, 255));

        removeQuestionsButton.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        removeQuestionsButton.setText("Ξ‘Ο†Ξ±Ξ―Ο�ΞµΟƒΞ· Ξ•Ο�Ο‰Ο„Ξ®ΟƒΞµΟ‰Ξ½");
        removeQuestionsButton.setBorder(javax.swing.BorderFactory.createMatteBorder(0, 1, 0, 1, new java.awt.Color(68, 138, 255)));
        removeQuestionsButton.setContentAreaFilled(false);
        removeQuestionsButton.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                removeQuestionsButtonMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                removeQuestionsButtonMouseExited(evt);
            }
        });
        removeQuestionsButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                removeQuestionsButtonActionPerformed(evt);
            }
        });

        insertQuestionsButton.setFont(new java.awt.Font("Tahoma", 0, 16)); // NOI18N
        insertQuestionsButton.setText("Ξ•ΞΉΟƒΞ±Ξ³Ο‰Ξ³Ξ® Ξ•Ο�Ο‰Ο„Ξ®ΟƒΞµΟ‰Ξ½");
        insertQuestionsButton.setBorder(javax.swing.BorderFactory.createMatteBorder(0, 1, 0, 1, new java.awt.Color(68, 138, 255)));
        insertQuestionsButton.setContentAreaFilled(false);
        insertQuestionsButton.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                insertQuestionsButtonMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                insertQuestionsButtonMouseExited(evt);
            }
        });
        insertQuestionsButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                insertQuestionsButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout questionsMenuPanelLayout = new javax.swing.GroupLayout(questionsMenuPanel);
        questionsMenuPanel.setLayout(questionsMenuPanelLayout);
        questionsMenuPanelLayout.setHorizontalGroup(
            questionsMenuPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(questionsMenuPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(insertQuestionsButton, javax.swing.GroupLayout.PREFERRED_SIZE, 300, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(removeQuestionsButton, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );
        questionsMenuPanelLayout.setVerticalGroup(
            questionsMenuPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, questionsMenuPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(questionsMenuPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(removeQuestionsButton, javax.swing.GroupLayout.DEFAULT_SIZE, 28, Short.MAX_VALUE)
                    .addComponent(insertQuestionsButton, javax.swing.GroupLayout.DEFAULT_SIZE, 28, Short.MAX_VALUE))
                .addContainerGap())
        );

        questionsContainerPanel.setBackground(new java.awt.Color(255, 255, 255));
        questionsContainerPanel.setLayout(new java.awt.CardLayout());

        insertQuestionsPanel.setBackground(new java.awt.Color(255, 255, 255));

        insertQuestionsTitleLabel.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        insertQuestionsTitleLabel.setText("Ξ£Ο„ΞΏΞΉΟ‡ΞµΞ―Ξ± Ξ±Ο€Ο� Ο†Ο�Ο�ΞΌΞ±");

        insertQuestionsTitle2Label1.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        insertQuestionsTitle2Label1.setText("Ξ£Ο„ΞΏΞΉΟ‡ΞµΞ―Ξ± Ξ±Ο€Ο� Ξ±Ο�Ο‡ΞµΞ―ΞΏ");

        insertQuestionsId_questionLabel.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        insertQuestionsId_questionLabel.setText("Ξ�Ο‰Ξ΄ΞΉΞΊΟ�Ο‚ Ξ•Ο�Ο�Ο„Ξ·ΟƒΞ·Ο‚");

        insertQuestionsId_questionTextField.setBackground(new java.awt.Color(241, 241, 241));
        insertQuestionsId_questionTextField.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N

        insertQuestionsQuestionLabel.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        insertQuestionsQuestionLabel.setText("Ξ•Ο�Ο�Ο„Ξ·ΟƒΞ·");

        insertQuestionsId_subjectLabel.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        insertQuestionsId_subjectLabel.setText("Ξ�Ο‰Ξ΄ΞΉΞΊΟ�Ο‚ Ξ�Ξ±ΞΈΞ®ΞΌΞ±Ο„ΞΏΟ‚");

        insertQuestionsId_subjectComboBox.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N

        insertQuestionsFileButton.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        insertQuestionsFileButton.setText("Ξ•Ο€ΞΉΞ»ΞΏΞ³Ξ® Ξ‘Ο�Ο‡ΞµΞ―ΞΏΟ… Excel");
        insertQuestionsFileButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                insertQuestionsFileButtonActionPerformed(evt);
            }
        });

        insertQuestionsSubmitButton.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        insertQuestionsSubmitButton.setText("Ξ¥Ο€ΞΏΞ²ΞΏΞ»Ξ®");
        insertQuestionsSubmitButton.setBorder(javax.swing.BorderFactory.createMatteBorder(0, 1, 0, 1, new java.awt.Color(68, 138, 255)));
        insertQuestionsSubmitButton.setContentAreaFilled(false);
        insertQuestionsSubmitButton.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                insertQuestionsSubmitButtonMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                insertQuestionsSubmitButtonMouseExited(evt);
            }
        });
        insertQuestionsSubmitButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                insertQuestionsSubmitButtonActionPerformed(evt);
            }
        });

        insertQuestionsErrorLabel.setForeground(new java.awt.Color(255, 51, 51));
        insertQuestionsErrorLabel.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);

        insertQuestionsFileInfoLabel.setText("Ξ�ΞΏΟ�Ο†Ξ® : Ο�Ξ΄ΞΉΞ± ΟƒΞµΞΉΟ�Ξ¬ ΞΌΞµ Ο„Ξ·Ξ½ Ο†Ο�Ο�ΞΌΞ±.");

        insertQuestionsFileInfo2Label.setText("Ξ— Ο€Ο�Ο�Ο„Ξ· Ξ³Ο�Ξ±ΞΌΞΌΞ® ΞµΞ―Ξ½Ξ±ΞΉ Ξ³ΞΉΞ± Ο„ΞΏΟ…Ο‚ Ο„Ξ―Ο„Ξ»ΞΏΟ…Ο‚.");

        insertQuestionsAnswer1TextArea.setColumns(20);
        insertQuestionsAnswer1TextArea.setFont(new java.awt.Font("Arial", 0, 10)); // NOI18N
        insertQuestionsAnswer1TextArea.setRows(2);
        jScrollPane2.setViewportView(insertQuestionsAnswer1TextArea);

        insertQuestionsAnswer1Label.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        insertQuestionsAnswer1Label.setText("Ξ ΞΉΞΈΞ±Ξ½Ξ® Ξ‘Ο€Ξ¬Ξ½Ο„Ξ·ΟƒΞ· 1");

        insertQuestionsQuestionTextArea.setColumns(20);
        insertQuestionsQuestionTextArea.setFont(new java.awt.Font("Arial", 0, 10)); // NOI18N
        insertQuestionsQuestionTextArea.setRows(4);
        jScrollPane3.setViewportView(insertQuestionsQuestionTextArea);

        insertQuestionsAnswer2TextArea.setColumns(20);
        insertQuestionsAnswer2TextArea.setFont(new java.awt.Font("Arial", 0, 10)); // NOI18N
        insertQuestionsAnswer2TextArea.setRows(2);
        jScrollPane4.setViewportView(insertQuestionsAnswer2TextArea);

        insertQuestionsAnswer2Label.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        insertQuestionsAnswer2Label.setText("Ξ ΞΉΞΈΞ±Ξ½Ξ® Ξ‘Ο€Ξ¬Ξ½Ο„Ξ·ΟƒΞ· 2");

        insertQuestionsAnswer3TextArea.setColumns(20);
        insertQuestionsAnswer3TextArea.setFont(new java.awt.Font("Arial", 0, 10)); // NOI18N
        insertQuestionsAnswer3TextArea.setRows(2);
        jScrollPane5.setViewportView(insertQuestionsAnswer3TextArea);

        insertQuestionsAnswer3Label.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        insertQuestionsAnswer3Label.setText("Ξ ΞΉΞΈΞ±Ξ½Ξ® Ξ‘Ο€Ξ¬Ξ½Ο„Ξ·ΟƒΞ· 3");

        insertQuestionsAnswer4TextArea.setColumns(20);
        insertQuestionsAnswer4TextArea.setFont(new java.awt.Font("Arial", 0, 10)); // NOI18N
        insertQuestionsAnswer4TextArea.setRows(2);
        jScrollPane6.setViewportView(insertQuestionsAnswer4TextArea);

        insertQuestionsAnswer4Label.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        insertQuestionsAnswer4Label.setText("Ξ ΞΉΞΈΞ±Ξ½Ξ® Ξ‘Ο€Ξ¬Ξ½Ο„Ξ·ΟƒΞ· 4");

        insertQuestionsCorrectTextArea.setColumns(20);
        insertQuestionsCorrectTextArea.setFont(new java.awt.Font("Arial", 0, 10)); // NOI18N
        insertQuestionsCorrectTextArea.setRows(2);
        jScrollPane7.setViewportView(insertQuestionsCorrectTextArea);

        insertQuestionsCorrectLabel.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        insertQuestionsCorrectLabel.setText("Ξ£Ο‰ΟƒΟ„Ξ® Ξ‘Ο€Ξ¬Ξ½Ο„Ξ·ΟƒΞ·");

        javax.swing.GroupLayout insertQuestionsPanelLayout = new javax.swing.GroupLayout(insertQuestionsPanel);
        insertQuestionsPanel.setLayout(insertQuestionsPanelLayout);
        insertQuestionsPanelLayout.setHorizontalGroup(
            insertQuestionsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(insertQuestionsPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(insertQuestionsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(insertQuestionsErrorLabel, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(insertQuestionsPanelLayout.createSequentialGroup()
                        .addComponent(insertQuestionsTitleLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 300, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(insertQuestionsTitle2Label1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(insertQuestionsPanelLayout.createSequentialGroup()
                        .addGroup(insertQuestionsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(insertQuestionsId_subjectComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, 300, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(insertQuestionsSubmitButton, javax.swing.GroupLayout.PREFERRED_SIZE, 300, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(insertQuestionsQuestionLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 335, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(insertQuestionsPanelLayout.createSequentialGroup()
                                .addGroup(insertQuestionsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(insertQuestionsId_questionLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 300, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(insertQuestionsId_questionTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 300, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(18, 18, 18)
                                .addGroup(insertQuestionsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(insertQuestionsFileInfoLabel)
                                    .addComponent(insertQuestionsFileInfo2Label, javax.swing.GroupLayout.PREFERRED_SIZE, 321, javax.swing.GroupLayout.PREFERRED_SIZE)))
                            .addGroup(insertQuestionsPanelLayout.createSequentialGroup()
                                .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 300, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(insertQuestionsFileButton, javax.swing.GroupLayout.PREFERRED_SIZE, 280, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(insertQuestionsId_subjectLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 335, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(insertQuestionsAnswer1Label, javax.swing.GroupLayout.PREFERRED_SIZE, 335, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 300, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(insertQuestionsAnswer2Label, javax.swing.GroupLayout.PREFERRED_SIZE, 335, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jScrollPane4, javax.swing.GroupLayout.PREFERRED_SIZE, 300, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(insertQuestionsAnswer3Label, javax.swing.GroupLayout.PREFERRED_SIZE, 335, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jScrollPane5, javax.swing.GroupLayout.PREFERRED_SIZE, 300, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(insertQuestionsAnswer4Label, javax.swing.GroupLayout.PREFERRED_SIZE, 335, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jScrollPane6, javax.swing.GroupLayout.PREFERRED_SIZE, 300, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(insertQuestionsCorrectLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 335, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jScrollPane7, javax.swing.GroupLayout.PREFERRED_SIZE, 300, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
        );
        insertQuestionsPanelLayout.setVerticalGroup(
            insertQuestionsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(insertQuestionsPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(insertQuestionsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(insertQuestionsTitleLabel)
                    .addComponent(insertQuestionsTitle2Label1))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(insertQuestionsErrorLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(insertQuestionsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(insertQuestionsId_questionLabel)
                    .addComponent(insertQuestionsFileInfoLabel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(insertQuestionsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(insertQuestionsId_questionTextField)
                    .addComponent(insertQuestionsFileInfo2Label, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(insertQuestionsQuestionLabel)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(insertQuestionsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(insertQuestionsFileButton)
                    .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(11, 11, 11)
                .addComponent(insertQuestionsAnswer1Label)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(insertQuestionsAnswer2Label)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(insertQuestionsAnswer3Label)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane5, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(insertQuestionsAnswer4Label)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane6, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(insertQuestionsCorrectLabel)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane7, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(insertQuestionsId_subjectLabel)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(insertQuestionsId_subjectComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 54, Short.MAX_VALUE)
                .addComponent(insertQuestionsSubmitButton, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        try{
            Class.forName("com.mysql.jdbc.Driver");
            String database = "jdbc:mysql://localhost:3306/examination_centers?user=root&password=026849";
            Connection connection = DriverManager.getConnection(database);
            Statement statement = connection.createStatement();
            int size = 0;
            String sql = "select count(*) from subject";
            ResultSet rs = statement.executeQuery(sql);
            if(rs.first()){
                size = rs.getInt("count(*)");
            }
            rs.close();
            String[] list = new String[size];
            sql = "select * from subject";
            rs = statement.executeQuery(sql);
            int i=0;
            while(rs.next()){
                list[i] = rs.getString("id_subject");
                i++;
            }
            rs.close();
            insertQuestionsId_subjectComboBox.setModel(new javax.swing.DefaultComboBoxModel<>(list));
            connection.close();
        }catch(ClassNotFoundException | SQLException e){
            e.printStackTrace();
        }

        questionsContainerPanel.add(insertQuestionsPanel, "card2");

        removeQuestionsPanel.setBackground(new java.awt.Color(255, 255, 255));

        removeQuestionsTitleLabel.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        removeQuestionsTitleLabel.setText("Ξ£Ο„ΞΏΞΉΟ‡ΞµΞ―Ξ± Ξ±Ο€Ο� Ο†Ο�Ο�ΞΌΞ±");

        removeQuestionsTitle2Label.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        removeQuestionsTitle2Label.setText("Ξ£Ο„ΞΏΞΉΟ‡ΞµΞ―Ξ± Ξ±Ο€Ο� Ξ±Ο�Ο‡ΞµΞ―ΞΏ");

        removeQuestionsId_questionLabel.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        removeQuestionsId_questionLabel.setText("Ξ�Ο‰Ξ΄ΞΉΞΊΟ�Ο‚ Ξ•Ο�Ο�Ο„Ξ·ΟƒΞ·Ο‚");

        removeQuestionsId_questionTextField.setBackground(new java.awt.Color(241, 241, 241));
        removeQuestionsId_questionTextField.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N

        removeQuestionsFileButton.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        removeQuestionsFileButton.setText("Ξ•Ο€ΞΉΞ»ΞΏΞ³Ξ® Ξ‘Ο�Ο‡ΞµΞ―ΞΏΟ… Excel");
        removeQuestionsFileButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                removeQuestionsFileButtonActionPerformed(evt);
            }
        });

        removeQuestionsSubmitButton.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        removeQuestionsSubmitButton.setText("Ξ¥Ο€ΞΏΞ²ΞΏΞ»Ξ®");
        removeQuestionsSubmitButton.setBorder(javax.swing.BorderFactory.createMatteBorder(0, 1, 0, 1, new java.awt.Color(68, 138, 255)));
        removeQuestionsSubmitButton.setContentAreaFilled(false);
        removeQuestionsSubmitButton.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                removeQuestionsSubmitButtonMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                removeQuestionsSubmitButtonMouseExited(evt);
            }
        });
        removeQuestionsSubmitButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                removeQuestionsSubmitButtonActionPerformed(evt);
            }
        });

        removeQuestionsErrorLabel.setForeground(new java.awt.Color(255, 51, 51));
        removeQuestionsErrorLabel.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);

        removeQuestionsFileInfoLabel.setText("Ξ�ΞΏΟ�Ο†Ξ® : Ο�Ξ΄ΞΉΞ± ΟƒΞµΞΉΟ�Ξ¬ ΞΌΞµ Ο„Ξ·Ξ½ Ο†Ο�Ο�ΞΌΞ±.");

        removeQuestionsFileInfo2Label.setText("Ξ— Ο€Ο�Ο�Ο„Ξ· Ξ³Ο�Ξ±ΞΌΞΌΞ® ΞµΞ―Ξ½Ξ±ΞΉ Ξ³ΞΉΞ± Ο„ΞΏΟ…Ο‚ Ο„Ξ―Ο„Ξ»ΞΏΟ…Ο‚.");

        javax.swing.GroupLayout removeQuestionsPanelLayout = new javax.swing.GroupLayout(removeQuestionsPanel);
        removeQuestionsPanel.setLayout(removeQuestionsPanelLayout);
        removeQuestionsPanelLayout.setHorizontalGroup(
            removeQuestionsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(removeQuestionsPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(removeQuestionsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(removeQuestionsErrorLabel, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(removeQuestionsPanelLayout.createSequentialGroup()
                        .addComponent(removeQuestionsTitleLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 300, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(removeQuestionsTitle2Label, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(removeQuestionsPanelLayout.createSequentialGroup()
                        .addGroup(removeQuestionsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(removeQuestionsSubmitButton, javax.swing.GroupLayout.PREFERRED_SIZE, 300, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(removeQuestionsPanelLayout.createSequentialGroup()
                                .addGroup(removeQuestionsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(removeQuestionsId_questionLabel, javax.swing.GroupLayout.DEFAULT_SIZE, 300, Short.MAX_VALUE)
                                    .addComponent(removeQuestionsId_questionTextField))
                                .addGap(18, 18, 18)
                                .addGroup(removeQuestionsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(removeQuestionsFileInfoLabel)
                                    .addComponent(removeQuestionsFileInfo2Label, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                            .addGroup(removeQuestionsPanelLayout.createSequentialGroup()
                                .addGap(318, 318, 318)
                                .addComponent(removeQuestionsFileButton, javax.swing.GroupLayout.PREFERRED_SIZE, 280, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(0, 22, Short.MAX_VALUE)))
                .addContainerGap())
        );
        removeQuestionsPanelLayout.setVerticalGroup(
            removeQuestionsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(removeQuestionsPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(removeQuestionsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(removeQuestionsTitleLabel)
                    .addComponent(removeQuestionsTitle2Label))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(removeQuestionsErrorLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(removeQuestionsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(removeQuestionsId_questionLabel)
                    .addComponent(removeQuestionsFileInfoLabel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(removeQuestionsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(removeQuestionsId_questionTextField)
                    .addComponent(removeQuestionsFileInfo2Label, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(32, 32, 32)
                .addComponent(removeQuestionsFileButton)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 462, Short.MAX_VALUE)
                .addComponent(removeQuestionsSubmitButton, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        questionsContainerPanel.add(removeQuestionsPanel, "card3");

        javax.swing.GroupLayout questionsPanelLayout = new javax.swing.GroupLayout(questionsPanel);
        questionsPanel.setLayout(questionsPanelLayout);
        questionsPanelLayout.setHorizontalGroup(
            questionsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(questionsMenuPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(questionsContainerPanel, javax.swing.GroupLayout.DEFAULT_SIZE, 0, Short.MAX_VALUE)
        );
        questionsPanelLayout.setVerticalGroup(
            questionsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(questionsPanelLayout.createSequentialGroup()
                .addComponent(questionsMenuPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(questionsContainerPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        containerPanel.add(questionsPanel, "card7");

        reportsContainerPanel.setBackground(new java.awt.Color(255, 255, 255));
        reportsContainerPanel.setLayout(new java.awt.CardLayout());

        reportsStudentsPanel.setBackground(new java.awt.Color(255, 255, 255));

        reportsStudentsTitleLabel.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        reportsStudentsTitleLabel.setText("Ξ‘Ο€ΞΏΟ„ΞµΞ»Ξ­ΟƒΞΌΞ±Ο„Ξ± Ξ•ΞΎΞµΟ„Ξ±Ξ¶Ο�ΞΌΞµΞ½Ο‰Ξ½ Ξ±Ξ½Ξ¬ Ξ�Ο‰Ξ΄ΞΉΞΊΟ� Ξ•ΞΎΞ­Ο„Ξ±ΟƒΞ·Ο‚ Ο„ΞΏΟ…Ο‚");

        reportsStudentsTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Ξ�Ο‰Ξ΄.Ξ•ΞΎΞ­Ο„Ξ±ΟƒΞ·Ο‚ Ξ�Ξ±ΞΈΞ·Ο„Ξ®", "Ξ›ΞΏΞ³Ξ±Ο�ΞΉΞ±ΟƒΞΌΟ�Ο‚", "Ξ�Ξ½ΞΏΞΌΞ±", "Ξ•Ο€Ξ―ΞΈΞµΟ„ΞΏ", "Ξ�Ο‰Ξ΄.Ξ�Ξ­Ξ½Ο„Ο�ΞΏΟ…", "Ξ�Ο‰Ξ΄.Ξ•ΞΎΞ­Ο„Ξ±ΟƒΞ·Ο‚", "Ξ’Ξ¬ΞΈΞΌΞΏΟ‚"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        reportsStudentsTable.getTableHeader().setReorderingAllowed(false);
        jScrollPane9.setViewportView(reportsStudentsTable);
        DefaultTableModel model = (DefaultTableModel) reportsStudentsTable.getModel();
        String data = new StudentsReport_JerseyClient().getJson();
        if(data.isEmpty()){
            reportsStudentsMessageLabel.setText("Ξ”ΞµΞ½ Ο…Ο€Ξ¬Ο�Ο‡ΞΏΟ…Ξ½ Ξ±Ο€ΞΏΟ„ΞµΞ»Ξ­ΟƒΞΌΞ±Ο„Ξ±");
        }else{
            TypeToken<ArrayList<StudentReport>> token = new TypeToken<ArrayList<StudentReport>>() {};
            ArrayList<StudentReport> studentReport =new Gson().fromJson(data, token.getType());
            for(StudentReport st : studentReport){
                model.addRow(new String[]{
                    st.getId_class_has_user(),
                    st.getUsername(),
                    st.getName(),
                    st.getLastname(),
                    st.getId_class(),
                    st.getId_exam(),
                    st.getScore()});
        }
    }

    reportsStudentsMessageLabel.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);

    reportsStudentsDownloadButton.setText("Ξ›Ξ®Ο�Ξ·");
    reportsStudentsDownloadButton.addActionListener(new java.awt.event.ActionListener() {
        public void actionPerformed(java.awt.event.ActionEvent evt) {
            reportsStudentsDownloadButtonActionPerformed(evt);
        }
    });

    javax.swing.GroupLayout reportsStudentsPanelLayout = new javax.swing.GroupLayout(reportsStudentsPanel);
    reportsStudentsPanel.setLayout(reportsStudentsPanelLayout);
    reportsStudentsPanelLayout.setHorizontalGroup(
        reportsStudentsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
        .addGroup(reportsStudentsPanelLayout.createSequentialGroup()
            .addContainerGap()
            .addGroup(reportsStudentsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addComponent(jScrollPane9)
                .addComponent(reportsStudentsTitleLabel, javax.swing.GroupLayout.DEFAULT_SIZE, 620, Short.MAX_VALUE)
                .addComponent(reportsStudentsMessageLabel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, reportsStudentsPanelLayout.createSequentialGroup()
                    .addGap(0, 0, Short.MAX_VALUE)
                    .addComponent(reportsStudentsDownloadButton)))
            .addContainerGap())
    );
    reportsStudentsPanelLayout.setVerticalGroup(
        reportsStudentsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
        .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, reportsStudentsPanelLayout.createSequentialGroup()
            .addContainerGap()
            .addComponent(reportsStudentsTitleLabel)
            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
            .addComponent(reportsStudentsMessageLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 12, javax.swing.GroupLayout.PREFERRED_SIZE)
            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
            .addComponent(reportsStudentsDownloadButton)
            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
            .addComponent(jScrollPane9, javax.swing.GroupLayout.PREFERRED_SIZE, 550, javax.swing.GroupLayout.PREFERRED_SIZE)
            .addGap(34, 34, 34))
    );

    reportsContainerPanel.add(reportsStudentsPanel, "card2");

    reportsClassesPanel.setBackground(new java.awt.Color(255, 255, 255));

    reportsClassesMessageLabel.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);

    reportsClassesTable.setModel(new javax.swing.table.DefaultTableModel(
        new Object [][] {

        },
        new String [] {
            "Ξ�Ο‰Ξ΄.Ξ�Ξ­Ξ½Ο„Ο�ΞΏΟ…", "Ξ›ΞΏΞ³Ξ±Ο�ΞΉΞ±ΟƒΞΌΟ�Ο‚", "Ξ�Ξ½ΞΏΞΌΞ±", "Ξ•Ο€Ξ―ΞΈΞµΟ„ΞΏ", "Ξ�Ο‰Ξ΄.Ξ•ΞΎΞ­Ο„Ξ±ΟƒΞ·Ο‚", "Ξ’Ξ¬ΞΈΞΌΞΏΟ‚"
        }
    ) {
        Class[] types = new Class [] {
            java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class
        };
        boolean[] canEdit = new boolean [] {
            false, false, false, false, false, false
        };

        public Class getColumnClass(int columnIndex) {
            return types [columnIndex];
        }

        public boolean isCellEditable(int rowIndex, int columnIndex) {
            return canEdit [columnIndex];
        }
    });
    reportsClassesTable.getTableHeader().setReorderingAllowed(false);
    jScrollPane10.setViewportView(reportsClassesTable);
    DefaultTableModel modelClass = (DefaultTableModel) reportsClassesTable.getModel();
    String dataClass = new ClassesReport_JerseyClient().getJson();
    if(dataClass.isEmpty()){
        reportsClassesMessageLabel.setText("Ξ”ΞµΞ½ Ο…Ο€Ξ¬Ο�Ο‡ΞΏΟ…Ξ½ Ξ±Ο€ΞΏΟ„ΞµΞ»Ξ­ΟƒΞΌΞ±Ο„Ξ±");
    }else{
        TypeToken<ArrayList<ClassReport>> tokenClass = new TypeToken<ArrayList<ClassReport>>() {};
        ArrayList<ClassReport> classReport =new Gson().fromJson(dataClass, tokenClass.getType());
        for(ClassReport st : classReport){
            modelClass.addRow(new String[]{
                st.getId_class(),
                st.getUsername(),
                st.getName(),
                st.getLastname(),
                st.getId_exam(),
                st.getScore()});
    }
    }

    reportsClassesTitleLabel.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
    reportsClassesTitleLabel.setText("Ξ‘Ο€ΞΏΟ„ΞµΞ»Ξ­ΟƒΞΌΞ±Ο„Ξ± Ξ•ΞΎΞµΟ„Ξ±Ξ¶Ο�ΞΌΞµΞ½Ο‰Ξ½ Ξ±Ξ½Ξ¬ Ξ�Ο‰Ξ΄ΞΉΞΊΟ� Ξ•ΞΎΞµΟ„Ξ±ΟƒΟ„ΞΉΞΊΞΏΟ� Ξ�Ξ­Ξ½Ο„Ο�ΞΏΟ…");

    reportsClassesDownloadButton.setText("Ξ›Ξ®Ο�Ξ·");
    reportsClassesDownloadButton.addActionListener(new java.awt.event.ActionListener() {
        public void actionPerformed(java.awt.event.ActionEvent evt) {
            reportsClassesDownloadButtonActionPerformed(evt);
        }
    });

    javax.swing.GroupLayout reportsClassesPanelLayout = new javax.swing.GroupLayout(reportsClassesPanel);
    reportsClassesPanel.setLayout(reportsClassesPanelLayout);
    reportsClassesPanelLayout.setHorizontalGroup(
        reportsClassesPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
        .addGroup(reportsClassesPanelLayout.createSequentialGroup()
            .addContainerGap()
            .addGroup(reportsClassesPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addComponent(reportsClassesTitleLabel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jScrollPane10, javax.swing.GroupLayout.DEFAULT_SIZE, 620, Short.MAX_VALUE)
                .addComponent(reportsClassesMessageLabel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, reportsClassesPanelLayout.createSequentialGroup()
                    .addGap(0, 0, Short.MAX_VALUE)
                    .addComponent(reportsClassesDownloadButton)))
            .addContainerGap())
    );
    reportsClassesPanelLayout.setVerticalGroup(
        reportsClassesPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
        .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, reportsClassesPanelLayout.createSequentialGroup()
            .addContainerGap()
            .addComponent(reportsClassesTitleLabel)
            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
            .addComponent(reportsClassesMessageLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 12, javax.swing.GroupLayout.PREFERRED_SIZE)
            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
            .addComponent(reportsClassesDownloadButton)
            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
            .addComponent(jScrollPane10, javax.swing.GroupLayout.PREFERRED_SIZE, 550, javax.swing.GroupLayout.PREFERRED_SIZE)
            .addContainerGap(34, Short.MAX_VALUE))
    );

    reportsContainerPanel.add(reportsClassesPanel, "card3");

    reportsExamsPanel.setBackground(new java.awt.Color(255, 255, 255));

    reportsExamsTitleLabel.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
    reportsExamsTitleLabel.setText("Ξ‘Ο€ΞΏΟ„ΞµΞ»Ξ­ΟƒΞΌΞ±Ο„Ξ± Ξ•ΞΎΞµΟ„Ξ±Ξ¶Ο�ΞΌΞµΞ½Ο‰Ξ½ Ξ±Ξ½Ξ¬ Ξ•ΞΎΞ­Ο„Ξ±ΟƒΞ·");

    reportsExamsTable.setModel(new javax.swing.table.DefaultTableModel(
        new Object [][] {

        },
        new String [] {
            "Ξ�Ο‰Ξ΄.Ξ•ΞΎΞ­Ο„Ξ±ΟƒΞ·Ο‚", "Ξ›ΞΏΞ³Ξ±Ο�ΞΉΞ±ΟƒΞΌΟ�Ο‚", "Ξ�Ξ½ΞΏΞΌΞ±", "Ξ•Ο€Ξ―ΞΈΞµΟ„ΞΏ", "Ξ�Ο‰Ξ΄.Ξ�Ξ­Ξ½Ο„Ο�ΞΏΟ…", "Ξ’Ξ¬ΞΈΞΌΞΏΟ‚"
        }
    ) {
        Class[] types = new Class [] {
            java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class
        };
        boolean[] canEdit = new boolean [] {
            false, false, false, false, false, false
        };

        public Class getColumnClass(int columnIndex) {
            return types [columnIndex];
        }

        public boolean isCellEditable(int rowIndex, int columnIndex) {
            return canEdit [columnIndex];
        }
    });
    reportsExamsTable.getTableHeader().setReorderingAllowed(false);
    jScrollPane11.setViewportView(reportsExamsTable);
    DefaultTableModel modelExam = (DefaultTableModel) reportsExamsTable.getModel();
    String dataExam = new ExamsReport_JerseyClient().getJson();
    if(dataExam.isEmpty()){
        reportsExamsMessageLabel.setText("Ξ”ΞµΞ½ Ο…Ο€Ξ¬Ο�Ο‡ΞΏΟ…Ξ½ Ξ±Ο€ΞΏΟ„ΞµΞ»Ξ­ΟƒΞΌΞ±Ο„Ξ±");
    }else{
        TypeToken<ArrayList<ExamReport>> tokenExam = new TypeToken<ArrayList<ExamReport>>() {};
        ArrayList<ExamReport> examReport =new Gson().fromJson(dataExam, tokenExam.getType());
        for(ExamReport st : examReport){
            modelExam.addRow(new String[]{
                st.getId_exam(),
                st.getUsername(),
                st.getName(),
                st.getLastname(),
                st.getId_class(),
                st.getScore()});
    }
    }

    reportsExamsMessageLabel.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);

    reportsExamsDownloadButton.setText("Ξ›Ξ®Ο�Ξ·");
    reportsExamsDownloadButton.addActionListener(new java.awt.event.ActionListener() {
        public void actionPerformed(java.awt.event.ActionEvent evt) {
            reportsExamsDownloadButtonActionPerformed(evt);
        }
    });

    javax.swing.GroupLayout reportsExamsPanelLayout = new javax.swing.GroupLayout(reportsExamsPanel);
    reportsExamsPanel.setLayout(reportsExamsPanelLayout);
    reportsExamsPanelLayout.setHorizontalGroup(
        reportsExamsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
        .addGroup(reportsExamsPanelLayout.createSequentialGroup()
            .addContainerGap()
            .addGroup(reportsExamsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addComponent(reportsExamsTitleLabel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jScrollPane11, javax.swing.GroupLayout.DEFAULT_SIZE, 620, Short.MAX_VALUE)
                .addComponent(reportsExamsMessageLabel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, reportsExamsPanelLayout.createSequentialGroup()
                    .addGap(0, 0, Short.MAX_VALUE)
                    .addComponent(reportsExamsDownloadButton)))
            .addContainerGap())
    );
    reportsExamsPanelLayout.setVerticalGroup(
        reportsExamsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
        .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, reportsExamsPanelLayout.createSequentialGroup()
            .addContainerGap()
            .addComponent(reportsExamsTitleLabel)
            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
            .addComponent(reportsExamsMessageLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 12, javax.swing.GroupLayout.PREFERRED_SIZE)
            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
            .addComponent(reportsExamsDownloadButton)
            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
            .addComponent(jScrollPane11, javax.swing.GroupLayout.PREFERRED_SIZE, 550, javax.swing.GroupLayout.PREFERRED_SIZE)
            .addContainerGap(34, Short.MAX_VALUE))
    );

    reportsContainerPanel.add(reportsExamsPanel, "card4");

    reportsMenuPanel.setBackground(new java.awt.Color(255, 255, 255));

    reportsClassesButton.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
    reportsClassesButton.setText("Ξ•ΞΎΞµΟ„Ξ±ΟƒΟ„ΞΉΞΊΞ¬ Ξ�Ξ­Ξ½Ο„Ο�Ξ±");
    reportsClassesButton.setBorder(javax.swing.BorderFactory.createMatteBorder(0, 1, 0, 1, new java.awt.Color(68, 138, 255)));
    reportsClassesButton.setContentAreaFilled(false);
    reportsClassesButton.addMouseListener(new java.awt.event.MouseAdapter() {
        public void mouseEntered(java.awt.event.MouseEvent evt) {
            reportsClassesButtonMouseEntered(evt);
        }
        public void mouseExited(java.awt.event.MouseEvent evt) {
            reportsClassesButtonMouseExited(evt);
        }
    });
    reportsClassesButton.addActionListener(new java.awt.event.ActionListener() {
        public void actionPerformed(java.awt.event.ActionEvent evt) {
            reportsClassesButtonActionPerformed(evt);
        }
    });

    reportsStudentsButton.setFont(new java.awt.Font("Tahoma", 0, 16)); // NOI18N
    reportsStudentsButton.setText("Ξ•ΞΎΞµΟ„Ξ±Ξ¶Ο�ΞΌΞµΞ½ΞΏΞΉ");
    reportsStudentsButton.setBorder(javax.swing.BorderFactory.createMatteBorder(0, 1, 0, 1, new java.awt.Color(68, 138, 255)));
    reportsStudentsButton.setContentAreaFilled(false);
    reportsStudentsButton.addMouseListener(new java.awt.event.MouseAdapter() {
        public void mouseEntered(java.awt.event.MouseEvent evt) {
            reportsStudentsButtonMouseEntered(evt);
        }
        public void mouseExited(java.awt.event.MouseEvent evt) {
            reportsStudentsButtonMouseExited(evt);
        }
    });
    reportsStudentsButton.addActionListener(new java.awt.event.ActionListener() {
        public void actionPerformed(java.awt.event.ActionEvent evt) {
            reportsStudentsButtonActionPerformed(evt);
        }
    });

    reportsExamsButton.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
    reportsExamsButton.setText("Ξ•ΞΎΞµΟ„Ξ¬ΟƒΞµΞΉΟ‚");
    reportsExamsButton.setBorder(javax.swing.BorderFactory.createMatteBorder(0, 1, 0, 1, new java.awt.Color(68, 138, 255)));
    reportsExamsButton.setContentAreaFilled(false);
    reportsExamsButton.addMouseListener(new java.awt.event.MouseAdapter() {
        public void mouseEntered(java.awt.event.MouseEvent evt) {
            reportsExamsButtonMouseEntered(evt);
        }
        public void mouseExited(java.awt.event.MouseEvent evt) {
            reportsExamsButtonMouseExited(evt);
        }
    });
    reportsExamsButton.addActionListener(new java.awt.event.ActionListener() {
        public void actionPerformed(java.awt.event.ActionEvent evt) {
            reportsExamsButtonActionPerformed(evt);
        }
    });

    javax.swing.GroupLayout reportsMenuPanelLayout = new javax.swing.GroupLayout(reportsMenuPanel);
    reportsMenuPanel.setLayout(reportsMenuPanelLayout);
    reportsMenuPanelLayout.setHorizontalGroup(
        reportsMenuPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
        .addGroup(reportsMenuPanelLayout.createSequentialGroup()
            .addContainerGap()
            .addComponent(reportsStudentsButton, javax.swing.GroupLayout.PREFERRED_SIZE, 192, javax.swing.GroupLayout.PREFERRED_SIZE)
            .addGap(18, 18, 18)
            .addComponent(reportsClassesButton, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGap(18, 18, 18)
            .addComponent(reportsExamsButton, javax.swing.GroupLayout.PREFERRED_SIZE, 192, javax.swing.GroupLayout.PREFERRED_SIZE)
            .addContainerGap())
    );
    reportsMenuPanelLayout.setVerticalGroup(
        reportsMenuPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
        .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, reportsMenuPanelLayout.createSequentialGroup()
            .addContainerGap()
            .addGroup(reportsMenuPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                .addComponent(reportsClassesButton, javax.swing.GroupLayout.DEFAULT_SIZE, 28, Short.MAX_VALUE)
                .addComponent(reportsStudentsButton, javax.swing.GroupLayout.DEFAULT_SIZE, 28, Short.MAX_VALUE)
                .addComponent(reportsExamsButton, javax.swing.GroupLayout.DEFAULT_SIZE, 28, Short.MAX_VALUE))
            .addContainerGap())
    );

    javax.swing.GroupLayout reportsPanelLayout = new javax.swing.GroupLayout(reportsPanel);
    reportsPanel.setLayout(reportsPanelLayout);
    reportsPanelLayout.setHorizontalGroup(
        reportsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
        .addComponent(reportsMenuPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        .addComponent(reportsContainerPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
    );
    reportsPanelLayout.setVerticalGroup(
        reportsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
        .addGroup(reportsPanelLayout.createSequentialGroup()
            .addComponent(reportsMenuPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
            .addComponent(reportsContainerPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
    );

    containerPanel.add(reportsPanel, "card8");

    searchPanel.setBackground(new java.awt.Color(255, 255, 255));

    searchLastnameTextField.setBackground(new java.awt.Color(241, 241, 241));
    searchLastnameTextField.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N

    searchLastnameLabel.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
    searchLastnameLabel.setText("Ξ•Ο€Ξ―ΞΈΞµΟ„ΞΏ");

    searchNameTextField.setBackground(new java.awt.Color(241, 241, 241));
    searchNameTextField.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N

    searchNameLabel.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
    searchNameLabel.setText("Ξ�Ξ½ΞΏΞΌΞ±");

    searchUsernameTextField.setBackground(new java.awt.Color(241, 241, 241));
    searchUsernameTextField.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N

    searchErrorLabel.setForeground(new java.awt.Color(255, 51, 51));
    searchErrorLabel.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);

    searchTitleLabel.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
    searchTitleLabel.setText("Ξ£Ο…ΞΌΟ€Ξ»Ξ·Ο�Ο�ΟƒΟ„Ξµ Ο„Ξ± ΟƒΟ„ΞΏΞΉΟ‡ΞµΞ―Ξ± Ο‡Ο�Ξ®ΟƒΟ„Ξ· Ξ³ΞΉΞ± Ξ±Ξ½Ξ±Ξ¶Ξ®Ο„Ξ·ΟƒΞ·");

    searchUsernameLabel.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
    searchUsernameLabel.setText("Ξ›ΞΏΞ³Ξ±Ο�ΞΉΞ±ΟƒΞΌΟ�Ο‚");

    searchSubmitButton.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
    searchSubmitButton.setText("Ξ‘Ξ½Ξ±Ξ¶Ξ®Ο„Ξ·ΟƒΞ·");
    searchSubmitButton.setBorder(javax.swing.BorderFactory.createMatteBorder(0, 1, 0, 1, new java.awt.Color(68, 138, 255)));
    searchSubmitButton.setContentAreaFilled(false);
    searchSubmitButton.addMouseListener(new java.awt.event.MouseAdapter() {
        public void mouseEntered(java.awt.event.MouseEvent evt) {
            searchSubmitButtonMouseEntered(evt);
        }
        public void mouseExited(java.awt.event.MouseEvent evt) {
            searchSubmitButtonMouseExited(evt);
        }
    });
    searchSubmitButton.addActionListener(new java.awt.event.ActionListener() {
        public void actionPerformed(java.awt.event.ActionEvent evt) {
            searchSubmitButtonActionPerformed(evt);
        }
    });

    javax.swing.GroupLayout searchPanelLayout = new javax.swing.GroupLayout(searchPanel);
    searchPanel.setLayout(searchPanelLayout);
    searchPanelLayout.setHorizontalGroup(
        searchPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
        .addGroup(searchPanelLayout.createSequentialGroup()
            .addContainerGap()
            .addGroup(searchPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(searchPanelLayout.createSequentialGroup()
                    .addGroup(searchPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addComponent(searchErrorLabel, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(searchTitleLabel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGroup(searchPanelLayout.createSequentialGroup()
                            .addGroup(searchPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(searchUsernameLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 335, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(searchLastnameLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 335, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGap(0, 285, Short.MAX_VALUE)))
                    .addContainerGap())
                .addGroup(searchPanelLayout.createSequentialGroup()
                    .addGroup(searchPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addComponent(searchSubmitButton, javax.swing.GroupLayout.PREFERRED_SIZE, 300, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(searchUsernameTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 300, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(searchNameLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 335, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(searchNameTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 300, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(searchLastnameTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 300, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGap(0, 0, Short.MAX_VALUE))))
    );
    searchPanelLayout.setVerticalGroup(
        searchPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
        .addGroup(searchPanelLayout.createSequentialGroup()
            .addContainerGap()
            .addComponent(searchTitleLabel)
            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
            .addComponent(searchErrorLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
            .addComponent(searchUsernameLabel)
            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
            .addComponent(searchUsernameTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
            .addGap(18, 18, 18)
            .addComponent(searchNameLabel)
            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
            .addComponent(searchNameTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
            .addGap(18, 18, 18)
            .addComponent(searchLastnameLabel)
            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
            .addComponent(searchLastnameTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
            .addGap(18, 18, 18)
            .addComponent(searchSubmitButton, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
            .addContainerGap(446, Short.MAX_VALUE))
    );

    containerPanel.add(searchPanel, "card9");

    searchResultPanel.setBackground(new java.awt.Color(255, 255, 255));

    searchResultTitle2Label.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
    searchResultTitle2Label.setText("Ξ¤ΞΌΞ®ΞΌΞ±Ο„Ξ± ΟƒΟ„Ξ± ΞΏΟ€ΞΏΞ―Ξ± ΞµΞ―Ξ½Ξ±ΞΉ ΞµΞ³Ξ³ΞµΞ³Ο�Ξ±ΞΌΞΌΞ­Ξ½ΞΏΟ‚");

    searchResultUsernameLabel.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
    searchResultUsernameLabel.setText("Ξ›ΞΏΞ³Ξ±Ο�ΞΉΞ±ΟƒΞΌΟ�Ο‚");

    searchResultUsername.setBackground(new java.awt.Color(241, 241, 241));
    searchResultUsername.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
    searchResultUsername.setText("i");
    searchResultUsername.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(204, 204, 204)));
    searchResultUsername.setOpaque(true);

    searchResultNameLabel.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
    searchResultNameLabel.setText("Ξ�Ξ½ΞΏΞΌΞ±");

    searchResultName.setBackground(new java.awt.Color(241, 241, 241));
    searchResultName.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
    searchResultName.setText("i");
    searchResultName.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(204, 204, 204)));
    searchResultName.setOpaque(true);

    searchResultLastnameLabel.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
    searchResultLastnameLabel.setText("Ξ•Ο€Ξ―ΞΈΞµΟ„ΞΏ");

    searchResultLastname.setBackground(new java.awt.Color(241, 241, 241));
    searchResultLastname.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
    searchResultLastname.setText("i");
    searchResultLastname.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(204, 204, 204)));
    searchResultLastname.setOpaque(true);

    searchResultAddressLabel.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
    searchResultAddressLabel.setText("Ξ”ΞΉΞµΟ�ΞΈΟ…Ξ½ΟƒΞ·");

    searchResultAddress.setBackground(new java.awt.Color(241, 241, 241));
    searchResultAddress.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
    searchResultAddress.setText("i");
    searchResultAddress.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(204, 204, 204)));
    searchResultAddress.setOpaque(true);

    searchResultEmail.setBackground(new java.awt.Color(241, 241, 241));
    searchResultEmail.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
    searchResultEmail.setText("i");
    searchResultEmail.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(204, 204, 204)));
    searchResultEmail.setOpaque(true);

    searchResultEmailLabel.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
    searchResultEmailLabel.setText("Email");

    searchResultPhone.setBackground(new java.awt.Color(241, 241, 241));
    searchResultPhone.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
    searchResultPhone.setText("i");
    searchResultPhone.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(204, 204, 204)));
    searchResultPhone.setOpaque(true);

    searchResultPhoneLabel.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
    searchResultPhoneLabel.setText("Ξ¤Ξ·Ξ»Ξ­Ο†Ο‰Ξ½ΞΏ");

    searchResultRole.setBackground(new java.awt.Color(241, 241, 241));
    searchResultRole.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
    searchResultRole.setText("i");
    searchResultRole.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(204, 204, 204)));
    searchResultRole.setOpaque(true);

    searchResultRoleLabel.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
    searchResultRoleLabel.setText("Ξ΅Ο�Ξ»ΞΏΟ‚");

    searchResultTitleLabel.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
    searchResultTitleLabel.setText("Ξ£Ο„ΞΏΞΉΟ‡ΞµΞ―Ξ± Ξ§Ο�Ξ®ΟƒΟ„Ξ·");

    searchResultTable.setModel(new javax.swing.table.DefaultTableModel(
        new Object [][] {

        },
        new String [] {
            "Ξ�Ο‰Ξ΄.Ξ¤ΞΌΞ®ΞΌΞ±Ο„ΞΏΟ‚", "Ξ�Ο‰Ξ΄.Ξ•ΞΎΞ­Ο„Ξ±ΟƒΞ·Ο‚", "Ξ—ΞΌΞµΟ�ΞΏΞΌΞ·Ξ½Ξ―Ξ±", "Ξ�Ξ¬ΞΈΞ·ΞΌΞ±", "Ξ�Ξ±Ο„Ξ¬ΟƒΟ„Ξ±ΟƒΞ·"
        }
    ) {
        Class[] types = new Class [] {
            java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class
        };
        boolean[] canEdit = new boolean [] {
            false, false, false, false, false
        };

        public Class getColumnClass(int columnIndex) {
            return types [columnIndex];
        }

        public boolean isCellEditable(int rowIndex, int columnIndex) {
            return canEdit [columnIndex];
        }
    });
    //if he is a student, select one of his classes to show the results
    ListSelectionModel selectionModel = searchResultTable.getSelectionModel();
    selectionModel.addListSelectionListener(new ListSelectionListener(){
        public void valueChanged(ListSelectionEvent e){
            if(searchResultTable.getSelectedRow()>-1){
                if(searchResultRole.getText().equals("student")){
                    containerPanel.removeAll();
                    containerPanel.add(searchResultStudentPanel);
                    containerPanel.repaint();
                    containerPanel.revalidate();
                    searchResultStudentUsername.setText(searchResultUsername.getText());
                    searchResultStudentName.setText(searchResultName.getText());
                    searchResultStudentLastname.setText(searchResultLastname.getText());
                    searchResultStudentAddress.setText(searchResultAddress.getText());
                    searchResultStudentPhone.setText(searchResultPhone.getText());
                    searchResultStudentEmail.setText(searchResultEmail.getText());
                    searchResultStudentRole.setText(searchResultRole.getText());
                    searchResultStudentId_exam.setText(searchResultTable.getValueAt(searchResultTable.getSelectedRow(), 1).toString());
                    searchResultStudentId_class.setText(searchResultTable.getValueAt(searchResultTable.getSelectedRow(), 0).toString());

                    //display the results of the student's exam to searchResultStudent panel
                    try{
                        //clear the table
                        DefaultTableModel modelResult = (DefaultTableModel) searchResultStudentTable.getModel();
                        int rowCount = modelResult.getRowCount();
                        for (int x = rowCount - 1; x >= 0; x--) {
                            modelResult.removeRow(x);
                        }

                        Class.forName("com.mysql.jdbc.Driver");
                        String database = "jdbc:mysql://localhost:3306/examination_centers?user=root&password=026849";
                        Connection connection = DriverManager.getConnection(database);
                        Statement statement = connection.createStatement();
                        Statement statement2 = connection.createStatement();
                        String sql = "";
                        ResultSet rs = null;
                        ResultSet rs2 = null;
                        String open = "";
                        String question = "";
                        String id_class = searchResultStudentId_class.getText();
                        String id_user = id_userSelected;
                        String correct = "";
                        String id_examination = "";
                        int c=0;
                        //get his class data
                        sql = "select * from class where id_class = '"+id_class+"'";
                        rs = statement.executeQuery(sql);
                        if(rs.first()){
                            id_examination = rs.getString("id_examination");
                        }
                        rs.close();
                        sql = "select * from examination where id_examination = '"+id_examination+"'";
                        rs = statement.executeQuery(sql);
                        if(rs.first()){
                            open = rs.getString("open");
                        }
                        rs.close();
                        //if the class is active or initial do not show exam data else show them
                        if(open.equals("1") || open.equals("0")){
                            searchResultStudentTitle2Label.setText("Ξ� Ο‡Ο�Ξ®ΟƒΟ„Ξ·Ο‚ Ξ΄ΞµΞ½ Ξ­Ο‡ΞµΞΉ Ξ²Ξ±ΞΈΞΌΞΏΞ»ΞΏΞ³Ξ―ΞµΟ‚. Ξ— ΞµΞΎΞ­Ο„Ξ±ΟƒΞ· Ξ΄ΞµΞ½ Ξ­Ο‡ΞµΞΉ ΞΏΞ»ΞΏΞΊΞ»Ξ·Ο�Ο‰ΞΈΞµΞ―");
                        }else if(open.equals("2")){
                            //check if the user participated to the exam
                            sql = "select count(*) from class_has_user where id_user = '"+id_user+"' and"
                            + " id_class = '"+id_class+"'";
                            rs = statement.executeQuery(sql);
                            if(rs.first()){
                                c = rs.getInt("count(*)");
                            }
                            rs.close();
                            if(c==1){
                                //user does not have any questions
                                searchResultStudentTitle2Label.setText("Ξ— ΞµΞΎΞ­Ο„Ξ±ΟƒΞ· ΞΏΞ»ΞΏΞΊΞ»Ξ·Ο�Ο�ΞΈΞ·ΞΊΞµ ΞΊΞ±ΞΉ ΞΏ Ο‡Ο�Ξ®ΟƒΟ„Ξ·Ο‚ Ξ΄ΞµΞ½ ΟƒΟ…ΞΌΞΌΞµΟ„ΞµΞ―Ο‡Ξµ");
                            }else{
                                searchResultStudentTitle2Label.setText("Ξ— Ξ±Ξ½Ξ±Ξ»Ο…Ο„ΞΉΞΊΞ® Ξ²Ξ±ΞΈΞΌΞΏΞ»ΞΏΞ³Ξ―Ξ± Ο„ΞΏΟ… ΞΌΞ±ΞΈΞ·Ο„Ξ® Ξ³ΞΉΞ± Ο„Ξ·Ξ½ ΞµΞΎΞ­Ο„Ξ±ΟƒΞ·");
                                //take the user's questions
                                sql = "select * from class_has_user where id_user = '"+id_user+"' and"
                                + " id_class = '"+id_class+"'";
                                rs = statement.executeQuery(sql);
                                while(rs.next()){
                                    //find the question
                                    sql = "select question from question where id_question = '"+rs.getString("id_question")+"'";
                                    rs2 = statement2.executeQuery(sql);
                                    if(rs2.first()){
                                        question = rs2.getString("question");
                                    }
                                    rs2.close();
                                    //for every user's question, check if there is an answer
                                    if(rs.getString("answer").equals("")){
                                        //there is no answer. display only the question
                                        modelResult.addRow(new String[]{
                                            question,
                                            " - ",
                                            " - ",
                                            " - ",});
                                }else{
                                    //set-up correct answer
                                    if(rs.getString("correct").equals("0")) correct = "wrong";
                                    else if(rs.getString("correct").equals("1")) correct = "correct";
                                    modelResult.addRow(new String[]{
                                        question,
                                        rs.getString("answer"),
                                        rs.getString("date"),
                                        correct});
                            }
                        }
                    }
                    connection.close();
                }
            }catch(SQLException | ClassNotFoundException err){
                err.printStackTrace();
            }
        }
    }
    }
    });
    searchResultTable.getTableHeader().setReorderingAllowed(false);
    jScrollPane8.setViewportView(searchResultTable);

    searchResultBackButton.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
    searchResultBackButton.setText("Ξ Ξ―ΟƒΟ‰");
    searchResultBackButton.setBorder(javax.swing.BorderFactory.createMatteBorder(0, 1, 0, 1, new java.awt.Color(68, 138, 255)));
    searchResultBackButton.setContentAreaFilled(false);
    searchResultBackButton.addMouseListener(new java.awt.event.MouseAdapter() {
        public void mouseEntered(java.awt.event.MouseEvent evt) {
            searchResultBackButtonMouseEntered(evt);
        }
        public void mouseExited(java.awt.event.MouseEvent evt) {
            searchResultBackButtonMouseExited(evt);
        }
    });
    searchResultBackButton.addActionListener(new java.awt.event.ActionListener() {
        public void actionPerformed(java.awt.event.ActionEvent evt) {
            searchResultBackButtonActionPerformed(evt);
        }
    });

    javax.swing.GroupLayout searchResultPanelLayout = new javax.swing.GroupLayout(searchResultPanel);
    searchResultPanel.setLayout(searchResultPanelLayout);
    searchResultPanelLayout.setHorizontalGroup(
        searchResultPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
        .addGroup(searchResultPanelLayout.createSequentialGroup()
            .addContainerGap()
            .addGroup(searchResultPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addComponent(searchResultTitle2Label, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(searchResultPanelLayout.createSequentialGroup()
                    .addGroup(searchResultPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(searchResultPanelLayout.createSequentialGroup()
                            .addComponent(searchResultUsername, javax.swing.GroupLayout.PREFERRED_SIZE, 300, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGap(18, 18, 18)
                            .addComponent(searchResultName, javax.swing.GroupLayout.PREFERRED_SIZE, 300, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGroup(searchResultPanelLayout.createSequentialGroup()
                            .addComponent(searchResultUsernameLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 300, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGap(18, 18, 18)
                            .addComponent(searchResultNameLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 300, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addComponent(searchResultRoleLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 300, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(searchResultRole, javax.swing.GroupLayout.PREFERRED_SIZE, 300, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGroup(searchResultPanelLayout.createSequentialGroup()
                            .addGroup(searchResultPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                .addComponent(searchResultLastnameLabel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(searchResultLastname, javax.swing.GroupLayout.DEFAULT_SIZE, 300, Short.MAX_VALUE))
                            .addGroup(searchResultPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addGroup(searchResultPanelLayout.createSequentialGroup()
                                    .addGap(18, 18, 18)
                                    .addComponent(searchResultAddress, javax.swing.GroupLayout.PREFERRED_SIZE, 300, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, searchResultPanelLayout.createSequentialGroup()
                                    .addGap(18, 18, 18)
                                    .addComponent(searchResultAddressLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 300, javax.swing.GroupLayout.PREFERRED_SIZE))))
                        .addGroup(searchResultPanelLayout.createSequentialGroup()
                            .addGroup(searchResultPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                .addComponent(searchResultPhoneLabel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(searchResultPhone, javax.swing.GroupLayout.DEFAULT_SIZE, 300, Short.MAX_VALUE))
                            .addGroup(searchResultPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addGroup(searchResultPanelLayout.createSequentialGroup()
                                    .addGap(18, 18, 18)
                                    .addComponent(searchResultEmail, javax.swing.GroupLayout.PREFERRED_SIZE, 300, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, searchResultPanelLayout.createSequentialGroup()
                                    .addGap(18, 18, 18)
                                    .addComponent(searchResultEmailLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 300, javax.swing.GroupLayout.PREFERRED_SIZE)))))
                    .addGap(0, 2, Short.MAX_VALUE))
                .addComponent(jScrollPane8)
                .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, searchResultPanelLayout.createSequentialGroup()
                    .addComponent(searchResultTitleLabel)
                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(searchResultBackButton, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE)))
            .addContainerGap())
    );
    searchResultPanelLayout.setVerticalGroup(
        searchResultPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
        .addGroup(searchResultPanelLayout.createSequentialGroup()
            .addContainerGap()
            .addGroup(searchResultPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                .addComponent(searchResultBackButton, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(searchResultTitleLabel, javax.swing.GroupLayout.DEFAULT_SIZE, 26, Short.MAX_VALUE))
            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
            .addGroup(searchResultPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                .addComponent(searchResultUsernameLabel)
                .addComponent(searchResultNameLabel))
            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
            .addGroup(searchResultPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                .addComponent(searchResultName, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(searchResultUsername, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
            .addGroup(searchResultPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                .addComponent(searchResultLastnameLabel)
                .addComponent(searchResultAddressLabel))
            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
            .addGroup(searchResultPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                .addComponent(searchResultLastname)
                .addComponent(searchResultAddress))
            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
            .addGroup(searchResultPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                .addComponent(searchResultPhoneLabel)
                .addComponent(searchResultEmailLabel))
            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
            .addGroup(searchResultPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                .addComponent(searchResultPhone)
                .addComponent(searchResultEmail))
            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
            .addComponent(searchResultRoleLabel)
            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
            .addComponent(searchResultRole)
            .addGap(18, 18, 18)
            .addComponent(searchResultTitle2Label)
            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
            .addComponent(jScrollPane8, javax.swing.GroupLayout.DEFAULT_SIZE, 435, Short.MAX_VALUE)
            .addContainerGap())
    );

    containerPanel.add(searchResultPanel, "card10");

    searchResultStudentPanel.setBackground(new java.awt.Color(255, 255, 255));

    searchResultStudentBackButton.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
    searchResultStudentBackButton.setText("Ξ Ξ―ΟƒΟ‰");
    searchResultStudentBackButton.setBorder(javax.swing.BorderFactory.createMatteBorder(0, 1, 0, 1, new java.awt.Color(68, 138, 255)));
    searchResultStudentBackButton.setContentAreaFilled(false);
    searchResultStudentBackButton.addMouseListener(new java.awt.event.MouseAdapter() {
        public void mouseEntered(java.awt.event.MouseEvent evt) {
            searchResultStudentBackButtonMouseEntered(evt);
        }
        public void mouseExited(java.awt.event.MouseEvent evt) {
            searchResultStudentBackButtonMouseExited(evt);
        }
    });
    searchResultStudentBackButton.addActionListener(new java.awt.event.ActionListener() {
        public void actionPerformed(java.awt.event.ActionEvent evt) {
            searchResultStudentBackButtonActionPerformed(evt);
        }
    });

    searchResultStudentTable.setModel(new javax.swing.table.DefaultTableModel(
        new Object [][] {

        },
        new String [] {
            "Ξ•Ο�Ο�Ο„Ξ·ΟƒΞ·", "Ξ‘Ο€Ξ¬Ξ½Ο„Ξ·ΟƒΞ·", "Ξ—ΞΌΞµΟ�ΞΏΞΌΞ·Ξ½Ξ―Ξ±", "Ξ�Ο�ΞΈΟ�Ο„Ξ·Ο„Ξ±"
        }
    ) {
        Class[] types = new Class [] {
            java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class
        };
        boolean[] canEdit = new boolean [] {
            false, false, false, false
        };

        public Class getColumnClass(int columnIndex) {
            return types [columnIndex];
        }

        public boolean isCellEditable(int rowIndex, int columnIndex) {
            return canEdit [columnIndex];
        }
    });
    searchResultStudentTable.getTableHeader().setReorderingAllowed(false);
    jScrollPane12.setViewportView(searchResultStudentTable);

    searchResultStudentTitleLabel.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
    searchResultStudentTitleLabel.setText("Ξ£Ο„ΞΏΞΉΟ‡ΞµΞ―Ξ± Ξ§Ο�Ξ®ΟƒΟ„Ξ·");

    searchResultStudentRoleLabel.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
    searchResultStudentRoleLabel.setText("Ξ΅Ο�Ξ»ΞΏΟ‚");

    searchResultStudentRole.setBackground(new java.awt.Color(241, 241, 241));
    searchResultStudentRole.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
    searchResultStudentRole.setText("i");
    searchResultStudentRole.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(204, 204, 204)));
    searchResultStudentRole.setOpaque(true);

    searchResultStudentPhoneLabel.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
    searchResultStudentPhoneLabel.setText("Ξ¤Ξ·Ξ»Ξ­Ο†Ο‰Ξ½ΞΏ");

    searchResultStudentPhone.setBackground(new java.awt.Color(241, 241, 241));
    searchResultStudentPhone.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
    searchResultStudentPhone.setText("i");
    searchResultStudentPhone.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(204, 204, 204)));
    searchResultStudentPhone.setOpaque(true);

    searchResultStudentEmailLabel.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
    searchResultStudentEmailLabel.setText("Email");

    searchResultStudentEmail.setBackground(new java.awt.Color(241, 241, 241));
    searchResultStudentEmail.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
    searchResultStudentEmail.setText("i");
    searchResultStudentEmail.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(204, 204, 204)));
    searchResultStudentEmail.setOpaque(true);

    searchResultStudentAddress.setBackground(new java.awt.Color(241, 241, 241));
    searchResultStudentAddress.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
    searchResultStudentAddress.setText("i");
    searchResultStudentAddress.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(204, 204, 204)));
    searchResultStudentAddress.setOpaque(true);

    searchResultStudentAddressLabel.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
    searchResultStudentAddressLabel.setText("Ξ”ΞΉΞµΟ�ΞΈΟ…Ξ½ΟƒΞ·");

    searchResultStudentLastname.setBackground(new java.awt.Color(241, 241, 241));
    searchResultStudentLastname.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
    searchResultStudentLastname.setText("i");
    searchResultStudentLastname.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(204, 204, 204)));
    searchResultStudentLastname.setOpaque(true);

    searchResultStudentLastnameLabel.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
    searchResultStudentLastnameLabel.setText("Ξ•Ο€Ξ―ΞΈΞµΟ„ΞΏ");

    searchResultStudentName.setBackground(new java.awt.Color(241, 241, 241));
    searchResultStudentName.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
    searchResultStudentName.setText("i");
    searchResultStudentName.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(204, 204, 204)));
    searchResultStudentName.setOpaque(true);

    searchResultStudentNameLabel.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
    searchResultStudentNameLabel.setText("Ξ�Ξ½ΞΏΞΌΞ±");

    searchResultStudentUsername.setBackground(new java.awt.Color(241, 241, 241));
    searchResultStudentUsername.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
    searchResultStudentUsername.setText("i");
    searchResultStudentUsername.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(204, 204, 204)));
    searchResultStudentUsername.setOpaque(true);

    searchResultStudentUsernameLabel.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
    searchResultStudentUsernameLabel.setText("Ξ›ΞΏΞ³Ξ±Ο�ΞΉΞ±ΟƒΞΌΟ�Ο‚");

    searchResultStudentTitle2Label.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
    searchResultStudentTitle2Label.setText("Ξ’Ξ±ΞΈΞΌΞΏΞ»ΞΏΞ³Ξ―ΞµΟ‚");

    searchResultStudentId_class.setBackground(new java.awt.Color(241, 241, 241));
    searchResultStudentId_class.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
    searchResultStudentId_class.setText("i");
    searchResultStudentId_class.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(204, 204, 204)));
    searchResultStudentId_class.setOpaque(true);

    searchResultStudentId_classLabel.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
    searchResultStudentId_classLabel.setText("Ξ�Ο‰Ξ΄ΞΉΞΊΟ�Ο‚ Ξ•ΞΎΞµΟ„Ξ±ΟƒΟ„ΞΉΞΊΞΏΟ� Ξ�Ξ­Ξ½Ο„Ο�ΞΏΟ…");

    searchResultStudentId_exam.setBackground(new java.awt.Color(241, 241, 241));
    searchResultStudentId_exam.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
    searchResultStudentId_exam.setText("i");
    searchResultStudentId_exam.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(204, 204, 204)));
    searchResultStudentId_exam.setOpaque(true);

    searchResultStudentId_examLabel.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
    searchResultStudentId_examLabel.setText("Ξ�Ο‰Ξ΄ΞΉΞΊΟ�Ο‚ Ξ•ΞΎΞ­Ο„Ξ±ΟƒΞ·Ο‚");

    javax.swing.GroupLayout searchResultStudentPanelLayout = new javax.swing.GroupLayout(searchResultStudentPanel);
    searchResultStudentPanel.setLayout(searchResultStudentPanelLayout);
    searchResultStudentPanelLayout.setHorizontalGroup(
        searchResultStudentPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
        .addGroup(searchResultStudentPanelLayout.createSequentialGroup()
            .addContainerGap()
            .addGroup(searchResultStudentPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addComponent(searchResultStudentTitle2Label, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jScrollPane12)
                .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, searchResultStudentPanelLayout.createSequentialGroup()
                    .addComponent(searchResultStudentTitleLabel)
                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(searchResultStudentBackButton, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGroup(searchResultStudentPanelLayout.createSequentialGroup()
                    .addGroup(searchResultStudentPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(searchResultStudentPanelLayout.createSequentialGroup()
                            .addComponent(searchResultStudentUsername, javax.swing.GroupLayout.PREFERRED_SIZE, 300, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGap(18, 18, 18)
                            .addComponent(searchResultStudentName, javax.swing.GroupLayout.PREFERRED_SIZE, 300, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGroup(searchResultStudentPanelLayout.createSequentialGroup()
                            .addComponent(searchResultStudentUsernameLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 300, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGap(18, 18, 18)
                            .addComponent(searchResultStudentNameLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 300, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGroup(searchResultStudentPanelLayout.createSequentialGroup()
                            .addGroup(searchResultStudentPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                .addComponent(searchResultStudentLastnameLabel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(searchResultStudentLastname, javax.swing.GroupLayout.DEFAULT_SIZE, 300, Short.MAX_VALUE))
                            .addGroup(searchResultStudentPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addGroup(searchResultStudentPanelLayout.createSequentialGroup()
                                    .addGap(18, 18, 18)
                                    .addComponent(searchResultStudentAddress, javax.swing.GroupLayout.PREFERRED_SIZE, 300, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, searchResultStudentPanelLayout.createSequentialGroup()
                                    .addGap(18, 18, 18)
                                    .addComponent(searchResultStudentAddressLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 300, javax.swing.GroupLayout.PREFERRED_SIZE))))
                        .addGroup(searchResultStudentPanelLayout.createSequentialGroup()
                            .addGroup(searchResultStudentPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                .addComponent(searchResultStudentPhoneLabel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(searchResultStudentPhone, javax.swing.GroupLayout.DEFAULT_SIZE, 300, Short.MAX_VALUE))
                            .addGroup(searchResultStudentPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addGroup(searchResultStudentPanelLayout.createSequentialGroup()
                                    .addGap(18, 18, 18)
                                    .addComponent(searchResultStudentEmail, javax.swing.GroupLayout.PREFERRED_SIZE, 300, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, searchResultStudentPanelLayout.createSequentialGroup()
                                    .addGap(18, 18, 18)
                                    .addComponent(searchResultStudentEmailLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 300, javax.swing.GroupLayout.PREFERRED_SIZE))))
                        .addGroup(searchResultStudentPanelLayout.createSequentialGroup()
                            .addGroup(searchResultStudentPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(searchResultStudentRoleLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 300, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(searchResultStudentRole, javax.swing.GroupLayout.PREFERRED_SIZE, 300, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGap(18, 18, 18)
                            .addGroup(searchResultStudentPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(searchResultStudentId_classLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 300, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(searchResultStudentId_class, javax.swing.GroupLayout.PREFERRED_SIZE, 300, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addComponent(searchResultStudentId_examLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 300, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(searchResultStudentId_exam, javax.swing.GroupLayout.PREFERRED_SIZE, 300, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGap(0, 2, Short.MAX_VALUE)))
            .addContainerGap())
    );
    searchResultStudentPanelLayout.setVerticalGroup(
        searchResultStudentPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
        .addGroup(searchResultStudentPanelLayout.createSequentialGroup()
            .addContainerGap()
            .addGroup(searchResultStudentPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                .addComponent(searchResultStudentBackButton, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(searchResultStudentTitleLabel, javax.swing.GroupLayout.DEFAULT_SIZE, 26, Short.MAX_VALUE))
            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
            .addGroup(searchResultStudentPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                .addComponent(searchResultStudentUsernameLabel)
                .addComponent(searchResultStudentNameLabel))
            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
            .addGroup(searchResultStudentPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                .addComponent(searchResultStudentName, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(searchResultStudentUsername, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
            .addGroup(searchResultStudentPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                .addComponent(searchResultStudentLastnameLabel)
                .addComponent(searchResultStudentAddressLabel))
            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
            .addGroup(searchResultStudentPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                .addComponent(searchResultStudentLastname)
                .addComponent(searchResultStudentAddress))
            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
            .addGroup(searchResultStudentPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                .addComponent(searchResultStudentPhoneLabel)
                .addComponent(searchResultStudentEmailLabel))
            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
            .addGroup(searchResultStudentPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                .addComponent(searchResultStudentPhone)
                .addComponent(searchResultStudentEmail))
            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
            .addGroup(searchResultStudentPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(searchResultStudentPanelLayout.createSequentialGroup()
                    .addComponent(searchResultStudentRoleLabel)
                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                    .addComponent(searchResultStudentRole))
                .addGroup(searchResultStudentPanelLayout.createSequentialGroup()
                    .addComponent(searchResultStudentId_classLabel)
                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                    .addComponent(searchResultStudentId_class)))
            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
            .addComponent(searchResultStudentId_examLabel)
            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
            .addComponent(searchResultStudentId_exam)
            .addGap(18, 18, 18)
            .addComponent(searchResultStudentTitle2Label)
            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
            .addComponent(jScrollPane12, javax.swing.GroupLayout.DEFAULT_SIZE, 377, Short.MAX_VALUE)
            .addContainerGap())
    );

    containerPanel.add(searchResultStudentPanel, "card11");

    javax.swing.GroupLayout generalPanelLayout = new javax.swing.GroupLayout(generalPanel);
    generalPanel.setLayout(generalPanelLayout);
    generalPanelLayout.setHorizontalGroup(
        generalPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
        .addComponent(titlePanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        .addGroup(generalPanelLayout.createSequentialGroup()
            .addComponent(menuPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
            .addComponent(containerPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
    );
    generalPanelLayout.setVerticalGroup(
        generalPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
        .addGroup(generalPanelLayout.createSequentialGroup()
            .addComponent(titlePanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
            .addGroup(generalPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addComponent(menuPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(containerPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
    );

    javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
    getContentPane().setLayout(layout);
    layout.setHorizontalGroup(
        layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
        .addComponent(generalPanel, javax.swing.GroupLayout.DEFAULT_SIZE, 840, Short.MAX_VALUE)
    );
    layout.setVerticalGroup(
        layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
        .addComponent(generalPanel, javax.swing.GroupLayout.DEFAULT_SIZE, 822, Short.MAX_VALUE)
    );

    pack();
    }// </editor-fold>//GEN-END:initComponents

    private void usersButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_usersButtonActionPerformed
        // TODO add your handling code here:
        containerPanel.removeAll();
        containerPanel.add(usersPanel);
        containerPanel.repaint();
        containerPanel.revalidate();
        
        usersButton.setFont(new Font("Tahoma", Font.PLAIN, 18));
        profilButton.setFont(new Font("Tahoma", Font.PLAIN, 16));
        examsButton.setFont(new Font("Tahoma", Font.PLAIN, 16));
        classesButton.setFont(new Font("Tahoma", Font.PLAIN, 16));
        questionsButton.setFont(new Font("Tahoma", Font.PLAIN, 16));
        subjectsButton.setFont(new Font("Tahoma", Font.PLAIN, 16));
        reportsButton.setFont(new Font("Tahoma", Font.PLAIN, 16));
        searchButton.setFont(new Font("Tahoma", Font.PLAIN, 16));
        menuPanel.repaint();
    }//GEN-LAST:event_usersButtonActionPerformed

    private void usersButtonMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_usersButtonMouseEntered
        // TODO add your handling code here:
        usersButton.setBorder(BorderFactory.createMatteBorder(1,1,1,1, Color.decode("0x448AFF")));
        menuPanel.repaint();
    }//GEN-LAST:event_usersButtonMouseEntered

    private void usersButtonMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_usersButtonMouseExited
        // TODO add your handling code here:
        usersButton.setBorder(BorderFactory.createMatteBorder(0,0,1,0, Color.decode("0x448AFF")));
        menuPanel.repaint();
    }//GEN-LAST:event_usersButtonMouseExited

    private void profilButtonMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_profilButtonMouseEntered
        // TODO add your handling code here:
        profilButton.setBorder(BorderFactory.createMatteBorder(1,1,1,1, Color.decode("0x448AFF")));
        menuPanel.repaint();
    }//GEN-LAST:event_profilButtonMouseEntered

    private void profilButtonMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_profilButtonMouseExited
        // TODO add your handling code here:
        profilButton.setBorder(BorderFactory.createMatteBorder(0,0,1,0, Color.decode("0x448AFF")));
        menuPanel.repaint();
    }//GEN-LAST:event_profilButtonMouseExited

    private void classesButtonMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_classesButtonMouseEntered
        // TODO add your handling code here:
        classesButton.setBorder(BorderFactory.createMatteBorder(1,1,1,1, Color.decode("0x448AFF")));
        menuPanel.repaint();
    }//GEN-LAST:event_classesButtonMouseEntered

    private void classesButtonMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_classesButtonMouseExited
        // TODO add your handling code here:
        classesButton.setBorder(BorderFactory.createMatteBorder(0,0,1,0, Color.decode("0x448AFF")));
        menuPanel.repaint();
    }//GEN-LAST:event_classesButtonMouseExited

    private void examsButtonMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_examsButtonMouseEntered
        // TODO add your handling code here:
        examsButton.setBorder(BorderFactory.createMatteBorder(1,1,1,1, Color.decode("0x448AFF")));
        menuPanel.repaint();
    }//GEN-LAST:event_examsButtonMouseEntered

    private void examsButtonMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_examsButtonMouseExited
        // TODO add your handling code here:
        examsButton.setBorder(BorderFactory.createMatteBorder(0,0,1,0, Color.decode("0x448AFF")));
        menuPanel.repaint();
    }//GEN-LAST:event_examsButtonMouseExited

    private void subjectsButtonMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_subjectsButtonMouseEntered
        // TODO add your handling code here:
        subjectsButton.setBorder(BorderFactory.createMatteBorder(1,1,1,1, Color.decode("0x448AFF")));
        menuPanel.repaint();
    }//GEN-LAST:event_subjectsButtonMouseEntered

    private void subjectsButtonMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_subjectsButtonMousePressed
        // TODO add your handling code here:
    }//GEN-LAST:event_subjectsButtonMousePressed

    private void questionsButtonMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_questionsButtonMouseEntered
        // TODO add your handling code here:
        questionsButton.setBorder(BorderFactory.createMatteBorder(1,1,1,1, Color.decode("0x448AFF")));
        menuPanel.repaint();
    }//GEN-LAST:event_questionsButtonMouseEntered

    private void questionsButtonMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_questionsButtonMouseExited
        // TODO add your handling code here:
        questionsButton.setBorder(BorderFactory.createMatteBorder(0,0,1,0, Color.decode("0x448AFF")));
        menuPanel.repaint();
    }//GEN-LAST:event_questionsButtonMouseExited

    private void reportsButtonMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_reportsButtonMouseEntered
        // TODO add your handling code here:
        reportsButton.setBorder(BorderFactory.createMatteBorder(1,1,1,1, Color.decode("0x448AFF")));
        menuPanel.repaint();
    }//GEN-LAST:event_reportsButtonMouseEntered

    private void reportsButtonMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_reportsButtonMouseExited
        // TODO add your handling code here:
        reportsButton.setBorder(BorderFactory.createMatteBorder(0,0,1,0, Color.decode("0x448AFF")));
        menuPanel.repaint();
    }//GEN-LAST:event_reportsButtonMouseExited

    private void logoutButtonMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_logoutButtonMouseEntered
        // TODO add your handling code here:
        logoutButton.setBorder(BorderFactory.createMatteBorder(1,1,1,1, Color.decode("0x448AFF")));
        menuPanel.repaint();
    }//GEN-LAST:event_logoutButtonMouseEntered

    private void logoutButtonMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_logoutButtonMouseExited
        // TODO add your handling code here:
        logoutButton.setBorder(BorderFactory.createMatteBorder(0,0,1,0, Color.decode("0x448AFF")));
        menuPanel.repaint();
    }//GEN-LAST:event_logoutButtonMouseExited

    private void subjectsButtonMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_subjectsButtonMouseExited
        // TODO add your handling code here:
        subjectsButton.setBorder(BorderFactory.createMatteBorder(0,0,1,0, Color.decode("0x448AFF")));
        menuPanel.repaint();
    }//GEN-LAST:event_subjectsButtonMouseExited

    private void profilButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_profilButtonActionPerformed
        // TODO add your handling code here:
        containerPanel.removeAll();
        containerPanel.add(profilPanel);
        containerPanel.repaint();
        containerPanel.revalidate();
        
        profilButton.setFont(new Font("Tahoma", Font.PLAIN, 18));
        usersButton.setFont(new Font("Tahoma", Font.PLAIN, 16));
        examsButton.setFont(new Font("Tahoma", Font.PLAIN, 16));
        classesButton.setFont(new Font("Tahoma", Font.PLAIN, 16));
        questionsButton.setFont(new Font("Tahoma", Font.PLAIN, 16));
        subjectsButton.setFont(new Font("Tahoma", Font.PLAIN, 16));
        reportsButton.setFont(new Font("Tahoma", Font.PLAIN, 16));
        menuPanel.repaint();
        searchButton.setFont(new Font("Tahoma", Font.PLAIN, 16));
        
        profilUsernameLabel.setText(this.username);
        profilNameLabel.setText(this.name);
        profilLastnameLabel.setText(this.lastname);
        profilPhoneLabel.setText(this.phone);
        profilAddressLabel.setText(this.address);
        profilEmailLabel.setText(this.email);
        profilRoleLabel.setText(this.role);
    }//GEN-LAST:event_profilButtonActionPerformed

    private void classesButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_classesButtonActionPerformed
        // TODO add your handling code here:
        containerPanel.removeAll();
        containerPanel.add(classesPanel);
        containerPanel.repaint();
        containerPanel.revalidate();
        
        classesButton.setFont(new Font("Tahoma", Font.PLAIN, 18));
        usersButton.setFont(new Font("Tahoma", Font.PLAIN, 16));
        examsButton.setFont(new Font("Tahoma", Font.PLAIN, 16));
        profilButton.setFont(new Font("Tahoma", Font.PLAIN, 16));
        questionsButton.setFont(new Font("Tahoma", Font.PLAIN, 16));
        subjectsButton.setFont(new Font("Tahoma", Font.PLAIN, 16));
        reportsButton.setFont(new Font("Tahoma", Font.PLAIN, 16));
        searchButton.setFont(new Font("Tahoma", Font.PLAIN, 16));
        menuPanel.repaint();
    }//GEN-LAST:event_classesButtonActionPerformed

    private void examsButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_examsButtonActionPerformed
        // TODO add your handling code here:
        containerPanel.removeAll();
        containerPanel.add(examsPanel);
        containerPanel.repaint();
        containerPanel.revalidate();
        
        examsButton.setFont(new Font("Tahoma", Font.PLAIN, 18));
        usersButton.setFont(new Font("Tahoma", Font.PLAIN, 16));
        profilButton.setFont(new Font("Tahoma", Font.PLAIN, 16));
        classesButton.setFont(new Font("Tahoma", Font.PLAIN, 16));
        questionsButton.setFont(new Font("Tahoma", Font.PLAIN, 16));
        subjectsButton.setFont(new Font("Tahoma", Font.PLAIN, 16));
        reportsButton.setFont(new Font("Tahoma", Font.PLAIN, 16));
        searchButton.setFont(new Font("Tahoma", Font.PLAIN, 16));
        menuPanel.repaint();
    }//GEN-LAST:event_examsButtonActionPerformed

    private void subjectsButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_subjectsButtonActionPerformed
        // TODO add your handling code here:
        containerPanel.removeAll();
        containerPanel.add(subjectsPanel);
        containerPanel.repaint();
        containerPanel.revalidate();
        
        subjectsButton.setFont(new Font("Tahoma", Font.PLAIN, 18));
        usersButton.setFont(new Font("Tahoma", Font.PLAIN, 16));
        examsButton.setFont(new Font("Tahoma", Font.PLAIN, 16));
        classesButton.setFont(new Font("Tahoma", Font.PLAIN, 16));
        questionsButton.setFont(new Font("Tahoma", Font.PLAIN, 16));
        profilButton.setFont(new Font("Tahoma", Font.PLAIN, 16));
        reportsButton.setFont(new Font("Tahoma", Font.PLAIN, 16));
        searchButton.setFont(new Font("Tahoma", Font.PLAIN, 16));
        menuPanel.repaint();
    }//GEN-LAST:event_subjectsButtonActionPerformed

    private void questionsButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_questionsButtonActionPerformed
        // TODO add your handling code here:
        containerPanel.removeAll();
        containerPanel.add(questionsPanel);
        containerPanel.repaint();
        containerPanel.revalidate();
        
        questionsButton.setFont(new Font("Tahoma", Font.PLAIN, 18));
        usersButton.setFont(new Font("Tahoma", Font.PLAIN, 16));
        examsButton.setFont(new Font("Tahoma", Font.PLAIN, 16));
        classesButton.setFont(new Font("Tahoma", Font.PLAIN, 16));
        profilButton.setFont(new Font("Tahoma", Font.PLAIN, 16));
        subjectsButton.setFont(new Font("Tahoma", Font.PLAIN, 16));
        reportsButton.setFont(new Font("Tahoma", Font.PLAIN, 16));
        searchButton.setFont(new Font("Tahoma", Font.PLAIN, 16));
        menuPanel.repaint();
    }//GEN-LAST:event_questionsButtonActionPerformed

    private void reportsButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_reportsButtonActionPerformed
        // TODO add your handling code here:
        containerPanel.removeAll();
        containerPanel.add(reportsPanel);
        containerPanel.repaint();
        containerPanel.revalidate();
        
        reportsButton.setFont(new Font("Tahoma", Font.PLAIN, 18));
        usersButton.setFont(new Font("Tahoma", Font.PLAIN, 16));
        examsButton.setFont(new Font("Tahoma", Font.PLAIN, 16));
        classesButton.setFont(new Font("Tahoma", Font.PLAIN, 16));
        questionsButton.setFont(new Font("Tahoma", Font.PLAIN, 16));
        subjectsButton.setFont(new Font("Tahoma", Font.PLAIN, 16));
        profilButton.setFont(new Font("Tahoma", Font.PLAIN, 16));
        searchButton.setFont(new Font("Tahoma", Font.PLAIN, 16));
        menuPanel.repaint();
    }//GEN-LAST:event_reportsButtonActionPerformed

    private void profilButtonMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_profilButtonMouseClicked
        // TODO add your handling code here:
    }//GEN-LAST:event_profilButtonMouseClicked

    private void logoutButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_logoutButtonActionPerformed
        // TODO add your handling code here:
        this.dispose();
        Login login = new Login();
        login.setVisible(true);
        login.setLocationRelativeTo(null);
    }//GEN-LAST:event_logoutButtonActionPerformed

    private void insertUsersSubmitButtonMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_insertUsersSubmitButtonMouseEntered
        // TODO add your handling code here:
        insertUsersSubmitButton.setBorder(BorderFactory.createMatteBorder(1,1,1,1,Color.decode("0x448AFF")));
    }//GEN-LAST:event_insertUsersSubmitButtonMouseEntered

    private void insertUsersSubmitButtonMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_insertUsersSubmitButtonMouseExited
        // TODO add your handling code here:
        insertUsersSubmitButton.setBorder(BorderFactory.createMatteBorder(0,1,0,1,Color.decode("0x448AFF")));
    }//GEN-LAST:event_insertUsersSubmitButtonMouseExited

    private void removeUsersButtonMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_removeUsersButtonMouseEntered
        // TODO add your handling code here:
        removeUsersButton.setBorder(BorderFactory.createMatteBorder(1,1,1,1,Color.decode("0x448AFF")));
    }//GEN-LAST:event_removeUsersButtonMouseEntered

    private void removeUsersButtonMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_removeUsersButtonMouseExited
        // TODO add your handling code here:
        removeUsersButton.setBorder(BorderFactory.createMatteBorder(0,1,0,1,Color.decode("0x448AFF")));
    }//GEN-LAST:event_removeUsersButtonMouseExited

    private void insertUsersSubmitButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_insertUsersSubmitButtonActionPerformed
        // TODO add your handling code here:
        //get users input
        String username = insertUsersUsernameTextField.getText();
        String password = "";
        for(int i=0;i<insertUsersPasswordPasswordField.getPassword().length;i++){
            password += insertUsersPasswordPasswordField.getPassword()[i];
        }
        String name = insertUsersNameTextField.getText();
        String lastname = insertUsersLastnameTextField.getText();
        String phone = insertUsersPhoneTextField.getText();
        String address = insertUsersAddressTextField.getText();
        String email = insertUsersEmailTextField.getText();
        String role = "";
        if(insertUsersRoleComboBox.getSelectedItem().equals("Admin")){
            role = "0";
        }else if(insertUsersRoleComboBox.getSelectedItem().equals("Supervisor")){
            role = "1";
        }else{
            role = "2";
        }
        //check if he gave null or symbols
        if(username.isEmpty() || password.isEmpty() || name.isEmpty() || lastname.isEmpty() || phone.isEmpty()
                || address.isEmpty() || email.isEmpty() || role.isEmpty()){
            insertUsersErrorLabel.setText("Ξ Ο�Ξ­Ο€ΞµΞΉ Ξ½Ξ± ΟƒΟ…ΞΌΟ€Ξ»Ξ·Ο�Ο�ΟƒΞµΟ„Ξµ Ο�Ξ»Ξ± Ο„Ξ± Ο€ΞµΞ΄Ξ―Ξ±");
        }else{
            String regex_n = "[a-zA-ZΞ±-Ο‰Ξ‘-Ξ©Ο�Ο�Ξ­Ξ¬Ξ―Ξ®Ο�0-9]{5,50}";
            String regex_a = "[a-zA-ZΞ±-Ο‰Ξ‘-Ξ©Ο�Ο�Ξ­Ξ¬Ξ―Ξ®Ο�0-9 ,.]{5,50}";
            String regex_e = "[a-zA-ZΞ±-Ο‰Ξ‘-Ξ©Ο�Ο�Ξ­Ξ¬Ξ―Ξ®Ο�0-9,.@]{5,60}";
            if(!username.matches(regex_n) || !password.matches(regex_n) || !name.matches(regex_n) ||
                    !lastname.matches(regex_n) || !phone.matches("[0-9]{5,12}") || !address.matches(regex_a) ||
                    !email.matches(regex_e)){
                insertUsersErrorLabel.setText("Ξ¤Ξ± Ο€ΞµΞ΄Ξ―Ξ± Ξ΄ΞµΞ½ ΞΌΟ€ΞΏΟ�ΞΏΟ�Ξ½ Ξ½Ξ± Ο€ΞµΟ�ΞΉΞ­Ο‡ΞΏΟ…Ξ½ ΟƒΟ�ΞΌΞ²ΞΏΞ»Ξ± Ξ® Ξ»ΞΉΞ³Ο�Ο„ΞµΟ�ΞΏΟ…Ο‚ Ξ±Ο€Ο� 5 Ο‡Ξ±Ο�Ξ±ΞΊΟ„Ξ®Ο�ΞµΟ‚ Ξ· Ο€Ξ¬Ξ½Ο‰ Ξ±Ο€Ο� Ο„ΞΏ Ο�Ο�ΞΉΞΏ");
            }else{
                try{
                    Class.forName("com.mysql.jdbc.Driver");
                    String database = "jdbc:mysql://localhost:3306/examination_centers?user=root&password=026849";
                    Connection connection = DriverManager.getConnection(database);
                    Statement statement = connection.createStatement();
                    //check if the username does not already exists in the database
                    String sql = "select count(*) from user where username = '"+username+"'";
                    ResultSet rs = statement.executeQuery(sql);
                    boolean flag = false;
                    if(rs.first()){
                        if(rs.getInt("count(*)")==0)
                            flag = true;
                    }
                    rs.close();
                    //make the insert
                    if(flag){
                        sql = "insert into user(username,password,name,lastname,phone,address,email,role) values"
                                + "('"+username+"','"+password+"','"+name+"','"+lastname+"','"+phone+"',"
                                + "'"+address+"','"+email+"','"+role+"')";
                        statement.executeUpdate(sql);
                        insertUsersErrorLabel.setText("Ξ— ΞµΞΉΟƒΞ±Ξ³Ο‰Ξ³Ξ® Ο„ΞΏΟ… Ο‡Ο�Ξ®ΟƒΟ„Ξ· Ο€Ο�Ξ±Ξ³ΞΌΞ±Ο„ΞΏΟ€ΞΏΞΉΞ®ΞΈΞ·ΞΊΞµ");
                    }else{
                        insertUsersErrorLabel.setText("Ξ¤ΞΏ Ο�Ξ½ΞΏΞΌΞ± Ξ»ΞΏΞ³Ξ±Ο�ΞΉΞ±ΟƒΞΌΞΏΟ� Ο…Ο€Ξ¬Ο�Ο‡ΞµΞΉ Ξ®Ξ΄Ξ·. Ξ§Ο�Ξ·ΟƒΞΉΞΌΞΏΟ€ΞΏΞΉΞµΞ―ΟƒΟ„Ξµ Ξ΄ΞΉΞ±Ο†ΞΏΟ�ΞµΟ„ΞΉΞΊΟ�");
                    }
                    connection.close();
                }catch(ClassNotFoundException | SQLException e){e.printStackTrace();}
            }
        }
    }//GEN-LAST:event_insertUsersSubmitButtonActionPerformed

    private void removeUsersButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_removeUsersButtonActionPerformed
        // TODO add your handling code here:
        usersContainerPanel.removeAll();
        usersContainerPanel.add(removeUsersPanel);
        usersContainerPanel.repaint();
        usersContainerPanel.revalidate();
        
        insertUsersButton.setFont(new java.awt.Font("Tahoma", 0, 14));
        removeUsersButton.setFont(new java.awt.Font("Tahoma", 0, 16));
        insertSupervisorsButton.setFont(new java.awt.Font("Tahoma", 0, 14));
    }//GEN-LAST:event_removeUsersButtonActionPerformed

    private void insertUsersLastnameTextFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_insertUsersLastnameTextFieldActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_insertUsersLastnameTextFieldActionPerformed

    private void insertUsersButtonMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_insertUsersButtonMouseEntered
        // TODO add your handling code here:
        insertUsersButton.setBorder(BorderFactory.createMatteBorder(1,1,1,1,Color.decode("0x448AFF")));
    }//GEN-LAST:event_insertUsersButtonMouseEntered

    private void insertUsersButtonMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_insertUsersButtonMouseExited
        // TODO add your handling code here:
        insertUsersButton.setBorder(BorderFactory.createMatteBorder(0,1,0,1,Color.decode("0x448AFF")));
    }//GEN-LAST:event_insertUsersButtonMouseExited

    private void insertUsersButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_insertUsersButtonActionPerformed
        // TODO add your handling code here:
        usersContainerPanel.removeAll();
        usersContainerPanel.add(insertUsersPanel);
        usersContainerPanel.repaint();
        usersContainerPanel.revalidate();
        
        insertUsersButton.setFont(new java.awt.Font("Tahoma", 0, 16));
        removeUsersButton.setFont(new java.awt.Font("Tahoma", 0, 14));
        insertSupervisorsButton.setFont(new java.awt.Font("Tahoma", 0, 14));
    }//GEN-LAST:event_insertUsersButtonActionPerformed

    private void insertUsersFileButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_insertUsersFileButtonActionPerformed
        // TODO add your handling code here:
        int returnVal = fileChooser.showOpenDialog(AdminApp.this);
        if (returnVal == JFileChooser.APPROVE_OPTION) {
            File file = fileChooser.getSelectedFile();
            //This is where a real application would open the file.
            Connection connection = null;
            Statement statement = null;
            try{
                Class.forName("com.mysql.jdbc.Driver");
                String database = "jdbc:mysql://localhost:3306/examination_centers?user=root&password=026849";
                connection = DriverManager.getConnection(database);
                statement = connection.createStatement();
                //set auto commit to false, make sure all entries will insert before commiting
                connection.setAutoCommit(false);
                String msg="";
                Workbook workbook=null;
                try{
                    //entries : number of uploaded and inserted to database rows
                    int entries=0;
                    workbook = WorkbookFactory.create(file);
                    Sheet sheet = workbook.getSheetAt(0);
                    DataFormatter dataFormatter = new DataFormatter();
                    for (Row row: sheet) {
                        if(row.getLastCellNum()>=8 && row.getRowNum()>0){
                            /*  OPEN DATABASE - CHECK LOGICAL CONNECTION - INSERT ENTRIES - START   */
                            String role = row.getCell(0).toString();
                            String username = row.getCell(1).toString();
                            String password = row.getCell(2).toString();
                            String name = row.getCell(3).toString();
                            String lastname = row.getCell(4).toString();
                            String phone = row.getCell(5).toString();
                            String address = row.getCell(6).toString();
                            String email = row.getCell(7).toString();
                            //check if the username does not already exists in the database
                            String sql = "select count(*) from user where username = '"+username+"'";
                            ResultSet rs = statement.executeQuery(sql);
                            boolean flag = false;
                            if(rs.first()){
                                if(rs.getInt("count(*)")==0)
                                    flag = true;
                            }
                            rs.close();
                            //make the insert
                            if(flag){
                                sql = "insert into user(username,password,name,lastname,phone,address,email,role) values"
                                        + "('"+username+"','"+password+"','"+name+"','"+lastname+"','"+phone+"',"
                                        + "'"+address+"','"+email+"','"+role+"')";
                                statement.executeUpdate(sql);
                                entries++;
                            }else{
                                //username already exists
                            }
                            /*  OPEN DATABASE - CHECK LOGICAL CONNECTION - INSERT ENTRIES - END     */
                        }else{
                        }
                    }
                    int rows = sheet.getPhysicalNumberOfRows();
                    if(rows<2){
                        msg="Ξ— Ξ΄ΞΉΞ±Ξ΄ΞΉΞΊΞ±ΟƒΞ―Ξ± Ξ΄ΞµΞ½ ΞΏΞ»ΞΏΞΊΞ»Ξ·Ο�Ο�ΞΈΞ·ΞΊΞµ : Ξ”ΞµΞ½ Ο…Ο€Ξ¬Ο�Ο‡ΞΏΟ…Ξ½ ΞµΞ³Ξ³Ο�Ξ±Ο†Ξ­Ο‚";
                        connection.rollback();
                    }else{
                        if(entries==(rows-1)){
                            msg="Ξ— Ξ΄ΞΉΞ±Ξ΄ΞΉΞΊΞ±ΟƒΞ―Ξ± ΞΏΞ»ΞΏΞΊΞ»Ξ·Ο�Ο�ΞΈΞ·ΞΊΞµ : "+entries+" ΞµΞ³Ξ³Ο�Ξ±Ο†Ξ­Ο‚ Ο€Ο�ΞΏΟƒΞΈΞ­ΞΈΞ·ΞΊΞ±Ξ½";
                            connection.commit();
                        }else{
                            connection.rollback();
                            msg="Ξ— Ξ΄ΞΉΞ±Ξ΄ΞΉΞΊΞ±ΟƒΞ―Ξ± Ξ΄ΞµΞ½ ΞΏΞ»ΞΏΞΊΞ»Ξ·Ο�Ο�ΞΈΞ·ΞΊΞµ : Ξ�Ξ¬Ο€ΞΏΞΉΞµΟ‚ Ξ­Ξ³Ξ³Ο�Ξ±Ο†Ξ­Ο‚ ΞµΞ―Ξ½Ξ±ΞΉ Ξ»Ξ¬ΞΈΞΏΟ‚"
                                    + " Ξ® Ο…Ο€Ξ¬Ο�Ο‡ΞΏΟ…Ξ½";
                        }
                    }
                    connection.setAutoCommit(true);
                    workbook.close();
                    //file.delete();
                    insertUsersErrorLabel.setText(msg);
                }catch(Exception e){
                    connection.rollback();
                    connection.setAutoCommit(true);
                    //workbook.close();
                    //file.delete();
                    insertUsersErrorLabel.setText("Ξ— Ξ΄ΞΉΞ±Ξ΄ΞΉΞΊΞ±ΟƒΞ―Ξ± Ξ΄ΞµΞ½ ΞΏΞ»ΞΏΞΊΞ»Ξ·Ο�Ο�ΞΈΞ·ΞΊΞµ : Ξ¤ΞΏ Ξ±Ο�Ο‡ΞµΞ―ΞΏ Ξ΄ΞµΞ½ ΞµΞ―Ξ½Ξ±ΞΉ excel "
                            + "Ξ® ΞΏΞΉ ΞµΞ³Ξ³Ο�Ξ±Ο†Ξ­Ο‚ ΞµΞ―Ξ½Ξ±ΞΉ Ξ»Ξ¬ΞΈΞΏΟ‚");
                    e.printStackTrace();
                }
                //delete downloaded file
                workbook.close();
                //file.delete();
                /*      OPEN EXCEL FILE HERE   -  END        */
                connection.close(); 
            } catch (SQLException | ClassNotFoundException ex) {
                insertUsersErrorLabel.setText("Ξ— Ξ΄ΞΉΞ±Ξ΄ΞΉΞΊΞ±ΟƒΞ―Ξ± Ξ΄ΞµΞ½ ΞΏΞ»ΞΏΞΊΞ»Ξ·Ο�Ο�ΞΈΞ·ΞΊΞµ : Ξ¤ΞΏ Ξ±Ο�Ο‡ΞµΞ―ΞΏ Ξ΄ΞµΞ½ ΞµΞ―Ξ½Ξ±ΞΉ excel "
                            + "Ξ® ΞΏΞΉ ΞµΞ³Ξ³Ο�Ξ±Ο†Ξ­Ο‚ ΞµΞ―Ξ½Ξ±ΞΉ Ξ»Ξ¬ΞΈΞΏΟ‚");
                ex.printStackTrace(); 
            } catch (IOException ex) {
                insertUsersErrorLabel.setText("Ξ— Ξ΄ΞΉΞ±Ξ΄ΞΉΞΊΞ±ΟƒΞ―Ξ± Ξ΄ΞµΞ½ ΞΏΞ»ΞΏΞΊΞ»Ξ·Ο�Ο�ΞΈΞ·ΞΊΞµ : Ξ¤ΞΏ Ξ±Ο�Ο‡ΞµΞ―ΞΏ Ξ΄ΞµΞ½ ΞµΞ―Ξ½Ξ±ΞΉ excel "
                            + "Ξ® ΞΏΞΉ ΞµΞ³Ξ³Ο�Ξ±Ο†Ξ­Ο‚ ΞµΞ―Ξ½Ξ±ΞΉ Ξ»Ξ¬ΞΈΞΏΟ‚");
                ex.printStackTrace(); 
            }    
        } else {
            //cancel by user
        }
    }//GEN-LAST:event_insertUsersFileButtonActionPerformed

    private void removeUsersFileButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_removeUsersFileButtonActionPerformed
        // TODO add your handling code here:
        int returnVal = fileChooser.showOpenDialog(AdminApp.this);
        if (returnVal == JFileChooser.APPROVE_OPTION) {
            File file = fileChooser.getSelectedFile();
            //This is where a real application would open the file.
            Connection connection = null;
            Statement statement = null;
            try{
                Class.forName("com.mysql.jdbc.Driver");
                String database = "jdbc:mysql://localhost:3306/examination_centers?user=root&password=026849";
                connection = DriverManager.getConnection(database);
                statement = connection.createStatement();
                //set auto commit to false, make sure all entries will insert before commiting
                connection.setAutoCommit(false);
                String msg="";
                Workbook workbook=null;
                try{
                    //entries : number of uploaded and inserted to database rows
                    int entries=0;
                    workbook = WorkbookFactory.create(file);
                    Sheet sheet = workbook.getSheetAt(0);
                    DataFormatter dataFormatter = new DataFormatter();
                    for (Row row: sheet) {
                        if(row.getLastCellNum()>=3 && row.getRowNum()>0){
                            /*  OPEN DATABASE - CHECK LOGICAL CONNECTION - INSERT ENTRIES - START   */
                            String username = row.getCell(0).toString();
                            String name = row.getCell(1).toString();
                            String lastname = row.getCell(2).toString();
                            //see if the user exists
                            String sql = "select count(*) from user where username = '"+username+"'"
                                    + " and name = '"+name+"' and lastname = '"+lastname+"'";
                            ResultSet rs = statement.executeQuery(sql);
                            boolean flag = false;
                            if(rs.first()){
                                if(rs.getInt("count(*)")!=0)
                                    flag = true;
                            }
                            rs.close();
                            //take user's id
                            sql = "select * from user where username = '"+username+"'"
                                    + " and name = '"+name+"' and lastname = '"+lastname+"'";
                            rs = statement.executeQuery(sql);
                            String id_user="";
                            if(rs.first()){
                                id_user = rs.getString("id_user");
                            }
                            rs.close();
                            if(flag && !id_user.equals(this.id_user)){
                                //check if the user is assigned to any classes
                                sql = "select distinct id_class from class_has_user where id_user = '"+id_user+"'";
                                rs = statement.executeQuery(sql);
                                //delete user first from all his classes
                                Statement statement2 = connection.createStatement();
                                while(rs.next()){
                                    sql = "delete from class_has_user where id_class = '"+rs.getString("id_class")+"'"
                                            + " and id_user = '"+id_user+"'";
                                    statement2.executeUpdate(sql);
                                }
                                rs.close();
                                //delete user
                                sql = "delete from user where id_user = '"+id_user+"'";
                                statement.executeUpdate(sql);
                                entries++;
                            }else{
                                //does not exists
                            }
                            /*  OPEN DATABASE - CHECK LOGICAL CONNECTION - INSERT ENTRIES - END     */
                        }else{
                        }
                    }
                    int rows = sheet.getPhysicalNumberOfRows();
                    if(rows<2){
                        msg="Ξ— Ξ΄ΞΉΞ±Ξ΄ΞΉΞΊΞ±ΟƒΞ―Ξ± Ξ΄ΞµΞ½ ΞΏΞ»ΞΏΞΊΞ»Ξ·Ο�Ο�ΞΈΞ·ΞΊΞµ : Ξ”ΞµΞ½ Ο…Ο€Ξ¬Ο�Ο‡ΞΏΟ…Ξ½ ΞµΞ³Ξ³Ο�Ξ±Ο†Ξ­Ο‚";
                        connection.rollback();
                    }else{
                        if(entries==(rows-1)){
                            msg="Ξ— Ξ΄ΞΉΞ±Ξ΄ΞΉΞΊΞ±ΟƒΞ―Ξ± ΞΏΞ»ΞΏΞΊΞ»Ξ·Ο�Ο�ΞΈΞ·ΞΊΞµ : "+entries+" ΞµΞ³Ξ³Ο�Ξ±Ο†Ξ­Ο‚ Ξ±Ο†Ξ±ΞΉΟ�Ξ­ΞΈΞ·ΞΊΞ±Ξ½";
                            connection.commit();
                        }else{
                            connection.rollback();
                            msg="Ξ— Ξ΄ΞΉΞ±Ξ΄ΞΉΞΊΞ±ΟƒΞ―Ξ± Ξ΄ΞµΞ½ ΞΏΞ»ΞΏΞΊΞ»Ξ·Ο�Ο�ΞΈΞ·ΞΊΞµ : Ξ�Ξ¬Ο€ΞΏΞΉΞµΟ‚ Ξ­Ξ³Ξ³Ο�Ξ±Ο†Ξ­Ο‚ ΞµΞ―Ξ½Ξ±ΞΉ Ξ»Ξ¬ΞΈΞΏΟ‚"
                                    + " Ξ® Ο…Ο€Ξ¬Ο�Ο‡ΞΏΟ…Ξ½";
                        }
                    }
                    connection.setAutoCommit(true);
                    workbook.close();
                    //file.delete();
                    removeUsersErrorLabel.setText(msg);
                }catch(Exception e){
                    connection.rollback();
                    connection.setAutoCommit(true);
                    //workbook.close();
                    //file.delete();
                    e.printStackTrace();
                    removeUsersErrorLabel.setText("Ξ— Ξ΄ΞΉΞ±Ξ΄ΞΉΞΊΞ±ΟƒΞ―Ξ± Ξ΄ΞµΞ½ ΞΏΞ»ΞΏΞΊΞ»Ξ·Ο�Ο�ΞΈΞ·ΞΊΞµ : Ξ¤ΞΏ Ξ±Ο�Ο‡ΞµΞ―ΞΏ Ξ΄ΞµΞ½ ΞµΞ―Ξ½Ξ±ΞΉ excel "
                            + "Ξ® ΞΏΞΉ ΞµΞ³Ξ³Ο�Ξ±Ο†Ξ­Ο‚ ΞµΞ―Ξ½Ξ±ΞΉ Ξ»Ξ¬ΞΈΞΏΟ‚");
                }
                //delete downloaded file
                workbook.close();
                //file.delete();
                /*      OPEN EXCEL FILE HERE   -  END        */
                connection.close(); 
            } catch (SQLException | ClassNotFoundException ex) {
                ex.printStackTrace();
                removeUsersErrorLabel.setText("Ξ— Ξ΄ΞΉΞ±Ξ΄ΞΉΞΊΞ±ΟƒΞ―Ξ± Ξ΄ΞµΞ½ ΞΏΞ»ΞΏΞΊΞ»Ξ·Ο�Ο�ΞΈΞ·ΞΊΞµ : Ξ¤ΞΏ Ξ±Ο�Ο‡ΞµΞ―ΞΏ Ξ΄ΞµΞ½ ΞµΞ―Ξ½Ξ±ΞΉ excel "
                            + "Ξ® ΞΏΞΉ ΞµΞ³Ξ³Ο�Ξ±Ο†Ξ­Ο‚ ΞµΞ―Ξ½Ξ±ΞΉ Ξ»Ξ¬ΞΈΞΏΟ‚");
            } catch (IOException ex) {
                ex.printStackTrace();
                removeUsersErrorLabel.setText("Ξ— Ξ΄ΞΉΞ±Ξ΄ΞΉΞΊΞ±ΟƒΞ―Ξ± Ξ΄ΞµΞ½ ΞΏΞ»ΞΏΞΊΞ»Ξ·Ο�Ο�ΞΈΞ·ΞΊΞµ : Ξ¤ΞΏ Ξ±Ο�Ο‡ΞµΞ―ΞΏ Ξ΄ΞµΞ½ ΞµΞ―Ξ½Ξ±ΞΉ excel "
                            + "Ξ® ΞΏΞΉ ΞµΞ³Ξ³Ο�Ξ±Ο†Ξ­Ο‚ ΞµΞ―Ξ½Ξ±ΞΉ Ξ»Ξ¬ΞΈΞΏΟ‚");
            }    
        } else {
            //cancel by user
        }
    }//GEN-LAST:event_removeUsersFileButtonActionPerformed

    private void removeUsersSubmitButtonMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_removeUsersSubmitButtonMouseEntered
        // TODO add your handling code here:
        removeUsersSubmitButton.setBorder(BorderFactory.createMatteBorder(1,1,1,1,Color.decode("0x448AFF")));
    }//GEN-LAST:event_removeUsersSubmitButtonMouseEntered

    private void removeUsersSubmitButtonMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_removeUsersSubmitButtonMouseExited
        // TODO add your handling code here:
        removeUsersSubmitButton.setBorder(BorderFactory.createMatteBorder(0,1,0,1,Color.decode("0x448AFF")));
    }//GEN-LAST:event_removeUsersSubmitButtonMouseExited

    private void removeUsersSubmitButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_removeUsersSubmitButtonActionPerformed
        // TODO add your handling code here:
        String username = removeUsersUsernameTextField.getText();
        String name = removeUsersNameTextField.getText();
        String lastname = removeUsersLastnameTextField.getText();
        if(username.isEmpty() || name.isEmpty() || lastname.isEmpty()){
            removeUsersErrorLabel.setText("Ξ Ο�Ξ­Ο€ΞµΞΉ Ξ½Ξ± ΟƒΟ…ΞΌΟ€Ξ»Ξ·Ο�Ο‰ΞΈΞΏΟ�Ξ½ Ο�Ξ»Ξ± Ο„Ξ± Ο€ΞµΞ΄Ξ―Ξ±");
        }else{
            String regex = "[a-zA-ZΞ±-Ο‰Ξ‘-Ξ©Ο�Ο�Ξ­Ξ¬Ξ―Ξ®Ο�]{5,}[a-zA-ZΞ±-Ο‰Ξ‘-Ξ©Ο�Ξ¬Ο�Ξ­Ξ―Ξ®Ο�0-9]*";
            if(!username.matches(regex) || !name.matches(regex) || !lastname.matches(regex)){
                removeUsersErrorLabel.setText("Ξ”ΞµΞ½ ΞµΟ€ΞΉΟ„Ο�Ξ­Ο€ΞΏΞ½Ο„Ξ±ΞΉ ΟƒΟ�ΞΌΞ²ΞΏΞ»Ξ± ΞΊΞ±ΞΉ Ξ»ΞΉΞ³Ο�Ο„ΞµΟ�ΞΏΞΉ Ξ±Ο€Ο� 5 Ο‡Ξ±Ο�Ξ±ΞΊΟ„Ξ®Ο�ΞµΟ‚");
            }else{
                try{
                    Class.forName("com.mysql.jdbc.Driver");
                    String database = "jdbc:mysql://localhost:3306/examination_centers?user=root&password=026849";
                    Connection connection = DriverManager.getConnection(database);
                    Statement statement = connection.createStatement();
                    //see if the user exists
                    String sql = "select count(*) from user where username = '"+username+"'"
                            + " and name = '"+name+"' and lastname = '"+lastname+"'";
                    ResultSet rs = statement.executeQuery(sql);
                    boolean flag = false;
                    if(rs.first()){
                        if(rs.getInt("count(*)")!=0)
                            flag = true;
                    }
                    rs.close();
                    //take user's id
                    sql = "select * from user where username = '"+username+"'"
                            + " and name = '"+name+"' and lastname = '"+lastname+"'";
                    rs = statement.executeQuery(sql);
                    String id_user="";
                    if(rs.first()){
                        id_user = rs.getString("id_user");
                    }
                    rs.close();
                    //user cannot delete himself..
                    if(flag && !id_user.equals(this.id_user)){
                        //check if the user is assigned to any classes
                        sql = "select distinct id_class from class_has_user where id_user = '"+id_user+"'";
                        rs = statement.executeQuery(sql);
                        //delete user first from all his classes
                        Statement statement2 = connection.createStatement();
                        while(rs.next()){
                            sql = "delete from class_has_user where id_class = '"+rs.getString("id_class")+"'"
                                    + " and id_user = '"+id_user+"'";
                            statement2.executeUpdate(sql);
                        }
                        rs.close();
                        //delete user
                        sql = "delete from user where id_user = '"+id_user+"'";
                        statement.executeUpdate(sql);
                        removeUsersErrorLabel.setText("Ξ— Ξ΄ΞΉΞ±Ξ³Ο�Ξ±Ο†Ξ® Ο„ΞΏΟ… Ο‡Ο�Ξ®ΟƒΟ„Ξ· Ο€Ο�Ξ±Ξ³ΞΌΞ±Ο„ΞΏΟ€ΞΏΞΉΞ®ΞΈΞ·ΞΊΞµ");
                    }else{
                        removeUsersErrorLabel.setText("Ξ”ΞµΞ½ Ξ²Ο�Ξ­ΞΈΞ·ΞΊΞµ Ο‡Ο�Ξ®ΟƒΟ„Ξ·Ο‚ ΞΌΞµ Ξ±Ο…Ο„Ξ¬ Ο„Ξ± ΟƒΟ„ΞΏΞΉΟ‡ΞµΞ―Ξ±");
                    }    
                }catch(ClassNotFoundException | SQLException e){e.printStackTrace();}
            }
        }
    }//GEN-LAST:event_removeUsersSubmitButtonActionPerformed

    private void removeClassesButtonMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_removeClassesButtonMouseEntered
        // TODO add your handling code here:
        removeClassesButton.setBorder(BorderFactory.createMatteBorder(1,1,1,1,Color.decode("0x448AFF")));
    }//GEN-LAST:event_removeClassesButtonMouseEntered

    private void removeClassesButtonMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_removeClassesButtonMouseExited
        // TODO add your handling code here:
        removeClassesButton.setBorder(BorderFactory.createMatteBorder(0,1,0,1,Color.decode("0x448AFF")));
    }//GEN-LAST:event_removeClassesButtonMouseExited

    private void removeClassesButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_removeClassesButtonActionPerformed
        // TODO add your handling code here:
        insertClassesButton.setFont(new java.awt.Font("Tahoma", 0, 14));
        removeClassesButton.setFont(new java.awt.Font("Tahoma", 0, 16));
        
        classesContainerPanel.removeAll();
        classesContainerPanel.add(removeClassesPanel);
        classesContainerPanel.repaint();
        classesContainerPanel.revalidate();
    }//GEN-LAST:event_removeClassesButtonActionPerformed

    private void insertClassesButtonMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_insertClassesButtonMouseEntered
        // TODO add your handling code here:
        insertClassesButton.setBorder(BorderFactory.createMatteBorder(1,1,1,1,Color.decode("0x448AFF")));
    }//GEN-LAST:event_insertClassesButtonMouseEntered

    private void insertClassesButtonMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_insertClassesButtonMouseExited
        // TODO add your handling code here:
        insertClassesButton.setBorder(BorderFactory.createMatteBorder(0,1,0,1,Color.decode("0x448AFF")));
    }//GEN-LAST:event_insertClassesButtonMouseExited

    private void insertClassesButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_insertClassesButtonActionPerformed
        // TODO add your handling code here:
        insertClassesButton.setFont(new java.awt.Font("Tahoma", 0, 16));
        removeClassesButton.setFont(new java.awt.Font("Tahoma", 0, 14));
        
        classesContainerPanel.removeAll();
        classesContainerPanel.add(insertClassesPanel);
        classesContainerPanel.repaint();
        classesContainerPanel.revalidate();
    }//GEN-LAST:event_insertClassesButtonActionPerformed

    private void insertClassesFileButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_insertClassesFileButtonActionPerformed
        // TODO add your handling code here:
        int returnVal = fileChooser.showOpenDialog(AdminApp.this);
        if (returnVal == JFileChooser.APPROVE_OPTION) {
            File file = fileChooser.getSelectedFile();
            //This is where a real application would open the file.
            Connection connection = null;
            Statement statement = null;
            try{
                Class.forName("com.mysql.jdbc.Driver");
                String database = "jdbc:mysql://localhost:3306/examination_centers?user=root&password=026849";
                connection = DriverManager.getConnection(database);
                statement = connection.createStatement();
                //set auto commit to false, make sure all entries will insert before commiting
                connection.setAutoCommit(false);
                String msg="";
                Workbook workbook=null;
                try{
                    //entries : number of uploaded and inserted to database rows
                    int entries=0;
                    workbook = WorkbookFactory.create(file);
                    Sheet sheet = workbook.getSheetAt(0);
                    DataFormatter dataFormatter = new DataFormatter();
                    for (Row row: sheet) {
                        if(row.getLastCellNum()>=4 && row.getRowNum()>0){
                            /*  OPEN DATABASE - CHECK LOGICAL CONNECTION - INSERT ENTRIES - START   */
                            String id_class = row.getCell(0).toString();
                            String name = row.getCell(1).toString();
                            String address = row.getCell(2).toString();
                            String id_exam = row.getCell(3).toString();

                            //check if the id_class already exists
                            boolean flag = false;
                            String sql = "select count(*) from class where id_class = '"+id_class+"'";
                            ResultSet rs = statement.executeQuery(sql);
                            if(rs.first()){
                                if(rs.getInt("count(*)")==0){
                                    flag = true;
                                }
                            }
                            rs.close();
                            if(flag){
                                //insert the class
                                sql = "insert into class(id_class,name,address,id_examination) values"
                                        + "('"+id_class+"','"+name+"','"+address+"','"+id_exam+"')";
                                statement.executeUpdate(sql);
                                entries++;
                            }else{
                                //already exists the class
                            }
                            /*  OPEN DATABASE - CHECK LOGICAL CONNECTION - INSERT ENTRIES - END     */
                        }else{
                        }
                    }
                    int rows = sheet.getPhysicalNumberOfRows();
                    if(rows<2){
                        msg="Ξ— Ξ΄ΞΉΞ±Ξ΄ΞΉΞΊΞ±ΟƒΞ―Ξ± Ξ΄ΞµΞ½ ΞΏΞ»ΞΏΞΊΞ»Ξ·Ο�Ο�ΞΈΞ·ΞΊΞµ : Ξ”ΞµΞ½ Ο…Ο€Ξ¬Ο�Ο‡ΞΏΟ…Ξ½ ΞµΞ³Ξ³Ο�Ξ±Ο†Ξ­Ο‚";
                        connection.rollback();
                    }else{
                        if(entries==(rows-1)){
                            msg="Ξ— Ξ΄ΞΉΞ±Ξ΄ΞΉΞΊΞ±ΟƒΞ―Ξ± ΞΏΞ»ΞΏΞΊΞ»Ξ·Ο�Ο�ΞΈΞ·ΞΊΞµ : "+entries+" ΞµΞ³Ξ³Ο�Ξ±Ο†Ξ­Ο‚ Ο€Ο�ΞΏΟƒΞΈΞ­ΞΈΞ·ΞΊΞ±Ξ½";
                            connection.commit();
                        }else{
                            connection.rollback();
                            msg="Ξ— Ξ΄ΞΉΞ±Ξ΄ΞΉΞΊΞ±ΟƒΞ―Ξ± Ξ΄ΞµΞ½ ΞΏΞ»ΞΏΞΊΞ»Ξ·Ο�Ο�ΞΈΞ·ΞΊΞµ : Ξ�Ξ¬Ο€ΞΏΞΉΞµΟ‚ Ξ­Ξ³Ξ³Ο�Ξ±Ο†Ξ­Ο‚ ΞµΞ―Ξ½Ξ±ΞΉ Ξ»Ξ¬ΞΈΞΏΟ‚"
                                    + " Ξ® Ο…Ο€Ξ¬Ο�Ο‡ΞΏΟ…Ξ½";
                        }
                    }
                    connection.setAutoCommit(true);
                    workbook.close();
                    //file.delete();
                    insertClassesErrorLabel.setText(msg);
                }catch(Exception e){
                    connection.rollback();
                    connection.setAutoCommit(true);
                    //workbook.close();
                    //file.delete();
                    e.printStackTrace();
                    insertClassesErrorLabel.setText("Ξ— Ξ΄ΞΉΞ±Ξ΄ΞΉΞΊΞ±ΟƒΞ―Ξ± Ξ΄ΞµΞ½ ΞΏΞ»ΞΏΞΊΞ»Ξ·Ο�Ο�ΞΈΞ·ΞΊΞµ : Ξ¤ΞΏ Ξ±Ο�Ο‡ΞµΞ―ΞΏ Ξ΄ΞµΞ½ ΞµΞ―Ξ½Ξ±ΞΉ excel "
                            + "Ξ® ΞΏΞΉ ΞµΞ³Ξ³Ο�Ξ±Ο†Ξ­Ο‚ ΞµΞ―Ξ½Ξ±ΞΉ Ξ»Ξ¬ΞΈΞΏΟ‚");
                }
                //delete downloaded file
                workbook.close();
                //file.delete();
                /*      OPEN EXCEL FILE HERE   -  END        */
                connection.close(); 
            } catch (SQLException | ClassNotFoundException ex) {
                ex.printStackTrace();
                insertClassesErrorLabel.setText("Ξ— Ξ΄ΞΉΞ±Ξ΄ΞΉΞΊΞ±ΟƒΞ―Ξ± Ξ΄ΞµΞ½ ΞΏΞ»ΞΏΞΊΞ»Ξ·Ο�Ο�ΞΈΞ·ΞΊΞµ : Ξ¤ΞΏ Ξ±Ο�Ο‡ΞµΞ―ΞΏ Ξ΄ΞµΞ½ ΞµΞ―Ξ½Ξ±ΞΉ excel "
                            + "Ξ® ΞΏΞΉ ΞµΞ³Ξ³Ο�Ξ±Ο†Ξ­Ο‚ ΞµΞ―Ξ½Ξ±ΞΉ Ξ»Ξ¬ΞΈΞΏΟ‚");
            } catch (IOException ex) {
                ex.printStackTrace();
                insertClassesErrorLabel.setText("Ξ— Ξ΄ΞΉΞ±Ξ΄ΞΉΞΊΞ±ΟƒΞ―Ξ± Ξ΄ΞµΞ½ ΞΏΞ»ΞΏΞΊΞ»Ξ·Ο�Ο�ΞΈΞ·ΞΊΞµ : Ξ¤ΞΏ Ξ±Ο�Ο‡ΞµΞ―ΞΏ Ξ΄ΞµΞ½ ΞµΞ―Ξ½Ξ±ΞΉ excel "
                            + "Ξ® ΞΏΞΉ ΞµΞ³Ξ³Ο�Ξ±Ο†Ξ­Ο‚ ΞµΞ―Ξ½Ξ±ΞΉ Ξ»Ξ¬ΞΈΞΏΟ‚");
            }    
        } else {
            //cancel by user
        }
    }//GEN-LAST:event_insertClassesFileButtonActionPerformed

    private void insertClassesSubmitButtonMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_insertClassesSubmitButtonMouseEntered
        // TODO add your handling code here:
        insertClassesSubmitButton.setBorder(BorderFactory.createMatteBorder(1,1,1,1,Color.decode("0x448AFF")));
    }//GEN-LAST:event_insertClassesSubmitButtonMouseEntered

    private void insertClassesSubmitButtonMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_insertClassesSubmitButtonMouseExited
        // TODO add your handling code here:
        insertClassesSubmitButton.setBorder(BorderFactory.createMatteBorder(0,1,0,1,Color.decode("0x448AFF")));
    }//GEN-LAST:event_insertClassesSubmitButtonMouseExited

    private void insertClassesSubmitButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_insertClassesSubmitButtonActionPerformed
        // TODO add your handling code here:
        String regex = "[a-zA-ZΞ±-Ο‰Ξ‘-Ξ©Ο�Ο�Ξ­Ξ―Ξ¬Ξ®Ο�0-9]{1,45}";
        String regex_ad = "[a-zA-ZΞ±-Ο‰Ξ‘-Ξ©Ο�Ο�Ξ­Ξ―Ξ¬Ξ®Ο�0-9 ]{1,45}";
        String id_class = insertClassesId_classTextField.getText();
        String name = insertClassesNameTextField.getText();
        String address = insertClassesAddressTextField.getText();
        String id_exam = insertClassesId_examComboBox.getSelectedItem().toString();
        if(id_class.isEmpty() || name.isEmpty() || address.isEmpty() || id_exam.isEmpty()){
            insertClassesErrorLabel.setText("Ξ Ο�Ξ­Ο€ΞµΞΉ Ξ½Ξ± ΟƒΟ…ΞΌΟ€Ξ»Ξ·Ο�Ο�ΟƒΞµΟ„Ξµ Ο�Ξ»Ξ± Ο„Ξ± Ο€ΞµΞ΄Ξ―Ξ±");
        }else{
            if(id_class.matches("[0-9]{1,10}") && name.matches(regex) && address.matches(regex_ad) && id_exam.matches("[0-9]{1,10}")){
                try{
                    Class.forName("com.mysql.jdbc.Driver");
                    String database = "jdbc:mysql://localhost:3306/examination_centers?user=root&password=026849";
                    Connection connection = DriverManager.getConnection(database);
                    Statement statement = connection.createStatement();
                    //check if the id_class already exists
                    boolean flag = false;
                    String sql = "select count(*) from class where id_class = '"+id_class+"'";
                    ResultSet rs = statement.executeQuery(sql);
                    if(rs.first()){
                        if(rs.getInt("count(*)")==0){
                            flag = true;
                        }
                    }
                    rs.close();
                    if(flag){
                        //insert the class
                        sql = "insert into class(id_class,name,address,id_examination) values"
                                + "('"+id_class+"','"+name+"','"+address+"','"+id_exam+"')";
                        statement.executeUpdate(sql);
                        insertClassesErrorLabel.setText("Ξ— ΞµΞΉΟƒΞ±Ξ³Ο‰Ξ³Ξ® Ο„ΞΏΟ… ΞµΞΎΞµΟ„Ξ±ΟƒΟ„ΞΉΞΊΞΏΟ� ΞΊΞ­Ξ½Ο„Ο�ΞΏΟ… ΞΏΞ»ΞΏΞΊΞ»Ξ·Ο�Ο�ΞΈΞ·ΞΊΞµ");
                    }else{
                        insertClassesErrorLabel.setText("Ξ¤ΞΏ ΞµΞΎΞµΟ„Ξ±ΟƒΟ„ΞΉΞΊΟ� ΞΊΞ­Ξ½Ο„Ο�ΞΏ ΞΌΞµ Ξ±Ο…Ο„Ο� Ο„ΞΏΞ½ ΞΊΟ‰Ξ΄ΞΉΞΊΟ� Ο…Ο€Ξ¬Ο�Ο‡ΞµΞΉ Ξ®Ξ΄Ξ·");
                    }
                    connection.close();
                }catch(SQLException | ClassNotFoundException e){
                    e.printStackTrace();
                }
            }else{
                insertClassesErrorLabel.setText("Ξ”ΞµΞ½ ΞµΟ€ΞΉΟ„Ο�Ξ­Ο€ΞΏΞ½Ο„Ξ±ΞΉ Ο„Ξ± ΟƒΟ�ΞΌΞ²ΞΏΞ»Ξ± ΞΊΞ±ΞΉ Ξ»ΞΉΞ³Ο�Ο„ΞµΟ�ΞΏΞΉ Ξ±Ο€Ο� 5 Ο‡Ξ±Ο�Ξ±ΞΊΟ„Ξ®Ο�ΞµΟ‚ Ξ® Ο€Ξ¬Ξ½Ο‰ Ξ±Ο€Ο� 45");
            }
        }    
    }//GEN-LAST:event_insertClassesSubmitButtonActionPerformed

    private void removeClassesFileButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_removeClassesFileButtonActionPerformed
        // TODO add your handling code here:
        int returnVal = fileChooser.showOpenDialog(AdminApp.this);
        if (returnVal == JFileChooser.APPROVE_OPTION) {
            File file = fileChooser.getSelectedFile();
            //This is where a real application would open the file.
            Connection connection = null;
            Statement statement = null;
            try{
                Class.forName("com.mysql.jdbc.Driver");
                String database = "jdbc:mysql://localhost:3306/examination_centers?user=root&password=026849";
                connection = DriverManager.getConnection(database);
                statement = connection.createStatement();
                //set auto commit to false, make sure all entries will insert before commiting
                connection.setAutoCommit(false);
                String msg="";
                Workbook workbook=null;
                try{
                    //entries : number of uploaded and inserted to database rows
                    int entries=0;
                    workbook = WorkbookFactory.create(file);
                    Sheet sheet = workbook.getSheetAt(0);
                    DataFormatter dataFormatter = new DataFormatter();
                    for (Row row: sheet) {
                        if(row.getLastCellNum()>=1 && row.getRowNum()>0){
                            /*  OPEN DATABASE - CHECK LOGICAL CONNECTION - INSERT ENTRIES - START   */
                            String id_class = row.getCell(0).toString();
                            //check if the class exists
                            boolean flag = true;
                            String sql = "select count(*) from class where id_class = '"+id_class+"'";
                            ResultSet rs = statement.executeQuery(sql);
                            if(rs.first()){
                                if(rs.getInt("count(*)")==0){
                                    flag = false;
                                }
                            }
                            rs.close();
                            if(flag){
                                //check if there are users assigned to the class
                                flag = false;
                                sql = "select count(*) from class_has_user where id_class = '"+id_class+"'";
                                rs = statement.executeQuery(sql);
                                if(rs.first()){
                                    if(rs.getInt("count(*)")==0){
                                        flag = true;
                                    }
                                }
                                rs.close();
                                if(flag){
                                    //delete now the class
                                    sql = "delete from class where id_class = '"+id_class+"'";
                                    statement.executeUpdate(sql);
                                    entries++;
                                }else{
                                    //cannot delete, has relations 
                                }
                            }else{
                                //does not exists
                            }
                            /*  OPEN DATABASE - CHECK LOGICAL CONNECTION - INSERT ENTRIES - END     */
                        }else{
                        }
                    }
                    int rows = sheet.getPhysicalNumberOfRows();
                    if(rows<2){
                        msg="Ξ— Ξ΄ΞΉΞ±Ξ΄ΞΉΞΊΞ±ΟƒΞ―Ξ± Ξ΄ΞµΞ½ ΞΏΞ»ΞΏΞΊΞ»Ξ·Ο�Ο�ΞΈΞ·ΞΊΞµ : Ξ”ΞµΞ½ Ο…Ο€Ξ¬Ο�Ο‡ΞΏΟ…Ξ½ ΞµΞ³Ξ³Ο�Ξ±Ο†Ξ­Ο‚";
                        connection.rollback();
                    }else{
                        if(entries==(rows-1)){
                            msg="Ξ— Ξ΄ΞΉΞ±Ξ΄ΞΉΞΊΞ±ΟƒΞ―Ξ± ΞΏΞ»ΞΏΞΊΞ»Ξ·Ο�Ο�ΞΈΞ·ΞΊΞµ : "+entries+" ΞµΞ³Ξ³Ο�Ξ±Ο†Ξ­Ο‚ Ξ‘Ο†Ξ±ΞΉΟ�Ξ­ΞΈΞ·ΞΊΞ±Ξ½";
                            connection.commit();
                        }else{
                            connection.rollback();
                            msg="Ξ— Ξ΄ΞΉΞ±Ξ΄ΞΉΞΊΞ±ΟƒΞ―Ξ± Ξ΄ΞµΞ½ ΞΏΞ»ΞΏΞΊΞ»Ξ·Ο�Ο�ΞΈΞ·ΞΊΞµ : Ξ�Ξ¬Ο€ΞΏΞΉΞµΟ‚ Ξ­Ξ³Ξ³Ο�Ξ±Ο†Ξ­Ο‚ ΞµΞ―Ξ½Ξ±ΞΉ Ξ»Ξ¬ΞΈΞΏΟ‚"
                                    + " Ξ® Ο…Ο€Ξ¬Ο�Ο‡ΞΏΟ…Ξ½";
                        }
                    }
                    connection.setAutoCommit(true);
                    workbook.close();
                    //file.delete();
                    removeClassesErrorLabel.setText(msg);
                }catch(Exception e){
                    connection.rollback();
                    connection.setAutoCommit(true);
                    //workbook.close();
                    //file.delete();
                    e.printStackTrace();
                    removeClassesErrorLabel.setText("Ξ— Ξ΄ΞΉΞ±Ξ΄ΞΉΞΊΞ±ΟƒΞ―Ξ± Ξ΄ΞµΞ½ ΞΏΞ»ΞΏΞΊΞ»Ξ·Ο�Ο�ΞΈΞ·ΞΊΞµ : Ξ¤ΞΏ Ξ±Ο�Ο‡ΞµΞ―ΞΏ Ξ΄ΞµΞ½ ΞµΞ―Ξ½Ξ±ΞΉ excel "
                            + "Ξ® ΞΏΞΉ ΞµΞ³Ξ³Ο�Ξ±Ο†Ξ­Ο‚ ΞµΞ―Ξ½Ξ±ΞΉ Ξ»Ξ¬ΞΈΞΏΟ‚");
                }
                //delete downloaded file
                workbook.close();
                //file.delete();
                /*      OPEN EXCEL FILE HERE   -  END        */
                connection.close(); 
            } catch (SQLException | ClassNotFoundException ex) {
                ex.printStackTrace();
                removeClassesErrorLabel.setText("Ξ— Ξ΄ΞΉΞ±Ξ΄ΞΉΞΊΞ±ΟƒΞ―Ξ± Ξ΄ΞµΞ½ ΞΏΞ»ΞΏΞΊΞ»Ξ·Ο�Ο�ΞΈΞ·ΞΊΞµ : Ξ¤ΞΏ Ξ±Ο�Ο‡ΞµΞ―ΞΏ Ξ΄ΞµΞ½ ΞµΞ―Ξ½Ξ±ΞΉ excel "
                            + "Ξ® ΞΏΞΉ ΞµΞ³Ξ³Ο�Ξ±Ο†Ξ­Ο‚ ΞµΞ―Ξ½Ξ±ΞΉ Ξ»Ξ¬ΞΈΞΏΟ‚");
            } catch (IOException ex) {
                ex.printStackTrace();
                removeClassesErrorLabel.setText("Ξ— Ξ΄ΞΉΞ±Ξ΄ΞΉΞΊΞ±ΟƒΞ―Ξ± Ξ΄ΞµΞ½ ΞΏΞ»ΞΏΞΊΞ»Ξ·Ο�Ο�ΞΈΞ·ΞΊΞµ : Ξ¤ΞΏ Ξ±Ο�Ο‡ΞµΞ―ΞΏ Ξ΄ΞµΞ½ ΞµΞ―Ξ½Ξ±ΞΉ excel "
                            + "Ξ® ΞΏΞΉ ΞµΞ³Ξ³Ο�Ξ±Ο†Ξ­Ο‚ ΞµΞ―Ξ½Ξ±ΞΉ Ξ»Ξ¬ΞΈΞΏΟ‚");
            }    
        } else {
            //cancel by user
        }
    }//GEN-LAST:event_removeClassesFileButtonActionPerformed

    private void removeClassesSubmitButtonMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_removeClassesSubmitButtonMouseEntered
        // TODO add your handling code here:
        removeClassesSubmitButton.setBorder(BorderFactory.createMatteBorder(1,1,1,1,Color.decode("0x448AFF")));
    }//GEN-LAST:event_removeClassesSubmitButtonMouseEntered

    private void removeClassesSubmitButtonMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_removeClassesSubmitButtonMouseExited
        // TODO add your handling code here:
        removeClassesSubmitButton.setBorder(BorderFactory.createMatteBorder(0,1,0,1,Color.decode("0x448AFF")));
    }//GEN-LAST:event_removeClassesSubmitButtonMouseExited

    private void removeClassesSubmitButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_removeClassesSubmitButtonActionPerformed
        // TODO add your handling code here:
        String id_class = removeClassesId_classTextField.getText();
        if(id_class.isEmpty()){
            removeClassesErrorLabel.setText("Ξ¤ΞΏ Ο€ΞµΞ΄Ξ―ΞΏ Ξ΄ΞµΞ½ ΞΌΟ€ΞΏΟ�ΞµΞ― Ξ½Ξ± ΞµΞ―Ξ½Ξ±ΞΉ ΞΊΞµΞ½Ο�");
        }else{
            if(id_class.matches("[0-9]+")){
                try{
                    Class.forName("com.mysql.jdbc.Driver");
                    String database = "jdbc:mysql://localhost:3306/examination_centers?user=root&password=026849";
                    Connection connection = DriverManager.getConnection(database);
                    Statement statement = connection.createStatement();
                    //check if the class exists
                    boolean flag = true;
                    String sql = "select count(*) from class where id_class = '"+id_class+"'";
                    ResultSet rs = statement.executeQuery(sql);
                    if(rs.first()){
                        if(rs.getInt("count(*)")==0){
                            flag = false;
                        }
                    }
                    rs.close();
                    if(flag){
                        //check if there are users assigned to the class
                        flag = false;
                        sql = "select count(*) from class_has_user where id_class = '"+id_class+"'";
                        rs = statement.executeQuery(sql);
                        if(rs.first()){
                            if(rs.getInt("count(*)")==0){
                                flag = true;
                            }
                        }
                        rs.close();
                        if(flag){
                            //delete now the class
                            sql = "delete from class where id_class = '"+id_class+"'";
                            statement.executeUpdate(sql);
                            removeClassesErrorLabel.setText("Ξ— Ξ±Ο†Ξ±Ξ―Ο�ΞµΟƒΞ· Ο„ΞΏΟ… ΞµΞΎΞµΟ„Ξ±ΟƒΟ„ΞΉΞΊΞΏΟ� ΞΊΞ­Ξ½Ο„Ο�ΞΏΟ… ΞΏΞ»ΞΏΞΊΞ»Ξ·Ο�Ο�ΞΈΞ·ΞΊΞµ");
                        }else{
                           removeClassesErrorLabel.setText("Ξ¤ΞΏ ΞµΞΎΞµΟ„Ξ±ΟƒΟ„ΞΉΞΊΟ� ΞΊΞ­Ξ½Ο„Ο�ΞΏ Ξ΄ΞµΞ½ ΞΌΟ€ΞΏΟ�ΞµΞ― Ξ½Ξ± Ξ΄ΞΉΞ±Ξ³Ο�Ξ±Ο†ΞµΞ― : Ξ¥Ο€Ξ¬Ο�Ο‡ΞΏΟ…Ξ½"
                                    + " Ξ±ΞΊΟ�ΞΌΞ± Ο‡Ο�Ξ®ΟƒΟ„ΞµΟ‚ ΞµΞ³Ξ³ΞµΞ³Ο�Ξ±ΞΌΞΌΞ­Ξ½ΞΏΞΉ ΟƒΞµ Ξ±Ο…Ο„Ο�");
                        }
                    }else{
                        removeClassesErrorLabel.setText("Ξ¤ΞΏ ΞµΞΎΞµΟ„Ξ±ΟƒΟ„ΞΉΞΊΟ� ΞΊΞ­Ξ½Ο„Ο�ΞΏ ΞΌΞµ Ξ±Ο…Ο„Ο� Ο„ΞΏΞ½ ΞΊΟ‰Ξ΄ΞΉΞΊΟ� Ξ΄ΞµΞ½ Ο…Ο€Ξ¬Ο�Ο‡Ξµ");
                    }
                }catch(ClassNotFoundException | SQLException e){
                    e.printStackTrace();
                }
            }else{
                removeClassesErrorLabel.setText("Ξ¤ΞΏ Ο€ΞµΞ΄Ξ―ΞΏ ΞΌΟ€ΞΏΟ�ΞµΞ― Ξ½Ξ± ΞµΞ―Ξ½Ξ±ΞΉ ΞΌΟ�Ξ½ΞΏ Ξ±Ο�ΞΉΞΈΞΌΟ�Ο‚");
            }
        }
    }//GEN-LAST:event_removeClassesSubmitButtonActionPerformed

    private void insertExamsFileButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_insertExamsFileButtonActionPerformed
        // TODO add your handling code here:
        int returnVal = fileChooser.showOpenDialog(AdminApp.this);
        if (returnVal == JFileChooser.APPROVE_OPTION) {
            File file = fileChooser.getSelectedFile();
            //This is where a real application would open the file.
            Connection connection = null;
            Statement statement = null;
            try{
                Class.forName("com.mysql.jdbc.Driver");
                String database = "jdbc:mysql://localhost:3306/examination_centers?user=root&password=026849";
                connection = DriverManager.getConnection(database);
                statement = connection.createStatement();
                //set auto commit to false, make sure all entries will insert before commiting
                connection.setAutoCommit(false);
                String msg="";
                Workbook workbook=null;
                try{
                    //entries : number of uploaded and inserted to database rows
                    int entries=0;
                    workbook = WorkbookFactory.create(file);
                    Sheet sheet = workbook.getSheetAt(0);
                    DataFormatter dataFormatter = new DataFormatter();
                    for (Row row: sheet) {
                        if(row.getLastCellNum()>=4 && row.getRowNum()>0){
                            /*  OPEN DATABASE - CHECK LOGICAL CONNECTION - INSERT ENTRIES - START   */
                            String id_exam = row.getCell(0).toString();
                            String open = row.getCell(1).toString();
                            String date = row.getCell(2).toString();
                            String id_subject = row.getCell(3).toString();
                            //check if the examination already exists
                            boolean flag = false;
                            String sql = "select count(*) from examination where id_examination = '"+id_exam+"'";
                            ResultSet rs = statement.executeQuery(sql);
                            if(rs.first()){
                                if(rs.getInt("count(*)")==0){
                                    flag = true;
                                }
                            }
                            rs.close();
                            if(flag){
                                //insert the examination
                                sql = "insert into examination(id_examination,open,date,id_subject) values"
                                        + "('"+id_exam+"','"+open+"','"+date+"','"+id_subject+"')";
                                statement.executeUpdate(sql);
                                entries++;
                            }else{
                                //exam already exists
                            }
                            /*  OPEN DATABASE - CHECK LOGICAL CONNECTION - INSERT ENTRIES - END     */
                        }else{
                        }
                    }
                    int rows = sheet.getPhysicalNumberOfRows();
                    if(rows<2){
                        msg="Ξ— Ξ΄ΞΉΞ±Ξ΄ΞΉΞΊΞ±ΟƒΞ―Ξ± Ξ΄ΞµΞ½ ΞΏΞ»ΞΏΞΊΞ»Ξ·Ο�Ο�ΞΈΞ·ΞΊΞµ : Ξ”ΞµΞ½ Ο…Ο€Ξ¬Ο�Ο‡ΞΏΟ…Ξ½ ΞµΞ³Ξ³Ο�Ξ±Ο†Ξ­Ο‚";
                        connection.rollback();
                    }else{
                        if(entries==(rows-1)){
                            msg="Ξ— Ξ΄ΞΉΞ±Ξ΄ΞΉΞΊΞ±ΟƒΞ―Ξ± ΞΏΞ»ΞΏΞΊΞ»Ξ·Ο�Ο�ΞΈΞ·ΞΊΞµ : "+entries+" ΞµΞ³Ξ³Ο�Ξ±Ο†Ξ­Ο‚ Ο€Ο�ΞΏΟƒΞΈΞ­ΞΈΞ·ΞΊΞ±Ξ½";
                            connection.commit();
                        }else{
                            connection.rollback();
                            msg="Ξ— Ξ΄ΞΉΞ±Ξ΄ΞΉΞΊΞ±ΟƒΞ―Ξ± Ξ΄ΞµΞ½ ΞΏΞ»ΞΏΞΊΞ»Ξ·Ο�Ο�ΞΈΞ·ΞΊΞµ : Ξ�Ξ¬Ο€ΞΏΞΉΞµΟ‚ Ξ­Ξ³Ξ³Ο�Ξ±Ο†Ξ­Ο‚ ΞµΞ―Ξ½Ξ±ΞΉ Ξ»Ξ¬ΞΈΞΏΟ‚"
                                    + " Ξ® Ο…Ο€Ξ¬Ο�Ο‡ΞΏΟ…Ξ½";
                        }
                    }
                    connection.setAutoCommit(true);
                    workbook.close();
                    //file.delete();
                    insertExamsErrorLabel.setText(msg);
                }catch(Exception e){
                    connection.rollback();
                    connection.setAutoCommit(true);
                    //workbook.close();
                    //file.delete();
                    e.printStackTrace();
                    insertExamsErrorLabel.setText("Ξ— Ξ΄ΞΉΞ±Ξ΄ΞΉΞΊΞ±ΟƒΞ―Ξ± Ξ΄ΞµΞ½ ΞΏΞ»ΞΏΞΊΞ»Ξ·Ο�Ο�ΞΈΞ·ΞΊΞµ : Ξ¤ΞΏ Ξ±Ο�Ο‡ΞµΞ―ΞΏ Ξ΄ΞµΞ½ ΞµΞ―Ξ½Ξ±ΞΉ excel "
                            + "Ξ® ΞΏΞΉ ΞµΞ³Ξ³Ο�Ξ±Ο†Ξ­Ο‚ ΞµΞ―Ξ½Ξ±ΞΉ Ξ»Ξ¬ΞΈΞΏΟ‚");
                }
                //delete downloaded file
                workbook.close();
                //file.delete();
                /*      OPEN EXCEL FILE HERE   -  END        */
                connection.close(); 
            } catch (SQLException | ClassNotFoundException ex) {
                ex.printStackTrace();
                insertExamsErrorLabel.setText("Ξ— Ξ΄ΞΉΞ±Ξ΄ΞΉΞΊΞ±ΟƒΞ―Ξ± Ξ΄ΞµΞ½ ΞΏΞ»ΞΏΞΊΞ»Ξ·Ο�Ο�ΞΈΞ·ΞΊΞµ : Ξ¤ΞΏ Ξ±Ο�Ο‡ΞµΞ―ΞΏ Ξ΄ΞµΞ½ ΞµΞ―Ξ½Ξ±ΞΉ excel "
                            + "Ξ® ΞΏΞΉ ΞµΞ³Ξ³Ο�Ξ±Ο†Ξ­Ο‚ ΞµΞ―Ξ½Ξ±ΞΉ Ξ»Ξ¬ΞΈΞΏΟ‚");
            } catch (IOException ex) {
                ex.printStackTrace();
                insertExamsErrorLabel.setText("Ξ— Ξ΄ΞΉΞ±Ξ΄ΞΉΞΊΞ±ΟƒΞ―Ξ± Ξ΄ΞµΞ½ ΞΏΞ»ΞΏΞΊΞ»Ξ·Ο�Ο�ΞΈΞ·ΞΊΞµ : Ξ¤ΞΏ Ξ±Ο�Ο‡ΞµΞ―ΞΏ Ξ΄ΞµΞ½ ΞµΞ―Ξ½Ξ±ΞΉ excel "
                            + "Ξ® ΞΏΞΉ ΞµΞ³Ξ³Ο�Ξ±Ο†Ξ­Ο‚ ΞµΞ―Ξ½Ξ±ΞΉ Ξ»Ξ¬ΞΈΞΏΟ‚");
            }    
        } else {
            //cancel by user
        }
    }//GEN-LAST:event_insertExamsFileButtonActionPerformed

    private void insertExamsSubmitButtonMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_insertExamsSubmitButtonMouseEntered
        // TODO add your handling code here:
        insertExamsSubmitButton.setBorder(BorderFactory.createMatteBorder(1,1,1,1,Color.decode("0x448AFF")));
    }//GEN-LAST:event_insertExamsSubmitButtonMouseEntered

    private void insertExamsSubmitButtonMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_insertExamsSubmitButtonMouseExited
        // TODO add your handling code here:
        insertExamsSubmitButton.setBorder(BorderFactory.createMatteBorder(0,1,0,1,Color.decode("0x448AFF")));
    }//GEN-LAST:event_insertExamsSubmitButtonMouseExited

    private void insertExamsSubmitButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_insertExamsSubmitButtonActionPerformed
        // TODO add your handling code here:
        String id_exam = insertExamsId_examTextField.getText();
        String id_subject = insertExamsId_subjectComboBox.getSelectedItem().toString();
        String year = insertExamsYearTextField.getText();
        String day = insertExamsDayTextField.getText();
        String month = insertExamsMonthTextField.getText();
        String hour = insertExamsHourTextField.getText();
        String minute = insertExamsMinuteTextField.getText();
        String second = insertExamsSecondTextField.getText();
        String date = year+"/"+month+"/"+day+" "+hour+":"+minute+":"+second;
        if(id_exam.isEmpty() || year.isEmpty() || day.isEmpty() ||
                month.isEmpty() || hour.isEmpty() || minute.isEmpty() || second.isEmpty()){
            insertExamsErrorLabel.setText("Ξ£Ο…ΞΌΟ€Ξ»Ξ·Ο�Ο�ΟƒΟ„Ξµ Ο�Ξ»Ξ± Ο„Ξ± Ο€ΞµΞ΄Ξ―Ξ± Ο€Ο�Ο�Ο„Ξ±");
        }else{
            if(id_exam.matches("[0-9]{1,10}") && year.matches("([1-9][0-9][0-9][0-9])") && day.matches("([0-2]?[1-9])|((3)[0-1])")
                    && minute.matches("[0-5]?[0-9]") && second.matches("[0-5]?[0-9]") && hour.matches("((1)?[1-9])|((2)[0-4])")
                    && month.matches("([0-1][0-2])|[1-9]")){
                try{
                    Class.forName("com.mysql.jdbc.Driver");
                    String database = "jdbc:mysql://localhost:3306/examination_centers?user=root&password=026849";
                    Connection connection = DriverManager.getConnection(database);
                    Statement statement = connection.createStatement();
                    //check if the examination already exists
                    boolean flag = false;
                    String sql = "select count(*) from examination where id_examination = '"+id_exam+"'";
                    ResultSet rs = statement.executeQuery(sql);
                    if(rs.first()){
                        if(rs.getInt("count(*)")==0){
                            flag = true;
                        }
                    }
                    rs.close();
                    if(flag){
                        //insert the examination
                        sql = "insert into examination(id_examination,open,date,id_subject) values"
                                + "('"+id_exam+"','0','"+date+"','"+id_subject+"')";
                        statement.executeUpdate(sql);
                        insertExamsErrorLabel.setText("Ξ— ΞµΞΉΟƒΞ±Ξ³Ο‰Ξ³Ξ® Ο„Ξ·Ο‚ ΞµΞΎΞ­Ο„Ξ±ΟƒΞ·Ο‚ Ο€Ο�Ξ±Ξ³ΞΌΞ±Ο„ΞΏΟ€ΞΏΞΉΞ®ΞΈΞ·ΞΊΞµ");
                    }else{
                        insertExamsErrorLabel.setText("Ξ— ΞµΞΎΞ­Ο„Ξ±ΟƒΞ· ΞΌΞµ Ξ±Ο…Ο„Ο� Ο„ΞΏΞ½ ΞΊΟ‰Ξ΄ΞΉΞΊΟ� Ο…Ο€Ξ¬Ο�Ο‡ΞµΞΉ Ξ®Ξ΄Ξ·");
                    }
                    connection.close();
                }catch(SQLException | ClassNotFoundException e){
                    e.printStackTrace();
                }
            }else{
                insertExamsErrorLabel.setText("Ξ›Ξ¬ΞΈΞΏΟ‚ ΟƒΟ„Ξ·Ξ½ ΞΌΞΏΟ�Ο†ΞΏΟ€ΞΏΞ―Ξ·ΟƒΞ· Ο„Ξ·Ο‚ ΞµΞΉΟƒΟ�Ξ΄ΞΏΟ…");
            }
        }
    }//GEN-LAST:event_insertExamsSubmitButtonActionPerformed

    private void removeExamsFileButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_removeExamsFileButtonActionPerformed
        // TODO add your handling code here:
        int returnVal = fileChooser.showOpenDialog(AdminApp.this);
        if (returnVal == JFileChooser.APPROVE_OPTION) {
            File file = fileChooser.getSelectedFile();
            //This is where a real application would open the file.
            Connection connection = null;
            Statement statement = null;
            try{
                Class.forName("com.mysql.jdbc.Driver");
                String database = "jdbc:mysql://localhost:3306/examination_centers?user=root&password=026849";
                connection = DriverManager.getConnection(database);
                statement = connection.createStatement();
                //set auto commit to false, make sure all entries will insert before commiting
                connection.setAutoCommit(false);
                String msg="";
                Workbook workbook=null;
                try{
                    //entries : number of uploaded and inserted to database rows
                    int entries=0;
                    workbook = WorkbookFactory.create(file);
                    Sheet sheet = workbook.getSheetAt(0);
                    DataFormatter dataFormatter = new DataFormatter();
                    for (Row row: sheet) {
                        if(row.getLastCellNum()>=1 && row.getRowNum()>0){
                            /*  OPEN DATABASE - CHECK LOGICAL CONNECTION - INSERT ENTRIES - START   */
                            String id_exam = row.getCell(0).toString();
                            //check if the examination exists
                            boolean flag = true;
                            String sql = "select count(*) from examination where id_examination = '"+id_exam+"'";
                            ResultSet rs = statement.executeQuery(sql);
                            if(rs.first()){
                                if(rs.getInt("count(*)")==0){
                                    flag = false;
                                }
                            }
                            rs.close();
                            if(flag){
                                //check if there are classes assigned to the examination
                                flag = false;
                                sql = "select count(*) from class where id_examination = '"+id_exam+"'";
                                rs = statement.executeQuery(sql);
                                if(rs.first()){
                                    if(rs.getInt("count(*)")==0){
                                        flag = true;
                                    }
                                }
                                rs.close();
                                if(flag){
                                    //delete now the examination
                                    sql = "delete from examination where id_examination = '"+id_exam+"'";
                                    statement.executeUpdate(sql);
                                    entries++;
                                }else{
                                    //exam has relations
                                }
                            }else{
                                //exam does not exists
                            }
                            /*  OPEN DATABASE - CHECK LOGICAL CONNECTION - INSERT ENTRIES - END     */
                        }else{
                        }
                    }
                    int rows = sheet.getPhysicalNumberOfRows();
                    if(rows<2){
                        msg="Ξ— Ξ΄ΞΉΞ±Ξ΄ΞΉΞΊΞ±ΟƒΞ―Ξ± Ξ΄ΞµΞ½ ΞΏΞ»ΞΏΞΊΞ»Ξ·Ο�Ο�ΞΈΞ·ΞΊΞµ : Ξ”ΞµΞ½ Ο…Ο€Ξ¬Ο�Ο‡ΞΏΟ…Ξ½ ΞµΞ³Ξ³Ο�Ξ±Ο†Ξ­Ο‚";
                        connection.rollback();
                    }else{
                        if(entries==(rows-1)){
                            msg="Ξ— Ξ΄ΞΉΞ±Ξ΄ΞΉΞΊΞ±ΟƒΞ―Ξ± ΞΏΞ»ΞΏΞΊΞ»Ξ·Ο�Ο�ΞΈΞ·ΞΊΞµ : "+entries+" ΞµΞ³Ξ³Ο�Ξ±Ο†Ξ­Ο‚ Ο€Ο�ΞΏΟƒΞΈΞ­ΞΈΞ·ΞΊΞ±Ξ½";
                            connection.commit();
                        }else{
                            connection.rollback();
                            msg="Ξ— Ξ΄ΞΉΞ±Ξ΄ΞΉΞΊΞ±ΟƒΞ―Ξ± Ξ΄ΞµΞ½ ΞΏΞ»ΞΏΞΊΞ»Ξ·Ο�Ο�ΞΈΞ·ΞΊΞµ : Ξ�Ξ¬Ο€ΞΏΞΉΞµΟ‚ Ξ­Ξ³Ξ³Ο�Ξ±Ο†Ξ­Ο‚ ΞµΞ―Ξ½Ξ±ΞΉ Ξ»Ξ¬ΞΈΞΏΟ‚"
                                    + " Ξ® Ο…Ο€Ξ¬Ο�Ο‡ΞΏΟ…Ξ½";
                        }
                    }
                    connection.setAutoCommit(true);
                    workbook.close();
                    //file.delete();
                    removeExamsErrorLabel.setText(msg);
                }catch(Exception e){
                    connection.rollback();
                    connection.setAutoCommit(true);
                    //workbook.close();
                    //file.delete();
                    e.printStackTrace();
                    removeExamsErrorLabel.setText("Ξ— Ξ΄ΞΉΞ±Ξ΄ΞΉΞΊΞ±ΟƒΞ―Ξ± Ξ΄ΞµΞ½ ΞΏΞ»ΞΏΞΊΞ»Ξ·Ο�Ο�ΞΈΞ·ΞΊΞµ : Ξ¤ΞΏ Ξ±Ο�Ο‡ΞµΞ―ΞΏ Ξ΄ΞµΞ½ ΞµΞ―Ξ½Ξ±ΞΉ excel "
                            + "Ξ® ΞΏΞΉ ΞµΞ³Ξ³Ο�Ξ±Ο†Ξ­Ο‚ ΞµΞ―Ξ½Ξ±ΞΉ Ξ»Ξ¬ΞΈΞΏΟ‚");
                }
                //delete downloaded file
                workbook.close();
                //file.delete();
                /*      OPEN EXCEL FILE HERE   -  END        */
                connection.close(); 
            } catch (SQLException | ClassNotFoundException ex) {
                ex.printStackTrace();
                removeExamsErrorLabel.setText("Ξ— Ξ΄ΞΉΞ±Ξ΄ΞΉΞΊΞ±ΟƒΞ―Ξ± Ξ΄ΞµΞ½ ΞΏΞ»ΞΏΞΊΞ»Ξ·Ο�Ο�ΞΈΞ·ΞΊΞµ : Ξ¤ΞΏ Ξ±Ο�Ο‡ΞµΞ―ΞΏ Ξ΄ΞµΞ½ ΞµΞ―Ξ½Ξ±ΞΉ excel "
                            + "Ξ® ΞΏΞΉ ΞµΞ³Ξ³Ο�Ξ±Ο†Ξ­Ο‚ ΞµΞ―Ξ½Ξ±ΞΉ Ξ»Ξ¬ΞΈΞΏΟ‚");
            } catch (IOException ex) {
                ex.printStackTrace();
                removeExamsErrorLabel.setText("Ξ— Ξ΄ΞΉΞ±Ξ΄ΞΉΞΊΞ±ΟƒΞ―Ξ± Ξ΄ΞµΞ½ ΞΏΞ»ΞΏΞΊΞ»Ξ·Ο�Ο�ΞΈΞ·ΞΊΞµ : Ξ¤ΞΏ Ξ±Ο�Ο‡ΞµΞ―ΞΏ Ξ΄ΞµΞ½ ΞµΞ―Ξ½Ξ±ΞΉ excel "
                            + "Ξ® ΞΏΞΉ ΞµΞ³Ξ³Ο�Ξ±Ο†Ξ­Ο‚ ΞµΞ―Ξ½Ξ±ΞΉ Ξ»Ξ¬ΞΈΞΏΟ‚");
            }    
        } else {
            //cancel by user
        }
    }//GEN-LAST:event_removeExamsFileButtonActionPerformed

    private void removeExamsSubmitButtonMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_removeExamsSubmitButtonMouseEntered
        // TODO add your handling code here:
        removeExamsSubmitButton.setBorder(BorderFactory.createMatteBorder(1,1,1,1,Color.decode("0x448AFF")));
    }//GEN-LAST:event_removeExamsSubmitButtonMouseEntered

    private void removeExamsSubmitButtonMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_removeExamsSubmitButtonMouseExited
        // TODO add your handling code here:
        removeExamsSubmitButton.setBorder(BorderFactory.createMatteBorder(0,1,0,1,Color.decode("0x448AFF")));
    }//GEN-LAST:event_removeExamsSubmitButtonMouseExited

    private void removeExamsSubmitButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_removeExamsSubmitButtonActionPerformed
        // TODO add your handling code here:
        String id_exam = removeExamsId_examTextField.getText();
        if(id_exam.isEmpty()){
            removeExamsErrorLabel.setText("Ξ Ο�Ξ­Ο€ΞµΞΉ Ξ½Ξ± ΟƒΟ…ΞΌΟ€Ξ»Ξ·Ο�Ο�ΟƒΞµΟ„Ξµ Ο„ΞΏ Ο€ΞµΞ΄Ξ―ΞΏ");
        }else{
            if(id_exam.matches("[0-9]+")){
                try{
                    Class.forName("com.mysql.jdbc.Driver");
                    String database = "jdbc:mysql://localhost:3306/examination_centers?user=root&password=026849";
                    Connection connection = DriverManager.getConnection(database);
                    Statement statement = connection.createStatement();
                    //check if the examination exists
                    boolean flag = true;
                    String sql = "select count(*) from examination where id_examination = '"+id_exam+"'";
                    ResultSet rs = statement.executeQuery(sql);
                    if(rs.first()){
                        if(rs.getInt("count(*)")==0){
                            flag = false;
                        }
                    }
                    rs.close();
                    if(flag){
                        //check if there are classes assigned to the examination
                        flag = false;
                        sql = "select count(*) from class where id_examination = '"+id_exam+"'";
                        rs = statement.executeQuery(sql);
                        if(rs.first()){
                            if(rs.getInt("count(*)")==0){
                                flag = true;
                            }
                        }
                        rs.close();
                        if(flag){
                            //delete now the examination
                            sql = "delete from examination where id_examination = '"+id_exam+"'";
                            statement.executeUpdate(sql);
                            removeExamsErrorLabel.setText("Ξ— Ξ±Ο†Ξ±Ξ―Ο�ΞµΟƒΞ· Ο„ΞΏΟ… ΞµΞΎΞµΟ„Ξ±ΟƒΟ„ΞΉΞΊΞΏΟ� ΞΊΞ­Ξ½Ο„Ο�ΞΏΟ… ΞΏΞ»ΞΏΞΊΞ»Ξ·Ο�Ο�ΞΈΞ·ΞΊΞµ");
                        }else{
                            removeExamsErrorLabel.setText("Ξ— ΞµΞΎΞ­Ο„Ξ±ΟƒΞ· Ξ΄ΞµΞ½ ΞΌΟ€ΞΏΟ�ΞµΞ― Ξ½Ξ± Ξ΄ΞΉΞ±Ξ³Ο�Ξ±Ο†ΞµΞ― : Ξ¥Ο€Ξ¬Ο�Ο‡ΞΏΟ…Ξ½"
                                    + " Ξ±ΞΊΟ�ΞΌΞ± ΞµΞΎΞµΟ„Ξ±ΟƒΟ„ΞΉΞΊΞ¬ ΞΊΞ­Ξ½Ο„Ο�Ξ± ΞµΞ³Ξ³ΞµΞ³Ο�Ξ±ΞΌΞΌΞ­Ξ½Ξ± ΟƒΞµ Ξ±Ο…Ο„Ξ®");
                        }
                    }else{
                        removeExamsErrorLabel.setText("Ξ¤ΞΏ ΞµΞΎΞµΟ„Ξ±ΟƒΟ„ΞΉΞΊΟ� ΞΊΞ­Ξ½Ο„Ο�ΞΏ ΞΌΞµ Ξ±Ο…Ο„Ο� Ο„ΞΏΞ½ ΞΊΟ‰Ξ΄ΞΉΞΊΟ� Ξ΄ΞµΞ½ Ο…Ο€Ξ¬Ο�Ο‡ΞµΞΉ");
                    }
                    connection.close();
                }catch(SQLException | ClassNotFoundException e){
                    e.printStackTrace();
                }
            }else{
                removeExamsErrorLabel.setText("Ξ¤ΞΏ Ο€ΞµΞ΄Ξ―ΞΏ Ο€Ο�Ξ­Ο€ΞµΞΉ Ξ½Ξ± ΞµΞ―Ξ½Ξ±ΞΉ Ξ±Ο�ΞΉΞΈΞΌΟ�Ο‚");
            }
        }
    }//GEN-LAST:event_removeExamsSubmitButtonActionPerformed

    private void removeExamsButtonMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_removeExamsButtonMouseEntered
        // TODO add your handling code here:
        removeExamsButton.setBorder(BorderFactory.createMatteBorder(1,1,1,1,Color.decode("0x448AFF")));
    }//GEN-LAST:event_removeExamsButtonMouseEntered

    private void removeExamsButtonMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_removeExamsButtonMouseExited
        // TODO add your handling code here:
        removeExamsButton.setBorder(BorderFactory.createMatteBorder(0,1,0,1,Color.decode("0x448AFF")));
    }//GEN-LAST:event_removeExamsButtonMouseExited

    private void removeExamsButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_removeExamsButtonActionPerformed
        // TODO add your handling code here:
        insertExamsButton.setFont(new java.awt.Font("Tahoma", 0, 14));
        removeExamsButton.setFont(new java.awt.Font("Tahoma", 0, 16));
        
        examsContainerPanel.removeAll();
        examsContainerPanel.add(removeExamsPanel);
        examsContainerPanel.repaint();
        examsContainerPanel.revalidate();
    }//GEN-LAST:event_removeExamsButtonActionPerformed

    private void insertExamsButtonMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_insertExamsButtonMouseEntered
        // TODO add your handling code here:
        insertExamsButton.setBorder(BorderFactory.createMatteBorder(1,1,1,1,Color.decode("0x448AFF")));
    }//GEN-LAST:event_insertExamsButtonMouseEntered

    private void insertExamsButtonMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_insertExamsButtonMouseExited
        // TODO add your handling code here:
        insertExamsButton.setBorder(BorderFactory.createMatteBorder(0,1,0,1,Color.decode("0x448AFF")));
    }//GEN-LAST:event_insertExamsButtonMouseExited

    private void insertExamsButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_insertExamsButtonActionPerformed
        // TODO add your handling code here:
        insertExamsButton.setFont(new java.awt.Font("Tahoma", 0, 16));
        removeExamsButton.setFont(new java.awt.Font("Tahoma", 0, 14));
        
        examsContainerPanel.removeAll();
        examsContainerPanel.add(insertExamsPanel);
        examsContainerPanel.repaint();
        examsContainerPanel.revalidate();
    }//GEN-LAST:event_insertExamsButtonActionPerformed

    private void insertExamsSecondTextFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_insertExamsSecondTextFieldActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_insertExamsSecondTextFieldActionPerformed

    private void insertSubjectsFileButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_insertSubjectsFileButtonActionPerformed
        // TODO add your handling code here:
        int returnVal = fileChooser.showOpenDialog(AdminApp.this);
        if (returnVal == JFileChooser.APPROVE_OPTION) {
            File file = fileChooser.getSelectedFile();
            //This is where a real application would open the file.
            Connection connection = null;
            Statement statement = null;
            try{
                Class.forName("com.mysql.jdbc.Driver");
                String database = "jdbc:mysql://localhost:3306/examination_centers?user=root&password=026849";
                connection = DriverManager.getConnection(database);
                statement = connection.createStatement();
                //set auto commit to false, make sure all entries will insert before commiting
                connection.setAutoCommit(false);
                String msg="";
                Workbook workbook=null;
                try{
                    //entries : number of uploaded and inserted to database rows
                    int entries=0;
                    workbook = WorkbookFactory.create(file);
                    Sheet sheet = workbook.getSheetAt(0);
                    DataFormatter dataFormatter = new DataFormatter();
                    for (Row row: sheet) {
                        if(row.getLastCellNum()>=3 && row.getRowNum()>0){
                            /*  OPEN DATABASE - CHECK LOGICAL CONNECTION - INSERT ENTRIES - START   */
                            String id_subject = row.getCell(0).toString();
                            String title = row.getCell(1).toString();
                            String description = row.getCell(2).toString();
                            //check if the id_subject already exists
                            boolean flag = false;
                            String sql = "select count(*) from subject where id_subject = '"+id_subject+"'";
                            ResultSet rs = statement.executeQuery(sql);
                            if(rs.first()){
                                if(rs.getInt("count(*)")==0){
                                    flag = true;
                                }
                            }
                            rs.close();
                            if(flag){
                                //insert the subject
                                sql = "insert into subject(id_subject,title,description) values"
                                        + "('"+id_subject+"','"+title+"','"+description+"')";
                                statement.executeUpdate(sql);
                                entries++;
                            }else{
                                //already exists
                            }
                            /*  OPEN DATABASE - CHECK LOGICAL CONNECTION - INSERT ENTRIES - END     */
                        }else{
                        }
                    }
                    int rows = sheet.getPhysicalNumberOfRows();
                    if(rows<2){
                        msg="Ξ— Ξ΄ΞΉΞ±Ξ΄ΞΉΞΊΞ±ΟƒΞ―Ξ± Ξ΄ΞµΞ½ ΞΏΞ»ΞΏΞΊΞ»Ξ·Ο�Ο�ΞΈΞ·ΞΊΞµ : Ξ”ΞµΞ½ Ο…Ο€Ξ¬Ο�Ο‡ΞΏΟ…Ξ½ ΞµΞ³Ξ³Ο�Ξ±Ο†Ξ­Ο‚";
                        connection.rollback();
                    }else{
                        if(entries==(rows-1)){
                            msg="Ξ— Ξ΄ΞΉΞ±Ξ΄ΞΉΞΊΞ±ΟƒΞ―Ξ± ΞΏΞ»ΞΏΞΊΞ»Ξ·Ο�Ο�ΞΈΞ·ΞΊΞµ : "+entries+" ΞµΞ³Ξ³Ο�Ξ±Ο†Ξ­Ο‚ Ο€Ο�ΞΏΟƒΞΈΞ­ΞΈΞ·ΞΊΞ±Ξ½";
                            connection.commit();
                        }else{
                            connection.rollback();
                            msg="Ξ— Ξ΄ΞΉΞ±Ξ΄ΞΉΞΊΞ±ΟƒΞ―Ξ± Ξ΄ΞµΞ½ ΞΏΞ»ΞΏΞΊΞ»Ξ·Ο�Ο�ΞΈΞ·ΞΊΞµ : Ξ�Ξ¬Ο€ΞΏΞΉΞµΟ‚ Ξ­Ξ³Ξ³Ο�Ξ±Ο†Ξ­Ο‚ ΞµΞ―Ξ½Ξ±ΞΉ Ξ»Ξ¬ΞΈΞΏΟ‚"
                                    + " Ξ® Ο…Ο€Ξ¬Ο�Ο‡ΞΏΟ…Ξ½";
                        }
                    }
                    connection.setAutoCommit(true);
                    workbook.close();
                    //file.delete();
                    insertSubjectsErrorLabel.setText(msg);
                }catch(Exception e){
                    connection.rollback();
                    connection.setAutoCommit(true);
                    //workbook.close();
                    //file.delete();
                    e.printStackTrace();
                    insertSubjectsErrorLabel.setText("Ξ— Ξ΄ΞΉΞ±Ξ΄ΞΉΞΊΞ±ΟƒΞ―Ξ± Ξ΄ΞµΞ½ ΞΏΞ»ΞΏΞΊΞ»Ξ·Ο�Ο�ΞΈΞ·ΞΊΞµ : Ξ¤ΞΏ Ξ±Ο�Ο‡ΞµΞ―ΞΏ Ξ΄ΞµΞ½ ΞµΞ―Ξ½Ξ±ΞΉ excel "
                            + "Ξ® ΞΏΞΉ ΞµΞ³Ξ³Ο�Ξ±Ο†Ξ­Ο‚ ΞµΞ―Ξ½Ξ±ΞΉ Ξ»Ξ¬ΞΈΞΏΟ‚");
                }
                //delete downloaded file
                workbook.close();
                //file.delete();
                /*      OPEN EXCEL FILE HERE   -  END        */
                connection.close(); 
            } catch (SQLException | ClassNotFoundException ex) {
                ex.printStackTrace();
                insertSubjectsErrorLabel.setText("Ξ— Ξ΄ΞΉΞ±Ξ΄ΞΉΞΊΞ±ΟƒΞ―Ξ± Ξ΄ΞµΞ½ ΞΏΞ»ΞΏΞΊΞ»Ξ·Ο�Ο�ΞΈΞ·ΞΊΞµ : Ξ¤ΞΏ Ξ±Ο�Ο‡ΞµΞ―ΞΏ Ξ΄ΞµΞ½ ΞµΞ―Ξ½Ξ±ΞΉ excel "
                            + "Ξ® ΞΏΞΉ ΞµΞ³Ξ³Ο�Ξ±Ο†Ξ­Ο‚ ΞµΞ―Ξ½Ξ±ΞΉ Ξ»Ξ¬ΞΈΞΏΟ‚");
            } catch (IOException ex) {
                ex.printStackTrace();
                insertSubjectsErrorLabel.setText("Ξ— Ξ΄ΞΉΞ±Ξ΄ΞΉΞΊΞ±ΟƒΞ―Ξ± Ξ΄ΞµΞ½ ΞΏΞ»ΞΏΞΊΞ»Ξ·Ο�Ο�ΞΈΞ·ΞΊΞµ : Ξ¤ΞΏ Ξ±Ο�Ο‡ΞµΞ―ΞΏ Ξ΄ΞµΞ½ ΞµΞ―Ξ½Ξ±ΞΉ excel "
                            + "Ξ® ΞΏΞΉ ΞµΞ³Ξ³Ο�Ξ±Ο†Ξ­Ο‚ ΞµΞ―Ξ½Ξ±ΞΉ Ξ»Ξ¬ΞΈΞΏΟ‚");
            }    
        } else {
            //cancel by user
        }
    }//GEN-LAST:event_insertSubjectsFileButtonActionPerformed

    private void insertSubjectsSubmitButtonMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_insertSubjectsSubmitButtonMouseEntered
        // TODO add your handling code here:
        insertSubjectsSubmitButton.setBorder(BorderFactory.createMatteBorder(1,1,1,1,Color.decode("0x448AFF")));
    }//GEN-LAST:event_insertSubjectsSubmitButtonMouseEntered

    private void insertSubjectsSubmitButtonMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_insertSubjectsSubmitButtonMouseExited
        // TODO add your handling code here:
        insertSubjectsSubmitButton.setBorder(BorderFactory.createMatteBorder(0,1,0,1,Color.decode("0x448AFF")));
    }//GEN-LAST:event_insertSubjectsSubmitButtonMouseExited

    private void insertSubjectsSubmitButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_insertSubjectsSubmitButtonActionPerformed
        // TODO add your handling code here:
        String id_subject = insertSubjectsId_subjectTextField.getText();
        String title = insertSubjectsTitleTextField.getText();
        String description = insertSubjectsDescriptionTextArea.getText();
        if(id_subject.isEmpty() || title.isEmpty() || description.isEmpty()){
            insertSubjectsErrorLabel.setText("Ξ£Ο…Ο€Ξ»Ξ·Ο�Ο�ΟƒΟ„Ξµ Ο€Ο�Ο�Ο„Ξ± Ο„Ξ± Ο€ΞµΞ΄Ξ―Ξ±");
        }else{
            if(id_subject.matches("[0-9]{1,10}") && title.matches("[a-zA-Z0-9\\+,. ]{1,50}")
                    && description.matches("[a-zA-Z0-9\\+,. ]{1,100}")){
                try{
                    Class.forName("com.mysql.jdbc.Driver");
                    String database = "jdbc:mysql://localhost:3306/examination_centers?user=root&password=026849";
                    Connection connection = DriverManager.getConnection(database);
                    Statement statement = connection.createStatement();
                    //check if the id_subject already exists
                    boolean flag = false;
                    String sql = "select count(*) from subject where id_subject = '"+id_subject+"'";
                    ResultSet rs = statement.executeQuery(sql);
                    if(rs.first()){
                        if(rs.getInt("count(*)")==0){
                            flag = true;
                        }
                    }
                    rs.close();
                    if(flag){
                        //insert the subject
                        sql = "insert into subject(id_subject,title,description) values"
                                + "('"+id_subject+"','"+title+"','"+description+"')";
                        statement.executeUpdate(sql);
                        insertSubjectsErrorLabel.setText("Ξ— ΞµΞΉΟƒΞ±Ξ³Ο‰Ξ³Ξ® Ο„ΞΏΟ… ΞΌΞ±ΞΈΞ®ΞΌΞ±Ο„ΞΏΟ‚ ΞΏΞ»ΞΏΞΊΞ»Ξ·Ο�Ο�ΞΈΞ·ΞΊΞµ");
                    }else{
                        insertSubjectsErrorLabel.setText("Ξ¤ΞΏ ΞΌΞ¬ΞΈΞ·ΞΌΞ± ΞΌΞµ Ξ±Ο…Ο„Ο� Ο„ΞΏΞ½ ΞΊΟ‰Ξ΄ΞΉΞΊΟ� Ο…Ο€Ξ¬Ο�Ο‡ΞµΞΉ Ξ®Ξ΄Ξ·");
                    }
                    connection.close();
                }catch(ClassNotFoundException | SQLException e){
                    e.printStackTrace();
                }
            }else{
                insertSubjectsErrorLabel.setText("Ξ”ΞµΞ½ ΞµΟ€ΞΉΟ„Ο�Ξ­Ο€ΞΏΞ½Ο„Ξ±ΞΉ Ο„Ξ± ΟƒΟ�ΞΌΞ²ΞΏΞ»Ξ±, Ξ� Ο„Ξ―Ο„Ξ»ΞΏΟ‚ Ο€Ο�Ξ­Ο€ΞµΞΉ Ξ½Ξ± Ξ­ΞΉΞ½Ξ±ΞΉ ΞΌΞ­Ο‡Ο�ΞΉ 50 Ο‡Ξ±Ο�Ξ±ΞΊΟ„Ξ®Ο�ΞµΟ‚ ΞΊΞ±ΞΉ Ξ· Ο€ΞµΟ�ΞΉΞ³Ο�Ξ±Ο†Ξ® ΞΌΞ­Ο‡Ο�ΞΉ 100");
            }
        }
    }//GEN-LAST:event_insertSubjectsSubmitButtonActionPerformed

    private void removeSubjectsFileButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_removeSubjectsFileButtonActionPerformed
        // TODO add your handling code here:
        int returnVal = fileChooser.showOpenDialog(AdminApp.this);
        if (returnVal == JFileChooser.APPROVE_OPTION) {
            File file = fileChooser.getSelectedFile();
            //This is where a real application would open the file.
            Connection connection = null;
            Statement statement = null;
            try{
                Class.forName("com.mysql.jdbc.Driver");
                String database = "jdbc:mysql://localhost:3306/examination_centers?user=root&password=026849";
                connection = DriverManager.getConnection(database);
                statement = connection.createStatement();
                //set auto commit to false, make sure all entries will insert before commiting
                connection.setAutoCommit(false);
                String msg="";
                Workbook workbook=null;
                try{
                    //entries : number of uploaded and inserted to database rows
                    int entries=0;
                    workbook = WorkbookFactory.create(file);
                    Sheet sheet = workbook.getSheetAt(0);
                    DataFormatter dataFormatter = new DataFormatter();
                    for (Row row: sheet) {
                        if(row.getLastCellNum()>=1 && row.getRowNum()>0){
                            /*  OPEN DATABASE - CHECK LOGICAL CONNECTION - INSERT ENTRIES - START   */
                            String id_subject = row.getCell(0).toString();
                            //check if the subject exists
                            boolean flag = true;
                            String sql = "select count(*) from subject where id_subject = '"+id_subject+"'";
                            ResultSet rs = statement.executeQuery(sql);
                            if(rs.first()){
                                if(rs.getInt("count(*)")==0){
                                    flag = false;
                                }
                            }
                            rs.close();
                            if(flag){
                                //check if there are examinations assigned to the subject
                                flag = false;
                                sql = "select count(*) from examination where id_subject = '"+id_subject+"'";
                                rs = statement.executeQuery(sql);
                                if(rs.first()){
                                    if(rs.getInt("count(*)")==0){
                                        flag = true;
                                    }
                                }
                                rs.close();
                                if(flag){
                                    //delete now the subject
                                    sql = "delete from subject where id_subject = '"+id_subject+"'";
                                    statement.executeUpdate(sql);
                                    entries++;
                                }else{
                                    //subjects has relations
                                }
                            }else{
                                //subject does not exists
                            }
                            /*  OPEN DATABASE - CHECK LOGICAL CONNECTION - INSERT ENTRIES - END     */
                        }else{
                        }
                    }
                    int rows = sheet.getPhysicalNumberOfRows();
                    if(rows<2){
                        msg="Ξ— Ξ΄ΞΉΞ±Ξ΄ΞΉΞΊΞ±ΟƒΞ―Ξ± Ξ΄ΞµΞ½ ΞΏΞ»ΞΏΞΊΞ»Ξ·Ο�Ο�ΞΈΞ·ΞΊΞµ : Ξ”ΞµΞ½ Ο…Ο€Ξ¬Ο�Ο‡ΞΏΟ…Ξ½ ΞµΞ³Ξ³Ο�Ξ±Ο†Ξ­Ο‚";
                        connection.rollback();
                    }else{
                        if(entries==(rows-1)){
                            msg="Ξ— Ξ΄ΞΉΞ±Ξ΄ΞΉΞΊΞ±ΟƒΞ―Ξ± ΞΏΞ»ΞΏΞΊΞ»Ξ·Ο�Ο�ΞΈΞ·ΞΊΞµ : "+entries+" ΞµΞ³Ξ³Ο�Ξ±Ο†Ξ­Ο‚ Ο€Ο�ΞΏΟƒΞΈΞ­ΞΈΞ·ΞΊΞ±Ξ½";
                            connection.commit();
                        }else{
                            connection.rollback();
                            msg="Ξ— Ξ΄ΞΉΞ±Ξ΄ΞΉΞΊΞ±ΟƒΞ―Ξ± Ξ΄ΞµΞ½ ΞΏΞ»ΞΏΞΊΞ»Ξ·Ο�Ο�ΞΈΞ·ΞΊΞµ : Ξ�Ξ¬Ο€ΞΏΞΉΞµΟ‚ Ξ­Ξ³Ξ³Ο�Ξ±Ο†Ξ­Ο‚ ΞµΞ―Ξ½Ξ±ΞΉ Ξ»Ξ¬ΞΈΞΏΟ‚"
                                    + " Ξ® Ο…Ο€Ξ¬Ο�Ο‡ΞΏΟ…Ξ½";
                        }
                    }
                    connection.setAutoCommit(true);
                    workbook.close();
                    //file.delete();
                    removeSubjectsErrorLabel.setText(msg);
                }catch(Exception e){
                    connection.rollback();
                    connection.setAutoCommit(true);
                    //workbook.close();
                    //file.delete();
                    e.printStackTrace();
                    removeSubjectsErrorLabel.setText("Ξ— Ξ΄ΞΉΞ±Ξ΄ΞΉΞΊΞ±ΟƒΞ―Ξ± Ξ΄ΞµΞ½ ΞΏΞ»ΞΏΞΊΞ»Ξ·Ο�Ο�ΞΈΞ·ΞΊΞµ : Ξ¤ΞΏ Ξ±Ο�Ο‡ΞµΞ―ΞΏ Ξ΄ΞµΞ½ ΞµΞ―Ξ½Ξ±ΞΉ excel "
                            + "Ξ® ΞΏΞΉ ΞµΞ³Ξ³Ο�Ξ±Ο†Ξ­Ο‚ ΞµΞ―Ξ½Ξ±ΞΉ Ξ»Ξ¬ΞΈΞΏΟ‚");
                }
                //delete downloaded file
                workbook.close();
                //file.delete();
                /*      OPEN EXCEL FILE HERE   -  END        */
                connection.close(); 
            } catch (SQLException | ClassNotFoundException ex) {
                ex.printStackTrace();
                removeSubjectsErrorLabel.setText("Ξ— Ξ΄ΞΉΞ±Ξ΄ΞΉΞΊΞ±ΟƒΞ―Ξ± Ξ΄ΞµΞ½ ΞΏΞ»ΞΏΞΊΞ»Ξ·Ο�Ο�ΞΈΞ·ΞΊΞµ : Ξ¤ΞΏ Ξ±Ο�Ο‡ΞµΞ―ΞΏ Ξ΄ΞµΞ½ ΞµΞ―Ξ½Ξ±ΞΉ excel "
                            + "Ξ® ΞΏΞΉ ΞµΞ³Ξ³Ο�Ξ±Ο†Ξ­Ο‚ ΞµΞ―Ξ½Ξ±ΞΉ Ξ»Ξ¬ΞΈΞΏΟ‚");
            } catch (IOException ex) {
                ex.printStackTrace();
                removeSubjectsErrorLabel.setText("Ξ— Ξ΄ΞΉΞ±Ξ΄ΞΉΞΊΞ±ΟƒΞ―Ξ± Ξ΄ΞµΞ½ ΞΏΞ»ΞΏΞΊΞ»Ξ·Ο�Ο�ΞΈΞ·ΞΊΞµ : Ξ¤ΞΏ Ξ±Ο�Ο‡ΞµΞ―ΞΏ Ξ΄ΞµΞ½ ΞµΞ―Ξ½Ξ±ΞΉ excel "
                            + "Ξ® ΞΏΞΉ ΞµΞ³Ξ³Ο�Ξ±Ο†Ξ­Ο‚ ΞµΞ―Ξ½Ξ±ΞΉ Ξ»Ξ¬ΞΈΞΏΟ‚");
            }    
        } else {
            //cancel by user
        }
    }//GEN-LAST:event_removeSubjectsFileButtonActionPerformed

    private void removeSubjectsSubmitButtonMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_removeSubjectsSubmitButtonMouseEntered
        // TODO add your handling code here:
        removeSubjectsSubmitButton.setBorder(BorderFactory.createMatteBorder(1,1,1,1,Color.decode("0x448AFF")));
    }//GEN-LAST:event_removeSubjectsSubmitButtonMouseEntered

    private void removeSubjectsSubmitButtonMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_removeSubjectsSubmitButtonMouseExited
        // TODO add your handling code here:
        removeSubjectsSubmitButton.setBorder(BorderFactory.createMatteBorder(0,1,0,1,Color.decode("0x448AFF")));
    }//GEN-LAST:event_removeSubjectsSubmitButtonMouseExited

    private void removeSubjectsSubmitButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_removeSubjectsSubmitButtonActionPerformed
        // TODO add your handling code here:
        String id_subject = removeSubjectsId_subjectTextField.getText();
        if(id_subject.isEmpty()){
            removeSubjectsErrorLabel.setText("Ξ Ο�Ξ­Ο€ΞµΞΉ Ξ½Ξ± ΟƒΟ…ΞΌΟ€Ξ»Ξ·Ο�Ο�ΟƒΞµΟ„Ξµ Ο„ΞΏ Ο€ΞµΞ΄Ξ―ΞΏ Ο€Ο�Ο�Ο„Ξ±");
        }else{
            if(id_subject.matches("[0-9]+")){
                try{
                    Class.forName("com.mysql.jdbc.Driver");
                    String database = "jdbc:mysql://localhost:3306/examination_centers?user=root&password=026849";
                    Connection connection = DriverManager.getConnection(database);
                    Statement statement = connection.createStatement();
                    //check if the subject exists
                    boolean flag = true;
                    String sql = "select count(*) from subject where id_subject = '"+id_subject+"'";
                    ResultSet rs = statement.executeQuery(sql);
                    if(rs.first()){
                        if(rs.getInt("count(*)")==0){
                            flag = false;
                        }
                    }
                    rs.close();
                    if(flag){
                        //check if there are examinations assigned to the subject
                        flag = false;
                        sql = "select count(*) from examination where id_subject = '"+id_subject+"'";
                        rs = statement.executeQuery(sql);
                        if(rs.first()){
                            if(rs.getInt("count(*)")==0){
                                flag = true;
                            }
                        }
                        rs.close();
                        if(flag){
                            //delete now the subject
                            sql = "delete from subject where id_subject = '"+id_subject+"'";
                            statement.executeUpdate(sql);
                            removeSubjectsErrorLabel.setText("Ξ— Ξ±Ο†Ξ±Ξ―Ο�ΞµΟƒΞ· Ο„ΞΏΟ… ΞΌΞ±ΞΈΞ®ΞΌΞ±Ο„ΞΏΟ‚ ΞΏΞ»ΞΏΞΊΞ»Ξ·Ο�Ο�ΞΈΞ·ΞΊΞµ");
                        }else{
                            removeSubjectsErrorLabel.setText("Ξ¤ΞΏ ΞΌΞ¬ΞΈΞ·ΞΌΞ± Ξ΄ΞµΞ½ ΞΌΟ€ΞΏΟ�ΞµΞ― Ξ½Ξ± Ξ΄ΞΉΞ±Ξ³Ο�Ξ±Ο†ΞµΞ― : Ξ¥Ο€Ξ¬Ο�Ο‡ΞΏΟ…Ξ½"
                                    + " Ξ±ΞΊΟ�ΞΌΞ± ΞµΞΎΞµΟ„Ξ¬ΟƒΞµΞΉΟ‚ ΞµΞ³Ξ³ΞµΞ³Ο�Ξ±ΞΌΞΌΞ­Ξ½ΞµΟ‚ ΟƒΞµ Ξ±Ο…Ο„Ο�");
                        }
                    }else{
                        removeSubjectsErrorLabel.setText("Ξ¤ΞΏ ΞΌΞ¬ΞΈΞ·ΞΌΞ± ΞΌΞµ Ξ±Ο…Ο„Ο� Ο„ΞΏΞ½ ΞΊΟ‰Ξ΄ΞΉΞΊΟ� Ξ΄ΞµΞ½ Ο…Ο€Ξ¬Ο�Ο‡ΞµΞΉ");
                    }
                    connection.close();
                }catch(SQLException | ClassNotFoundException e){
                    e.printStackTrace();
                }
            }else{
                removeSubjectsErrorLabel.setText("Ξ¤ΞΏ Ο€ΞµΞ΄Ξ―ΞΏ Ο€Ο�Ξ­Ο€ΞµΞΉ Ξ½Ξ± ΞµΞ―Ξ½Ξ±ΞΉ Ξ±Ο�ΞΉΞΈΞΌΟ�Ο‚");
            }
        }
    }//GEN-LAST:event_removeSubjectsSubmitButtonActionPerformed

    private void removeSubjectsButtonMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_removeSubjectsButtonMouseEntered
        // TODO add your handling code here:
        removeSubjectsButton.setBorder(BorderFactory.createMatteBorder(1,1,1,1,Color.decode("0x448AFF")));
    }//GEN-LAST:event_removeSubjectsButtonMouseEntered

    private void removeSubjectsButtonMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_removeSubjectsButtonMouseExited
        // TODO add your handling code here:
        removeSubjectsButton.setBorder(BorderFactory.createMatteBorder(0,1,0,1,Color.decode("0x448AFF")));
    }//GEN-LAST:event_removeSubjectsButtonMouseExited

    private void removeSubjectsButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_removeSubjectsButtonActionPerformed
        // TODO add your handling code here:
        removeSubjectsButton.setFont(new java.awt.Font("Tahoma", 0, 16));
        insertSubjectsButton.setFont(new java.awt.Font("Tahoma", 0, 14));
        
        subjectsContainerPanel.removeAll();
        subjectsContainerPanel.add(removeSubjectsPanel);
        subjectsContainerPanel.repaint();
        subjectsContainerPanel.revalidate();
    }//GEN-LAST:event_removeSubjectsButtonActionPerformed

    private void insertSubjectsButtonMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_insertSubjectsButtonMouseEntered
        // TODO add your handling code here:
        insertSubjectsButton.setBorder(BorderFactory.createMatteBorder(1,1,1,1,Color.decode("0x448AFF")));
    }//GEN-LAST:event_insertSubjectsButtonMouseEntered

    private void insertSubjectsButtonMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_insertSubjectsButtonMouseExited
        // TODO add your handling code here:
        insertSubjectsButton.setBorder(BorderFactory.createMatteBorder(0,1,0,1,Color.decode("0x448AFF")));
    }//GEN-LAST:event_insertSubjectsButtonMouseExited

    private void insertSubjectsButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_insertSubjectsButtonActionPerformed
        // TODO add your handling code here:
        removeSubjectsButton.setFont(new java.awt.Font("Tahoma", 0, 14));
        insertSubjectsButton.setFont(new java.awt.Font("Tahoma", 0, 16));
        
        subjectsContainerPanel.removeAll();
        subjectsContainerPanel.add(insertSubjectsPanel);
        subjectsContainerPanel.repaint();
        subjectsContainerPanel.revalidate();
    }//GEN-LAST:event_insertSubjectsButtonActionPerformed

    private void removeQuestionsButtonMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_removeQuestionsButtonMouseEntered
        // TODO add your handling code here:
        removeQuestionsButton.setBorder(BorderFactory.createMatteBorder(1,1,1,1,Color.decode("0x448AFF")));
    }//GEN-LAST:event_removeQuestionsButtonMouseEntered

    private void removeQuestionsButtonMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_removeQuestionsButtonMouseExited
        // TODO add your handling code here:
        removeQuestionsButton.setBorder(BorderFactory.createMatteBorder(0,1,0,1,Color.decode("0x448AFF")));
    }//GEN-LAST:event_removeQuestionsButtonMouseExited

    private void removeQuestionsButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_removeQuestionsButtonActionPerformed
        // TODO add your handling code here:
        removeQuestionsButton.setFont(new java.awt.Font("Tahoma", 0, 16));
        insertQuestionsButton.setFont(new java.awt.Font("Tahoma", 0, 14));
        
        questionsContainerPanel.removeAll();
        questionsContainerPanel.add(removeQuestionsPanel);
        questionsContainerPanel.repaint();
        questionsContainerPanel.revalidate();
    }//GEN-LAST:event_removeQuestionsButtonActionPerformed

    private void insertQuestionsButtonMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_insertQuestionsButtonMouseEntered
        // TODO add your handling code here:
        insertQuestionsButton.setBorder(BorderFactory.createMatteBorder(1,1,1,1,Color.decode("0x448AFF")));
    }//GEN-LAST:event_insertQuestionsButtonMouseEntered

    private void insertQuestionsButtonMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_insertQuestionsButtonMouseExited
        // TODO add your handling code here:
        insertQuestionsButton.setBorder(BorderFactory.createMatteBorder(0,1,0,1,Color.decode("0x448AFF")));
    }//GEN-LAST:event_insertQuestionsButtonMouseExited

    private void insertQuestionsButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_insertQuestionsButtonActionPerformed
        // TODO add your handling code here:
        removeQuestionsButton.setFont(new java.awt.Font("Tahoma", 0, 14));
        insertQuestionsButton.setFont(new java.awt.Font("Tahoma", 0, 16));
        
        questionsContainerPanel.removeAll();
        questionsContainerPanel.add(insertQuestionsPanel);
        questionsContainerPanel.repaint();
        questionsContainerPanel.revalidate();
    }//GEN-LAST:event_insertQuestionsButtonActionPerformed

    private void insertQuestionsFileButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_insertQuestionsFileButtonActionPerformed
        // TODO add your handling code here:
         int returnVal = fileChooser.showOpenDialog(AdminApp.this);
        if (returnVal == JFileChooser.APPROVE_OPTION) {
            File file = fileChooser.getSelectedFile();
            //This is where a real application would open the file.
            Connection connection = null;
            Statement statement = null;
            try{
                Class.forName("com.mysql.jdbc.Driver");
                String database = "jdbc:mysql://localhost:3306/examination_centers?user=root&password=026849";
                connection = DriverManager.getConnection(database);
                statement = connection.createStatement();
                //set auto commit to false, make sure all entries will insert before commiting
                connection.setAutoCommit(false);
                String msg="";
                Workbook workbook=null;
                try{
                    //entries : number of uploaded and inserted to database rows
                    int entries=0;
                    workbook = WorkbookFactory.create(file);
                    Sheet sheet = workbook.getSheetAt(0);
                    DataFormatter dataFormatter = new DataFormatter();
                    for (Row row: sheet) {
                        if(row.getLastCellNum()>=8 && row.getRowNum()>0){
                            /*  OPEN DATABASE - CHECK LOGICAL CONNECTION - INSERT ENTRIES - START   */
                            String id_question = row.getCell(0).toString();
                            String question = row.getCell(1).toString();
                            String answer1 = row.getCell(2).toString();
                            String answer2 = row.getCell(3).toString();
                            String answer3 = row.getCell(4).toString();
                            String answer4 = row.getCell(5).toString();
                            String correct = row.getCell(6).toString();
                            String id_subject = row.getCell(7).toString();
                            //check if the id_question already exists
                            boolean flag = false;
                            String sql = "select count(*) from question where id_question = '"+id_question+"'";
                            ResultSet rs = statement.executeQuery(sql);
                            if(rs.first()){
                                if(rs.getInt("count(*)")==0){
                                    flag = true;
                                }
                            }
                            rs.close();
                            if(flag){
                                //insert the question
                                sql = "insert into question(id_question,question,answer1,answer2,answer3,answer4,correct,id_subject) values"
                                        + "('"+id_question+"','"+question+"','"+answer1+"','"+answer2+"',"
                                        + "'"+answer3+"','"+answer4+"','"+correct+"','"+id_subject+"')";
                                statement.executeUpdate(sql);
                                entries++;
                            }else{
                                //question already exists
                            }
                            /*  OPEN DATABASE - CHECK LOGICAL CONNECTION - INSERT ENTRIES - END     */
                        }else{
                        }
                    }
                    int rows = sheet.getPhysicalNumberOfRows();
                    if(rows<2){
                        msg="Ξ— Ξ΄ΞΉΞ±Ξ΄ΞΉΞΊΞ±ΟƒΞ―Ξ± Ξ΄ΞµΞ½ ΞΏΞ»ΞΏΞΊΞ»Ξ·Ο�Ο�ΞΈΞ·ΞΊΞµ : Ξ”ΞµΞ½ Ο…Ο€Ξ¬Ο�Ο‡ΞΏΟ…Ξ½ ΞµΞ³Ξ³Ο�Ξ±Ο†Ξ­Ο‚";
                        connection.rollback();
                    }else{
                        if(entries==(rows-1)){
                            msg="Ξ— Ξ΄ΞΉΞ±Ξ΄ΞΉΞΊΞ±ΟƒΞ―Ξ± ΞΏΞ»ΞΏΞΊΞ»Ξ·Ο�Ο�ΞΈΞ·ΞΊΞµ : "+entries+" ΞµΞ³Ξ³Ο�Ξ±Ο†Ξ­Ο‚ Ο€Ο�ΞΏΟƒΞΈΞ­ΞΈΞ·ΞΊΞ±Ξ½";
                            connection.commit();
                        }else{
                            connection.rollback();
                            msg="Ξ— Ξ΄ΞΉΞ±Ξ΄ΞΉΞΊΞ±ΟƒΞ―Ξ± Ξ΄ΞµΞ½ ΞΏΞ»ΞΏΞΊΞ»Ξ·Ο�Ο�ΞΈΞ·ΞΊΞµ : Ξ�Ξ¬Ο€ΞΏΞΉΞµΟ‚ Ξ­Ξ³Ξ³Ο�Ξ±Ο†Ξ­Ο‚ ΞµΞ―Ξ½Ξ±ΞΉ Ξ»Ξ¬ΞΈΞΏΟ‚"
                                    + " Ξ® Ο…Ο€Ξ¬Ο�Ο‡ΞΏΟ…Ξ½";
                        }
                    }
                    connection.setAutoCommit(true);
                    workbook.close();
                    //file.delete();
                    insertQuestionsErrorLabel.setText(msg);
                }catch(Exception e){
                    connection.rollback();
                    connection.setAutoCommit(true);
                    //workbook.close();
                    //file.delete();
                    e.printStackTrace();
                    insertQuestionsErrorLabel.setText("Ξ— Ξ΄ΞΉΞ±Ξ΄ΞΉΞΊΞ±ΟƒΞ―Ξ± Ξ΄ΞµΞ½ ΞΏΞ»ΞΏΞΊΞ»Ξ·Ο�Ο�ΞΈΞ·ΞΊΞµ : Ξ¤ΞΏ Ξ±Ο�Ο‡ΞµΞ―ΞΏ Ξ΄ΞµΞ½ ΞµΞ―Ξ½Ξ±ΞΉ excel "
                            + "Ξ® ΞΏΞΉ ΞµΞ³Ξ³Ο�Ξ±Ο†Ξ­Ο‚ ΞµΞ―Ξ½Ξ±ΞΉ Ξ»Ξ¬ΞΈΞΏΟ‚");
                }
                //delete downloaded file
                workbook.close();
                //file.delete();
                /*      OPEN EXCEL FILE HERE   -  END        */
                connection.close(); 
            } catch (SQLException | ClassNotFoundException ex) {
                ex.printStackTrace();
                insertQuestionsErrorLabel.setText("Ξ— Ξ΄ΞΉΞ±Ξ΄ΞΉΞΊΞ±ΟƒΞ―Ξ± Ξ΄ΞµΞ½ ΞΏΞ»ΞΏΞΊΞ»Ξ·Ο�Ο�ΞΈΞ·ΞΊΞµ : Ξ¤ΞΏ Ξ±Ο�Ο‡ΞµΞ―ΞΏ Ξ΄ΞµΞ½ ΞµΞ―Ξ½Ξ±ΞΉ excel "
                            + "Ξ® ΞΏΞΉ ΞµΞ³Ξ³Ο�Ξ±Ο†Ξ­Ο‚ ΞµΞ―Ξ½Ξ±ΞΉ Ξ»Ξ¬ΞΈΞΏΟ‚");
            } catch (IOException ex) {
                ex.printStackTrace();
                insertQuestionsErrorLabel.setText("Ξ— Ξ΄ΞΉΞ±Ξ΄ΞΉΞΊΞ±ΟƒΞ―Ξ± Ξ΄ΞµΞ½ ΞΏΞ»ΞΏΞΊΞ»Ξ·Ο�Ο�ΞΈΞ·ΞΊΞµ : Ξ¤ΞΏ Ξ±Ο�Ο‡ΞµΞ―ΞΏ Ξ΄ΞµΞ½ ΞµΞ―Ξ½Ξ±ΞΉ excel "
                            + "Ξ® ΞΏΞΉ ΞµΞ³Ξ³Ο�Ξ±Ο†Ξ­Ο‚ ΞµΞ―Ξ½Ξ±ΞΉ Ξ»Ξ¬ΞΈΞΏΟ‚");
            }    
        } else {
            //cancel by user
        }
    }//GEN-LAST:event_insertQuestionsFileButtonActionPerformed

    private void insertQuestionsSubmitButtonMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_insertQuestionsSubmitButtonMouseEntered
        // TODO add your handling code here:
        insertQuestionsSubmitButton.setBorder(BorderFactory.createMatteBorder(1,1,1,1,Color.decode("0x448AFF")));
    }//GEN-LAST:event_insertQuestionsSubmitButtonMouseEntered

    private void insertQuestionsSubmitButtonMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_insertQuestionsSubmitButtonMouseExited
        // TODO add your handling code here:
        insertQuestionsSubmitButton.setBorder(BorderFactory.createMatteBorder(0,1,0,1,Color.decode("0x448AFF")));
    }//GEN-LAST:event_insertQuestionsSubmitButtonMouseExited

    private void insertQuestionsSubmitButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_insertQuestionsSubmitButtonActionPerformed
        // TODO add your handling code here:
        String id_question = insertQuestionsId_questionTextField.getText();
        String question = insertQuestionsQuestionTextArea.getText();
        String answer1 = insertQuestionsAnswer1TextArea.getText();
        String answer2 = insertQuestionsAnswer2TextArea.getText();
        String answer3 = insertQuestionsAnswer3TextArea.getText();
        String answer4 = insertQuestionsAnswer4TextArea.getText();
        String correct = insertQuestionsCorrectTextArea.getText();
        String id_subject = insertQuestionsId_subjectComboBox.getSelectedItem().toString();
        if(id_question.isEmpty() || answer1.isEmpty() || answer2.isEmpty()
                || answer3.isEmpty() || answer4.isEmpty() || correct.isEmpty()
                || question.isEmpty() || id_subject.isEmpty()){
            insertQuestionsErrorLabel.setText("Ξ Ο�Ξ­Ο€ΞµΞΉ Ξ½Ξ± ΟƒΟ…ΞΌΟ€Ξ»Ξ·Ο�Ο‰ΞΈΞΏΟ�Ξ½ Ο�Ξ»Ξ± Ο„Ξ± Ο€ΞµΞ΄Ξ―Ξ±");
        }else{
            String regex_a = "[a-zA-ZΞ±-Ο‰Ξ‘-Ξ©Ο�Ξ―Ξ®Ο�Ξ¬Ξ­Ο�0-9 ,.?;]{1,100}";
            String regex_q = "[a-zA-ZΞ±-Ο‰Ξ‘-Ξ©Ο�Ξ―Ξ®Ο�Ξ¬Ξ­Ο�0-9 ,.;?]{1,500}";
            if(id_question.matches("[0-9]{1,10}") && question.matches(regex_q) && answer1.matches(regex_a)
                    && answer2.matches(regex_a) && answer3.matches(regex_a) && answer4.matches(regex_a)
                    && correct.matches(regex_a)){
                try{
                    Class.forName("com.mysql.jdbc.Driver");
                    String database = "jdbc:mysql://localhost:3306/examination_centers?user=root&password=026849";
                    Connection connection = DriverManager.getConnection(database);
                    Statement statement = connection.createStatement();
                    //check if the id_question already exists
                    boolean flag = false;
                    String sql = "select count(*) from question where id_question = '"+id_question+"'";
                    ResultSet rs = statement.executeQuery(sql);
                    if(rs.first()){
                        if(rs.getInt("count(*)")==0){
                            flag = true;
                        }
                    }
                    rs.close();
                    if(flag){
                        //insert the question
                        sql = "insert into question(id_question,question,answer1,answer2,answer3,answer4,correct,id_subject) values"
                                + "('"+id_question+"','"+question+"','"+answer1+"','"+answer2+"',"
                                + "'"+answer3+"','"+answer4+"','"+correct+"','"+id_subject+"')";
                        statement.executeUpdate(sql);
                        insertQuestionsErrorLabel.setText("Ξ— ΞµΞΉΟƒΞ±Ξ³Ο‰Ξ³Ξ® Ο„Ξ·Ο‚ ΞµΟ�Ο�Ο„Ξ·ΟƒΞ·Ο‚ ΞΏΞ»ΞΏΞΊΞ»Ξ·Ο�Ο�ΞΈΞ·ΞΊΞµ");
                    }else{
                        insertQuestionsErrorLabel.setText("Ξ— ΞµΟ�Ο�Ο„Ξ·ΟƒΞ· ΞΌΞµ Ξ±Ο…Ο„Ο� Ο„ΞΏ ΞΊΟ‰Ξ΄ΞΉΞΊΟ� Ο…Ο€Ξ¬Ο�Ο‡ΞµΞΉ Ξ®Ξ΄Ξ·");
                    }
                    connection.close();
                }catch(SQLException | ClassNotFoundException e){
                    e.printStackTrace();
                }
            }else{
                insertQuestionsErrorLabel.setText("Ξ”ΞµΞ½ ΞµΟ€ΞΉΟ„Ο�Ξ­Ο€ΞΏΞ½Ο„Ξ±ΞΉ Ο„Ξ± ΟƒΟ�ΞΌΞ²ΞΏΞ»Ξ±. Ξ— ΞµΟ�Ο�Ο„Ξ·ΟƒΞ· ΞµΞ―Ξ½Ξ±ΞΉ ΞΌΞ­Ο‡Ο�ΞΉ 500 Ο‡Ξ±Ο�Ξ±ΞΊΟ„Ξ®Ο�ΞµΟ‚ ΞΊΞ±ΞΉ ΞΏΞΉ Ξ±Ο€Ξ±Ξ½Ο„Ξ®ΟƒΞµΞΉΟ‚ ΞΌΞ­Ο‡Ο�ΞΉ 100");
            }
        }
    }//GEN-LAST:event_insertQuestionsSubmitButtonActionPerformed

    private void removeQuestionsFileButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_removeQuestionsFileButtonActionPerformed
        // TODO add your handling code here:
         int returnVal = fileChooser.showOpenDialog(AdminApp.this);
        if (returnVal == JFileChooser.APPROVE_OPTION) {
            File file = fileChooser.getSelectedFile();
            //This is where a real application would open the file.
            Connection connection = null;
            Statement statement = null;
            try{
                Class.forName("com.mysql.jdbc.Driver");
                String database = "jdbc:mysql://localhost:3306/examination_centers?user=root&password=026849";
                connection = DriverManager.getConnection(database);
                statement = connection.createStatement();
                //set auto commit to false, make sure all entries will insert before commiting
                connection.setAutoCommit(false);
                String msg="";
                Workbook workbook=null;
                try{
                    //entries : number of uploaded and inserted to database rows
                    int entries=0;
                    workbook = WorkbookFactory.create(file);
                    Sheet sheet = workbook.getSheetAt(0);
                    DataFormatter dataFormatter = new DataFormatter();
                    for (Row row: sheet) {
                        if(row.getLastCellNum()>=1 && row.getRowNum()>0){
                            /*  OPEN DATABASE - CHECK LOGICAL CONNECTION - INSERT ENTRIES - START   */
                            String id_question = row.getCell(0).toString();

                            //check if the question exists
                            boolean flag = true;
                            String sql = "select count(*) from question where id_question = '"+id_question+"'";
                            ResultSet rs = statement.executeQuery(sql);
                            if(rs.first()){
                                if(rs.getInt("count(*)")==0){
                                    flag = false;
                                }
                            }
                            rs.close();
                            if(flag){
                                //check if there are users assigned(answered) to the question
                                flag = false;
                                sql = "select count(*) from class_has_user where id_question = '"+id_question+"'";
                                rs = statement.executeQuery(sql);
                                if(rs.first()){
                                    if(rs.getInt("count(*)")==0){
                                        flag = true;
                                    }
                                }
                                rs.close();
                                if(flag){
                                    //delete now the class
                                    sql = "delete from question where id_question = '"+id_question+"'";
                                    statement.executeUpdate(sql);
                                    entries++;
                                }else{
                                    //question has relations
                                }
                            }else{
                                //question does not exists
                            }
                            /*  OPEN DATABASE - CHECK LOGICAL CONNECTION - INSERT ENTRIES - END     */
                        }else{
                        }
                    }
                    int rows = sheet.getPhysicalNumberOfRows();
                    if(rows<2){
                        msg="Ξ— Ξ΄ΞΉΞ±Ξ΄ΞΉΞΊΞ±ΟƒΞ―Ξ± Ξ΄ΞµΞ½ ΞΏΞ»ΞΏΞΊΞ»Ξ·Ο�Ο�ΞΈΞ·ΞΊΞµ : Ξ”ΞµΞ½ Ο…Ο€Ξ¬Ο�Ο‡ΞΏΟ…Ξ½ ΞµΞ³Ξ³Ο�Ξ±Ο†Ξ­Ο‚";
                        connection.rollback();
                    }else{
                        if(entries==(rows-1)){
                            msg="Ξ— Ξ΄ΞΉΞ±Ξ΄ΞΉΞΊΞ±ΟƒΞ―Ξ± ΞΏΞ»ΞΏΞΊΞ»Ξ·Ο�Ο�ΞΈΞ·ΞΊΞµ : "+entries+" ΞµΞ³Ξ³Ο�Ξ±Ο†Ξ­Ο‚ Ξ±Ο†Ξ±ΞΉΟ�Ξ­ΞΈΞ·ΞΊΞ±Ξ½";
                            connection.commit();
                        }else{
                            connection.rollback();
                            msg="Ξ— Ξ΄ΞΉΞ±Ξ΄ΞΉΞΊΞ±ΟƒΞ―Ξ± Ξ΄ΞµΞ½ ΞΏΞ»ΞΏΞΊΞ»Ξ·Ο�Ο�ΞΈΞ·ΞΊΞµ : Ξ�Ξ¬Ο€ΞΏΞΉΞµΟ‚ Ξ­Ξ³Ξ³Ο�Ξ±Ο†Ξ­Ο‚ ΞµΞ―Ξ½Ξ±ΞΉ Ξ»Ξ¬ΞΈΞΏΟ‚"
                                    + " Ξ® Ο…Ο€Ξ¬Ο�Ο‡ΞΏΟ…Ξ½";
                        }
                    }
                    connection.setAutoCommit(true);
                    workbook.close();
                    //file.delete();
                    removeQuestionsErrorLabel.setText(msg);
                }catch(Exception e){
                    connection.rollback();
                    connection.setAutoCommit(true);
                    //workbook.close();
                    //file.delete();
                    e.printStackTrace();
                    removeQuestionsErrorLabel.setText("Ξ— Ξ΄ΞΉΞ±Ξ΄ΞΉΞΊΞ±ΟƒΞ―Ξ± Ξ΄ΞµΞ½ ΞΏΞ»ΞΏΞΊΞ»Ξ·Ο�Ο�ΞΈΞ·ΞΊΞµ : Ξ¤ΞΏ Ξ±Ο�Ο‡ΞµΞ―ΞΏ Ξ΄ΞµΞ½ ΞµΞ―Ξ½Ξ±ΞΉ excel "
                            + "Ξ® ΞΏΞΉ ΞµΞ³Ξ³Ο�Ξ±Ο†Ξ­Ο‚ ΞµΞ―Ξ½Ξ±ΞΉ Ξ»Ξ¬ΞΈΞΏΟ‚");
                }
                //delete downloaded file
                workbook.close();
                //file.delete();
                /*      OPEN EXCEL FILE HERE   -  END        */
                connection.close(); 
            } catch (SQLException | ClassNotFoundException ex) {
                ex.printStackTrace();
                removeQuestionsErrorLabel.setText("Ξ— Ξ΄ΞΉΞ±Ξ΄ΞΉΞΊΞ±ΟƒΞ―Ξ± Ξ΄ΞµΞ½ ΞΏΞ»ΞΏΞΊΞ»Ξ·Ο�Ο�ΞΈΞ·ΞΊΞµ : Ξ¤ΞΏ Ξ±Ο�Ο‡ΞµΞ―ΞΏ Ξ΄ΞµΞ½ ΞµΞ―Ξ½Ξ±ΞΉ excel "
                            + "Ξ® ΞΏΞΉ ΞµΞ³Ξ³Ο�Ξ±Ο†Ξ­Ο‚ ΞµΞ―Ξ½Ξ±ΞΉ Ξ»Ξ¬ΞΈΞΏΟ‚");
            } catch (IOException ex) {
                ex.printStackTrace();
                removeQuestionsErrorLabel.setText("Ξ— Ξ΄ΞΉΞ±Ξ΄ΞΉΞΊΞ±ΟƒΞ―Ξ± Ξ΄ΞµΞ½ ΞΏΞ»ΞΏΞΊΞ»Ξ·Ο�Ο�ΞΈΞ·ΞΊΞµ : Ξ¤ΞΏ Ξ±Ο�Ο‡ΞµΞ―ΞΏ Ξ΄ΞµΞ½ ΞµΞ―Ξ½Ξ±ΞΉ excel "
                            + "Ξ® ΞΏΞΉ ΞµΞ³Ξ³Ο�Ξ±Ο†Ξ­Ο‚ ΞµΞ―Ξ½Ξ±ΞΉ Ξ»Ξ¬ΞΈΞΏΟ‚");
            }    
        } else {
            //cancel by user
        }
    }//GEN-LAST:event_removeQuestionsFileButtonActionPerformed

    private void removeQuestionsSubmitButtonMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_removeQuestionsSubmitButtonMouseEntered
        // TODO add your handling code here:
        removeQuestionsSubmitButton.setBorder(BorderFactory.createMatteBorder(1,1,1,1,Color.decode("0x448AFF")));
    }//GEN-LAST:event_removeQuestionsSubmitButtonMouseEntered

    private void removeQuestionsSubmitButtonMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_removeQuestionsSubmitButtonMouseExited
        // TODO add your handling code here:
        removeQuestionsSubmitButton.setBorder(BorderFactory.createMatteBorder(0,1,0,1,Color.decode("0x448AFF")));
    }//GEN-LAST:event_removeQuestionsSubmitButtonMouseExited

    private void removeQuestionsSubmitButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_removeQuestionsSubmitButtonActionPerformed
        // TODO add your handling code here:
        String id_question = removeQuestionsId_questionTextField.getText();
        if(id_question.isEmpty()){
            removeQuestionsErrorLabel.setText("Ξ¤ΞΏ Ο€ΞµΞ΄Ξ―ΞΏ Ξ΄ΞµΞ½ ΞΌΟ€ΞΏΟ�ΞµΞ― Ξ½Ξ± ΞµΞ―Ξ½Ξ±ΞΉ ΞΊΞµΞ½Ο�");
        }else{
            if(id_question.matches("[0-9]+")){
                try{
                    Class.forName("com.mysql.jdbc.Driver");
                    String database = "jdbc:mysql://localhost:3306/examination_centers?user=root&password=026849";
                    Connection connection = DriverManager.getConnection(database);
                    Statement statement = connection.createStatement();
                    //check if the question exists
                    boolean flag = true;
                    String sql = "select count(*) from question where id_question = '"+id_question+"'";
                    ResultSet rs = statement.executeQuery(sql);
                    if(rs.first()){
                        if(rs.getInt("count(*)")==0){
                            flag = false;
                        }
                    }
                    rs.close();
                    if(flag){
                        //check if there are users assigned(answered) to the question
                        flag = false;
                        sql = "select count(*) from class_has_user where id_question = '"+id_question+"'";
                        rs = statement.executeQuery(sql);
                        if(rs.first()){
                            if(rs.getInt("count(*)")==0){
                                flag = true;
                            }
                        }
                        rs.close();
                        if(flag){
                            //delete now the class
                            sql = "delete from question where id_question = '"+id_question+"'";
                            statement.executeUpdate(sql);
                            removeQuestionsErrorLabel.setText("Ξ— Ξ±Ο†Ξ±Ξ―Ο�ΞµΟƒΞ· Ο„Ξ·Ο‚ ΞµΟ�Ο�Ο„Ξ·ΟƒΞ·Ο‚ ΞΏΞ»ΞΏΞΊΞ»Ξ·Ο�Ο�ΞΈΞ·ΞΊΞµ");
                        }else{
                            removeQuestionsErrorLabel.setText("Ξ— ΞµΟ�Ο�Ο„Ξ·ΟƒΞ· Ξ΄ΞµΞ½ ΞΌΟ€ΞΏΟ�ΞµΞ― Ξ½Ξ± Ξ΄ΞΉΞ±Ξ³Ο�Ξ±Ο†ΞµΞ― : Ξ¥Ο€Ξ¬Ο�Ο‡ΞΏΟ…Ξ½"
                                    + " Ξ±ΞΊΟ�ΞΌΞ± Ο‡Ο�Ξ®ΟƒΟ„ΞµΟ‚ ΞµΞ³Ξ³ΞµΞ³Ο�Ξ±ΞΌΞΌΞ­Ξ½ΞΏΞΉ ΟƒΞµ Ξ±Ο…Ο„Ξ®");
                        }
                    }else{
                        removeQuestionsErrorLabel.setText("Ξ— ΞµΟ�Ο�Ο„Ξ·ΟƒΞ· ΞΌΞµ Ξ±Ο…Ο„Ο� Ο„ΞΏΞ½ ΞΊΟ‰Ξ΄ΞΉΞΊΟ� Ξ΄ΞµΞ½ Ο…Ο€Ξ¬Ο�Ο‡ΞµΞΉ");
                    }
                    connection.close();
                }catch(SQLException | ClassNotFoundException e){
                    e.printStackTrace();
                }
            }else{
                removeQuestionsErrorLabel.setText("Ξ¤ΞΏ Ο€ΞµΞ΄Ξ―ΞΏ Ο€Ο�Ξ­Ο€ΞµΞΉ Ξ½Ξ± ΞµΞ―Ξ½Ξ±ΞΉ Ξ±Ο�ΞΉΞΈΞΌΟ�Ο‚");
            }
        }
    }//GEN-LAST:event_removeQuestionsSubmitButtonActionPerformed

    private void reportsClassesButtonMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_reportsClassesButtonMouseEntered
        // TODO add your handling code here:
        reportsClassesButton.setBorder(BorderFactory.createMatteBorder(1,1,1,1,Color.decode("0x448AFF")));
    }//GEN-LAST:event_reportsClassesButtonMouseEntered

    private void reportsClassesButtonMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_reportsClassesButtonMouseExited
        // TODO add your handling code here:
        reportsClassesButton.setBorder(BorderFactory.createMatteBorder(0,1,0,1,Color.decode("0x448AFF")));
    }//GEN-LAST:event_reportsClassesButtonMouseExited

    private void reportsClassesButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_reportsClassesButtonActionPerformed
        // TODO add your handling code here:
        reportsStudentsButton.setFont(new java.awt.Font("Tahoma", 0, 14));
        reportsClassesButton.setFont(new java.awt.Font("Tahoma", 0, 16));
        reportsExamsButton.setFont(new java.awt.Font("Tahoma", 0, 14));
        
        reportsContainerPanel.removeAll();
        reportsContainerPanel.add(reportsClassesPanel);
        reportsContainerPanel.repaint();
        reportsContainerPanel.revalidate();
    }//GEN-LAST:event_reportsClassesButtonActionPerformed

    private void reportsStudentsButtonMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_reportsStudentsButtonMouseEntered
        // TODO add your handling code here:
        reportsStudentsButton.setBorder(BorderFactory.createMatteBorder(1,1,1,1,Color.decode("0x448AFF")));
    }//GEN-LAST:event_reportsStudentsButtonMouseEntered

    private void reportsStudentsButtonMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_reportsStudentsButtonMouseExited
        // TODO add your handling code here:
        reportsStudentsButton.setBorder(BorderFactory.createMatteBorder(0,1,0,1,Color.decode("0x448AFF")));
    }//GEN-LAST:event_reportsStudentsButtonMouseExited

    private void reportsStudentsButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_reportsStudentsButtonActionPerformed
        // TODO add your handling code here:
        reportsStudentsButton.setFont(new java.awt.Font("Tahoma", 0, 16));
        reportsClassesButton.setFont(new java.awt.Font("Tahoma", 0, 14));
        reportsExamsButton.setFont(new java.awt.Font("Tahoma", 0, 14));
        
        reportsContainerPanel.removeAll();
        reportsContainerPanel.add(reportsStudentsPanel);
        reportsContainerPanel.repaint();
        reportsContainerPanel.revalidate();
    }//GEN-LAST:event_reportsStudentsButtonActionPerformed

    private void reportsExamsButtonMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_reportsExamsButtonMouseEntered
        // TODO add your handling code here:
        reportsExamsButton.setBorder(BorderFactory.createMatteBorder(1,1,1,1,Color.decode("0x448AFF")));
    }//GEN-LAST:event_reportsExamsButtonMouseEntered

    private void reportsExamsButtonMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_reportsExamsButtonMouseExited
        // TODO add your handling code here:
        reportsExamsButton.setBorder(BorderFactory.createMatteBorder(0,1,0,1,Color.decode("0x448AFF")));
    }//GEN-LAST:event_reportsExamsButtonMouseExited

    private void reportsExamsButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_reportsExamsButtonActionPerformed
        // TODO add your handling code here:
        reportsStudentsButton.setFont(new java.awt.Font("Tahoma", 0, 14));
        reportsClassesButton.setFont(new java.awt.Font("Tahoma", 0, 14));
        reportsExamsButton.setFont(new java.awt.Font("Tahoma", 0, 16));
        
        reportsContainerPanel.removeAll();
        reportsContainerPanel.add(reportsExamsPanel);
        reportsContainerPanel.repaint();
        reportsContainerPanel.revalidate();
    }//GEN-LAST:event_reportsExamsButtonActionPerformed

    private void reportsStudentsDownloadButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_reportsStudentsDownloadButtonActionPerformed
        // TODO add your handling code here: 
        DefaultTableModel model = (DefaultTableModel) reportsStudentsTable.getModel();
        String data = new StudentsReport_JerseyClient().getJson();
        if(data.isEmpty()){
            reportsStudentsMessageLabel.setText("Ξ”ΞµΞ½ Ο…Ο€Ξ¬Ο�Ο‡ΞΏΟ…Ξ½ Ξ±Ο€ΞΏΟ„ΞµΞ»Ξ­ΟƒΞΌΞ±Ο„Ξ±");
        }else{
            TypeToken<ArrayList<StudentReport>> token = new TypeToken<ArrayList<StudentReport>>() {};
            ArrayList<StudentReport> studentReport =new Gson().fromJson(data, token.getType());
            String[] excelColumns = new String[]{
                "Ξ�Ο‰Ξ΄.Ξ•ΞΎΞ­Ο„Ξ±ΟƒΞ·Ο‚ Ξ�Ξ±ΞΈΞ·Ο„Ξ®",
                "Ξ›ΞΏΞ³Ξ±Ο�ΞΉΞ±ΟƒΞΌΟ�Ο‚",
                "Ξ�Ξ½ΞΏΞΌΞ±",
                "Ξ•Ο€Ξ―ΞΈΞµΟ„ΞΏ",
                "Ξ�Ο‰Ξ΄.Ξ�Ξ­Ξ½Ο„Ο�ΞΏΟ…",
                "Ξ�Ο‰Ξ΄.Ξ•ΞΎΞ­Ο„Ξ±ΟƒΞ·Ο‚",
                "Ξ’Ξ±ΞΈΞΌΟ�Ο‚"};
            // Create a Workbook
            Workbook workbook = new XSSFWorkbook(); // new HSSFWorkbook() for generating `.xls` file
            /* CreationHelper helps us create instances of various things like DataFormat,
            Hyperlink, RichTextString etc, in a format (HSSF, XSSF) independent way */
            CreationHelper createHelper = workbook.getCreationHelper();
            // Create a Sheet
            Sheet sheet = workbook.createSheet("Students");
            // Create a Font for styling header cells
            org.apache.poi.ss.usermodel.Font headerFont = workbook.createFont();
            headerFont.setBold(true);
            headerFont.setFontHeightInPoints((short) 14);
            headerFont.setColor(IndexedColors.BLUE.getIndex());
            // Create a CellStyle with the font
            CellStyle headerCellStyle = workbook.createCellStyle();
            headerCellStyle.setFont(headerFont);
            // Create a Row
            Row headerRow = sheet.createRow(0);
            // Create cells
            for(int x = 0; x < excelColumns.length; x++) {
                Cell cell = headerRow.createCell(x);
                cell.setCellValue(excelColumns[x]);
                cell.setCellStyle(headerCellStyle);
            }
            // Create Other rows and cells with students data
            int rowNum = 1;
            for(StudentReport student : studentReport) {
                Row row = sheet.createRow(rowNum++);
                row.createCell(0).setCellValue(student.getId_class_has_user());
                row.createCell(1).setCellValue(student.getUsername());
                row.createCell(2).setCellValue(student.getName());
                row.createCell(3).setCellValue(student.getLastname());
                row.createCell(4).setCellValue(student.getId_class());
                row.createCell(5).setCellValue(student.getId_exam());
                row.createCell(6).setCellValue(student.getScore());
            }
            // Resize all columns to fit the content size
            for(int x = 0; x < excelColumns.length; x++) {
                sheet.autoSizeColumn(x);
            }
            // Write the output to a file
            FileOutputStream fileOut = null;
            try {
                int returnVal = fileChooser.showSaveDialog(AdminApp.this);
                if(returnVal == JFileChooser.APPROVE_OPTION) {
                    //then write your code to write to disk
                    fileOut = new FileOutputStream(fileChooser.getCurrentDirectory()+"\\studentResults_student.xlsx");
                    workbook.write(fileOut);
                    fileOut.close();
                    workbook.close();
                }
            } catch (FileNotFoundException ex) {
                Logger.getLogger(AdminApp.class.getName()).log(Level.SEVERE, null, ex);
            } catch (IOException ex) {
                Logger.getLogger(AdminApp.class.getName()).log(Level.SEVERE, null, ex);
            }
        }
    }//GEN-LAST:event_reportsStudentsDownloadButtonActionPerformed

    private void reportsClassesDownloadButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_reportsClassesDownloadButtonActionPerformed
        // TODO add your handling code here:
        DefaultTableModel model = (DefaultTableModel) reportsClassesTable.getModel();
        String data = new ClassesReport_JerseyClient().getJson();
        if(data.isEmpty()){
            reportsClassesMessageLabel.setText("Ξ”ΞµΞ½ Ο…Ο€Ξ¬Ο�Ο‡ΞΏΟ…Ξ½ Ξ±Ο€ΞΏΟ„ΞµΞ»Ξ­ΟƒΞΌΞ±Ο„Ξ±");
        }else{
            TypeToken<ArrayList<ClassReport>> token = new TypeToken<ArrayList<ClassReport>>() {};
            ArrayList<ClassReport> classReport =new Gson().fromJson(data, token.getType());
            String[] excelColumns = new String[]{
                "Ξ�Ο‰Ξ΄. Ξ�Ξ­Ξ½Ο„Ο�ΞΏΟ…",
                "Ξ›ΞΏΞ³Ξ±Ο�ΞΉΞ±ΟƒΞΌΟ�Ο‚",
                "Ξ�Ξ½ΞΏΞΌΞ±",
                "Ξ•Ο€Ξ―ΞΈΞµΟ„ΞΏ",
                "Ξ�Ο‰Ξ΄.Ξ•ΞΎΞ­Ο„Ξ±ΟƒΞ·Ο‚",
                "Ξ’Ξ±ΞΈΞΌΟ�Ο‚"};
            // Create a Workbook
            Workbook workbook = new XSSFWorkbook(); // new HSSFWorkbook() for generating `.xls` file
            /* CreationHelper helps us create instances of various things like DataFormat,
            Hyperlink, RichTextString etc, in a format (HSSF, XSSF) independent way */
            CreationHelper createHelper = workbook.getCreationHelper();
            // Create a Sheet
            Sheet sheet = workbook.createSheet("Students");
            // Create a Font for styling header cells
            org.apache.poi.ss.usermodel.Font headerFont = workbook.createFont();
            headerFont.setBold(true);
            headerFont.setFontHeightInPoints((short) 14);
            headerFont.setColor(IndexedColors.BLUE.getIndex());
            // Create a CellStyle with the font
            CellStyle headerCellStyle = workbook.createCellStyle();
            headerCellStyle.setFont(headerFont);
            // Create a Row
            Row headerRow = sheet.createRow(0);
            // Create cells
            for(int x = 0; x < excelColumns.length; x++) {
                Cell cell = headerRow.createCell(x);
                cell.setCellValue(excelColumns[x]);
                cell.setCellStyle(headerCellStyle);
            }
            // Create Other rows and cells with students data
            int rowNum = 1;
            for(ClassReport student : classReport) {
                Row row = sheet.createRow(rowNum++);
                row.createCell(0).setCellValue(student.getId_class());
                row.createCell(1).setCellValue(student.getUsername());
                row.createCell(2).setCellValue(student.getName());
                row.createCell(3).setCellValue(student.getLastname());
                row.createCell(4).setCellValue(student.getId_exam());
                row.createCell(5).setCellValue(student.getScore());
            }
            // Resize all columns to fit the content size
            for(int x = 0; x < excelColumns.length; x++) {
                sheet.autoSizeColumn(x);
            }
            // Write the output to a file
            FileOutputStream fileOut = null;
            try {
                int returnVal = fileChooser.showSaveDialog(AdminApp.this);
                if(returnVal == JFileChooser.APPROVE_OPTION) {
                    //then write your code to write to disk
                    fileOut = new FileOutputStream(fileChooser.getCurrentDirectory()+"\\studentResults_class.xlsx");
                    workbook.write(fileOut);
                    fileOut.close();
                    workbook.close();
                }
            } catch (FileNotFoundException ex) {
                Logger.getLogger(AdminApp.class.getName()).log(Level.SEVERE, null, ex);
            } catch (IOException ex) {
                Logger.getLogger(AdminApp.class.getName()).log(Level.SEVERE, null, ex);
            }
        }
    }//GEN-LAST:event_reportsClassesDownloadButtonActionPerformed

    private void reportsExamsDownloadButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_reportsExamsDownloadButtonActionPerformed
        // TODO add your handling code here: 
        DefaultTableModel model = (DefaultTableModel) reportsExamsTable.getModel();
        String data = new ExamsReport_JerseyClient().getJson();
        if(data.isEmpty()){
            reportsExamsMessageLabel.setText("Ξ”ΞµΞ½ Ο…Ο€Ξ¬Ο�Ο‡ΞΏΟ…Ξ½ Ξ±Ο€ΞΏΟ„ΞµΞ»Ξ­ΟƒΞΌΞ±Ο„Ξ±");
        }else{
            TypeToken<ArrayList<ExamReport>> token = new TypeToken<ArrayList<ExamReport>>() {};
            ArrayList<ExamReport> examReport =new Gson().fromJson(data, token.getType());
            String[] excelColumns = new String[]{
                "Ξ�Ο‰Ξ΄.Ξ•ΞΎΞ­Ο„Ξ±ΟƒΞ·Ο‚",
                "Ξ›ΞΏΞ³Ξ±Ο�ΞΉΞ±ΟƒΞΌΟ�Ο‚",
                "Ξ�Ξ½ΞΏΞΌΞ±",
                "Ξ•Ο€Ξ―ΞΈΞµΟ„ΞΏ",
                "Ξ�Ο‰Ξ΄.Ξ�Ξ­Ξ½Ο„Ο�ΞΏΟ…",
                "Ξ’Ξ±ΞΈΞΌΟ�Ο‚"};
            // Create a Workbook
            Workbook workbook = new XSSFWorkbook(); // new HSSFWorkbook() for generating `.xls` file
            /* CreationHelper helps us create instances of various things like DataFormat,
            Hyperlink, RichTextString etc, in a format (HSSF, XSSF) independent way */
            CreationHelper createHelper = workbook.getCreationHelper();
            // Create a Sheet
            Sheet sheet = workbook.createSheet("Students");
            // Create a Font for styling header cells
            org.apache.poi.ss.usermodel.Font headerFont = workbook.createFont();
            headerFont.setBold(true);
            headerFont.setFontHeightInPoints((short) 14);
            headerFont.setColor(IndexedColors.BLUE.getIndex());
            // Create a CellStyle with the font
            CellStyle headerCellStyle = workbook.createCellStyle();
            headerCellStyle.setFont(headerFont);
            // Create a Row
            Row headerRow = sheet.createRow(0);
            // Create cells
            for(int x = 0; x < excelColumns.length; x++) {
                Cell cell = headerRow.createCell(x);
                cell.setCellValue(excelColumns[x]);
                cell.setCellStyle(headerCellStyle);
            }
            // Create Other rows and cells with students data
            int rowNum = 1;
            for(ExamReport student : examReport) {
                Row row = sheet.createRow(rowNum++);
                row.createCell(0).setCellValue(student.getId_exam());
                row.createCell(1).setCellValue(student.getUsername());
                row.createCell(2).setCellValue(student.getName());
                row.createCell(3).setCellValue(student.getLastname());
                row.createCell(4).setCellValue(student.getId_class());
                row.createCell(5).setCellValue(student.getScore());
            }
            // Resize all columns to fit the content size
            for(int x = 0; x < excelColumns.length; x++) {
                sheet.autoSizeColumn(x);
            }
            // Write the output to a file
            FileOutputStream fileOut = null;
            try {
                int returnVal = fileChooser.showSaveDialog(AdminApp.this);
                if(returnVal == JFileChooser.APPROVE_OPTION) {
                    //then write your code to write to disk
                    fileOut = new FileOutputStream(fileChooser.getCurrentDirectory()+"\\studentResults_student_exam.xlsx");
                    workbook.write(fileOut);
                    fileOut.close();
                    workbook.close();
                }
            } catch (FileNotFoundException ex) {
                Logger.getLogger(AdminApp.class.getName()).log(Level.SEVERE, null, ex);
            } catch (IOException ex) {
                Logger.getLogger(AdminApp.class.getName()).log(Level.SEVERE, null, ex);
            }
        }
    }//GEN-LAST:event_reportsExamsDownloadButtonActionPerformed

    private void searchButtonMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_searchButtonMouseEntered
        // TODO add your handling code here:
        searchButton.setBorder(BorderFactory.createMatteBorder(1,1,1,1, Color.decode("0x448AFF")));
    }//GEN-LAST:event_searchButtonMouseEntered

    private void searchButtonMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_searchButtonMouseExited
        // TODO add your handling code here:
        searchButton.setBorder(BorderFactory.createMatteBorder(0,0,1,0, Color.decode("0x448AFF")));
    }//GEN-LAST:event_searchButtonMouseExited

    private void searchButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_searchButtonActionPerformed
        // TODO add your handling code here:
        containerPanel.removeAll();
        containerPanel.add(searchPanel);
        containerPanel.repaint();
        containerPanel.revalidate();
        
        reportsButton.setFont(new Font("Tahoma", Font.PLAIN, 16));
        searchButton.setFont(new Font("Tahoma", Font.PLAIN, 18));
        usersButton.setFont(new Font("Tahoma", Font.PLAIN, 16));
        examsButton.setFont(new Font("Tahoma", Font.PLAIN, 16));
        classesButton.setFont(new Font("Tahoma", Font.PLAIN, 16));
        questionsButton.setFont(new Font("Tahoma", Font.PLAIN, 16));
        subjectsButton.setFont(new Font("Tahoma", Font.PLAIN, 16));
        profilButton.setFont(new Font("Tahoma", Font.PLAIN, 16));
        menuPanel.repaint();
    }//GEN-LAST:event_searchButtonActionPerformed

    private void searchSubmitButtonMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_searchSubmitButtonMouseEntered
        // TODO add your handling code here:
        searchSubmitButton.setBorder(BorderFactory.createMatteBorder(1,1,1,1,Color.decode("0x448AFF")));
    }//GEN-LAST:event_searchSubmitButtonMouseEntered

    private void searchSubmitButtonMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_searchSubmitButtonMouseExited
        // TODO add your handling code here:
        searchSubmitButton.setBorder(BorderFactory.createMatteBorder(0,1,0,1,Color.decode("0x448AFF")));
    }//GEN-LAST:event_searchSubmitButtonMouseExited

    private void searchSubmitButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_searchSubmitButtonActionPerformed
        // TODO add your handling code here:
        String regex = "[a-zA-ZΞ±-Ο‰Ξ‘-Ξ©Ο�Ο�Ξ­Ξ¬Ξ―Ξ®Ο�]{5,}[a-zA-ZΞ±-Ο‰Ξ‘-Ξ©Ο�Ξ¬Ο�Ξ­Ξ―Ξ®Ο�0-9]*";
        String username = searchUsernameTextField.getText();
        String name = searchNameTextField.getText();
        String lastname = searchLastnameTextField.getText();
        if(username.isEmpty() || name.isEmpty() || lastname.isEmpty()){
            searchErrorLabel.setText("Ξ Ο�Ξ­Ο€ΞµΞΉ Ξ½Ξ± ΟƒΟ…ΞΌΟ€Ξ»Ξ·Ο�Ο�ΟƒΞµΟ„Ξµ Ο�Ξ»Ξ± Ο„Ξ± Ο€ΞµΞ΄Ξ―Ξ±");
        }else{
            if(username.matches(regex) && name.matches(regex) && lastname.matches(regex)){
                try{
                    Class.forName("com.mysql.jdbc.Driver");
                    String database = "jdbc:mysql://localhost:3306/examination_centers?user=root&password=026849";
                    Connection connection = DriverManager.getConnection(database);
                    Statement statement = connection.createStatement();
                    String id_user="";
                    String phone="";
                    String address="";
                    String email="";
                    String role="";
                    String sql;
                    int i=0;
                    ResultSet rs,rs2;
                    Statement statement2 = connection.createStatement();
                    boolean flag = true;
                    //see if the user exists
                    sql = "select count(*) from user where name = '"+name+"' and username = '"+username+"'"
                            + " and lastname = '"+lastname+"'";
                    rs = statement.executeQuery(sql);
                    if(rs.first()){
                        if(rs.getInt("count(*)")<1)
                            flag = false;
                    }
                    rs.close();
                    if(flag){
                        sql = "select * from user where name = '"+name+"' and username = '"+username+"'"
                            + " and lastname = '"+lastname+"'";
                        rs = statement.executeQuery(sql);
                        if(rs.first()){
                            id_userSelected = rs.getString("id_user");
                            id_user = rs.getString("id_user");
                            phone = rs.getString("phone");
                            address = rs.getString("address");
                            email = rs.getString("email");
                            if(rs.getInt("role")==1) role = "supervisor";
                            else if(rs.getInt("role")==2) role = "student";
                            else if(rs.getInt("role")==0) role = "admin";
                        }
                        rs.close();
                        searchResultUsername.setText(username);
                        searchResultName.setText(name);
                        searchResultLastname.setText(lastname);
                        searchResultPhone.setText(phone);
                        searchResultAddress.setText(address);
                        searchResultEmail.setText(email);
                        searchResultRole.setText(role);
                        containerPanel.removeAll();
                        containerPanel.add(searchResultPanel);
                        containerPanel.repaint();
                        containerPanel.revalidate();
                        
                        DefaultTableModel modelSearch = (DefaultTableModel) searchResultTable.getModel();
                        int rowCount = modelSearch.getRowCount();
                        for (int x = rowCount - 1; x >= 0; x--) {
                            modelSearch.removeRow(x);
                        }
                        sql = "select count(distinct id_class) from class_has_user where id_user = '"+id_user+"'";
                        rs = statement.executeQuery(sql);
                        flag = false;
                        if(rs.first()){
                            if(rs.getInt("count(distinct id_class)")>0){
                                flag = true;
                            }
                        }
                        rs.close();
                        if(flag){
                            //find all classes of student
                            sql = "select * from class_has_user,class,examination,subject where id_user = '"+id_user+"'"
                                    + " and class_has_user.id_class = class.id_class and"
                                    + " class.id_examination = examination.id_examination"
                                    + " and examination.id_subject = subject.id_subject group by class.id_class";
                            rs = statement.executeQuery(sql);
                            String type = "";
                            while(rs.next()){
                                if(rs.getString("examination.open").equals("0")) type = "Ξ‘Ο�Ο‡ΞΉΞΊΞ®";
                                else if(rs.getString("examination.open").equals("1")) type = "Ξ£Ξµ Ξ›ΞµΞΉΟ„ΞΏΟ…Ο�Ξ³Ξ―Ξ±";
                                else if(rs.getString("examination.open").equals("2")) type = "Ξ�Ξ»ΞΏΞΊΞ»Ξ·Ο�Ο‰ΞΌΞ­Ξ½Ξ·";
                                modelSearch.addRow(new String[]{rs.getString("class.id_class"),rs.getString("examination.id_examination"),rs.getString("examination.date"),rs.getString("subject.title"),type});
                            }
                        }
                    }else{
                        searchErrorLabel.setText("Ξ”ΞµΞ½ Ο…Ο€Ξ¬Ο�Ο‡ΞµΞΉ Ο‡Ο�Ξ®ΟƒΟ„Ξ·Ο‚ ΞΌΞµ Ξ±Ο…Ο„Ξ¬ Ο„Ξ± ΟƒΟ„ΞΏΞΉΟ‡ΞµΞ―Ξ±");
                    }
                    connection.close();
                }catch(SQLException | ClassNotFoundException e){
                    e.printStackTrace();
                }  
            }else{
                searchErrorLabel.setText("Ξ”ΞµΞ½ ΞµΟ€ΞΉΟ„Ο�Ξ­Ο€ΞΏΞ½Ο„Ξ±ΞΉ Ο„Ξ± ΟƒΟ�ΞΌΞ²ΞΏΞ»Ξ± ΞΊΞ±ΞΉ ΞΊΞ¬Ο„Ο‰ Ξ±Ο€Ο� 5 Ο‡Ξ±Ο�Ξ±ΞΊΟ„Ξ®Ο�ΞµΟ‚");
            }     
        }    
    }//GEN-LAST:event_searchSubmitButtonActionPerformed

    private void searchResultBackButtonMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_searchResultBackButtonMouseEntered
        // TODO add your handling code here:
        searchResultBackButton.setBorder(BorderFactory.createMatteBorder(1,1,1,1,Color.decode("0x448AFF")));
    }//GEN-LAST:event_searchResultBackButtonMouseEntered

    private void searchResultBackButtonMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_searchResultBackButtonMouseExited
        // TODO add your handling code here:
        searchResultBackButton.setBorder(BorderFactory.createMatteBorder(0,1,0,1,Color.decode("0x448AFF")));
    }//GEN-LAST:event_searchResultBackButtonMouseExited

    private void searchResultBackButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_searchResultBackButtonActionPerformed
        // TODO add your handling code here:
        containerPanel.removeAll();
        containerPanel.add(searchPanel);
        containerPanel.repaint();
        containerPanel.revalidate();
    }//GEN-LAST:event_searchResultBackButtonActionPerformed

    private void searchResultStudentBackButtonMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_searchResultStudentBackButtonMouseEntered
        // TODO add your handling code here:
        searchResultStudentBackButton.setBorder(BorderFactory.createMatteBorder(1,1,1,1,Color.decode("0x448AFF")));
    }//GEN-LAST:event_searchResultStudentBackButtonMouseEntered

    private void searchResultStudentBackButtonMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_searchResultStudentBackButtonMouseExited
        // TODO add your handling code here:
        searchResultStudentBackButton.setBorder(BorderFactory.createMatteBorder(0,1,0,1,Color.decode("0x448AFF")));
    }//GEN-LAST:event_searchResultStudentBackButtonMouseExited

    private void searchResultStudentBackButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_searchResultStudentBackButtonActionPerformed
        // TODO add your handling code here:
        containerPanel.removeAll();
        containerPanel.add(searchResultPanel);
        containerPanel.repaint();
        containerPanel.revalidate();
    }//GEN-LAST:event_searchResultStudentBackButtonActionPerformed

    private void insertSupervisorsButtonMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_insertSupervisorsButtonMouseEntered
        // TODO add your handling code here:
        insertSupervisorsButton.setBorder(BorderFactory.createMatteBorder(1,1,1,1,Color.decode("0x448AFF")));
    }//GEN-LAST:event_insertSupervisorsButtonMouseEntered

    private void insertSupervisorsButtonMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_insertSupervisorsButtonMouseExited
        // TODO add your handling code here:
        insertSupervisorsButton.setBorder(BorderFactory.createMatteBorder(0,1,0,1,Color.decode("0x448AFF")));
    }//GEN-LAST:event_insertSupervisorsButtonMouseExited

    private void insertSupervisorsButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_insertSupervisorsButtonActionPerformed
        // TODO add your handling code here:
        usersContainerPanel.removeAll();
        usersContainerPanel.add(insertSupervisorsPanel);
        usersContainerPanel.repaint();
        usersContainerPanel.revalidate();
        
        insertSupervisorsButton.setFont(new java.awt.Font("Tahoma", 0, 16));
        insertUsersButton.setFont(new java.awt.Font("Tahoma", 0, 14));
        removeUsersButton.setFont(new java.awt.Font("Tahoma", 0, 14));
    }//GEN-LAST:event_insertSupervisorsButtonActionPerformed

    private void insertSupervisorsFileButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_insertSupervisorsFileButtonActionPerformed
        // TODO add your handling code here:
        int returnVal = fileChooser.showOpenDialog(AdminApp.this);
        if (returnVal == JFileChooser.APPROVE_OPTION) {
            File file = fileChooser.getSelectedFile();
            //This is where a real application would open the file.
            Connection connection = null;
            Statement statement = null;
            try{
                Class.forName("com.mysql.jdbc.Driver");
                String database = "jdbc:mysql://localhost:3306/examination_centers?user=root&password=026849";
                connection = DriverManager.getConnection(database);
                statement = connection.createStatement();
                //set auto commit to false, make sure all entries will insert before commiting
                connection.setAutoCommit(false);
                String msg="";
                Workbook workbook=null;
                try{
                    //entries : number of uploaded and inserted to database rows
                    int entries=0;
                    workbook = WorkbookFactory.create(file);
                    Sheet sheet = workbook.getSheetAt(0);
                    DataFormatter dataFormatter = new DataFormatter();
                    for (Row row: sheet) {
                        if(row.getLastCellNum()>=4 && row.getRowNum()>0){
                            /*  OPEN DATABASE - CHECK LOGICAL CONNECTION - INSERT ENTRIES - START   */
                            String username = row.getCell(0).toString();
                            String name = row.getCell(1).toString();
                            String lastname = row.getCell(2).toString();
                            String id_class = row.getCell(3).toString();
                            //check if the user exists in the database
                            String sql = "select count(*) from user where username = '"+username+"' "
                                    + "and lastname = '"+lastname+"' and name = '"+name+"' and role='1'";
                            ResultSet rs = statement.executeQuery(sql);
                            boolean flag = true;
                            if(rs.first()){
                                if(rs.getInt("count(*)")==0)
                                    flag = false;
                            }
                            rs.close();
                            if(flag){
                                //take users id
                                sql = "select * from user where username = '"+username+"'";
                                rs = statement.executeQuery(sql);
                                if(rs.first()){
                                    id_user = rs.getString("id_user");
                                }
                                rs.close();
                                //check if the user is not already assigned to the class
                                sql = "select count(*) from class_has_user where id_class = '"+id_class+"' "
                                        + "and id_user = '"+id_user+"'";
                                rs = statement.executeQuery(sql);
                                flag = false;
                                if(rs.first()){
                                    if(rs.getInt("count(*)")==0){
                                        flag = true;
                                    }
                                }
                                rs.close();
                                if(flag){
                                    //insert supervisor to the class
                                    sql = "insert into class_has_user(id_class,id_user) values('"+id_class+"','"+id_user+"')";
                                    statement.executeUpdate(sql);
                                    entries++;
                                }else{
                                    //already registred
                                }
                            }else{
                                //does not exists
                            }
                            /*  OPEN DATABASE - CHECK LOGICAL CONNECTION - INSERT ENTRIES - END     */
                        }else{
                        }
                    }
                    int rows = sheet.getPhysicalNumberOfRows();
                    if(rows<2){
                        msg="Ξ— Ξ΄ΞΉΞ±Ξ΄ΞΉΞΊΞ±ΟƒΞ―Ξ± Ξ΄ΞµΞ½ ΞΏΞ»ΞΏΞΊΞ»Ξ·Ο�Ο�ΞΈΞ·ΞΊΞµ : Ξ”ΞµΞ½ Ο…Ο€Ξ¬Ο�Ο‡ΞΏΟ…Ξ½ ΞµΞ³Ξ³Ο�Ξ±Ο†Ξ­Ο‚";
                        connection.rollback();
                    }else{
                        if(entries==(rows-1)){
                            msg="Ξ— Ξ΄ΞΉΞ±Ξ΄ΞΉΞΊΞ±ΟƒΞ―Ξ± ΞΏΞ»ΞΏΞΊΞ»Ξ·Ο�Ο�ΞΈΞ·ΞΊΞµ : "+entries+" ΞµΞ³Ξ³Ο�Ξ±Ο†Ξ­Ο‚ Ο€Ο�ΞΏΟƒΞΈΞ­ΞΈΞ·ΞΊΞ±Ξ½";
                            connection.commit();
                        }else{
                            connection.rollback();
                            msg="Ξ— Ξ΄ΞΉΞ±Ξ΄ΞΉΞΊΞ±ΟƒΞ―Ξ± Ξ΄ΞµΞ½ ΞΏΞ»ΞΏΞΊΞ»Ξ·Ο�Ο�ΞΈΞ·ΞΊΞµ : Ξ�Ξ¬Ο€ΞΏΞΉΞµΟ‚ Ξ­Ξ³Ξ³Ο�Ξ±Ο†Ξ­Ο‚ ΞµΞ―Ξ½Ξ±ΞΉ Ξ»Ξ¬ΞΈΞΏΟ‚"
                                    + " Ξ® Ο…Ο€Ξ¬Ο�Ο‡ΞΏΟ…Ξ½";
                        }
                    }
                    connection.setAutoCommit(true);
                    workbook.close();
                    //file.delete();
                    insertSupervisorsErrorLabel.setText(msg);
                }catch(Exception e){
                    connection.rollback();
                    connection.setAutoCommit(true);
                    //workbook.close();
                    //file.delete();
                    e.printStackTrace();
                    insertSupervisorsErrorLabel.setText("Ξ— Ξ΄ΞΉΞ±Ξ΄ΞΉΞΊΞ±ΟƒΞ―Ξ± Ξ΄ΞµΞ½ ΞΏΞ»ΞΏΞΊΞ»Ξ·Ο�Ο�ΞΈΞ·ΞΊΞµ : Ξ¤ΞΏ Ξ±Ο�Ο‡ΞµΞ―ΞΏ Ξ΄ΞµΞ½ ΞµΞ―Ξ½Ξ±ΞΉ excel "
                            + "Ξ® ΞΏΞΉ ΞµΞ³Ξ³Ο�Ξ±Ο†Ξ­Ο‚ ΞµΞ―Ξ½Ξ±ΞΉ Ξ»Ξ¬ΞΈΞΏΟ‚");
                }
                //delete downloaded file
                workbook.close();
                //file.delete();
                /*      OPEN EXCEL FILE HERE   -  END        */
                connection.close(); 
            } catch (SQLException | ClassNotFoundException ex) {
                ex.printStackTrace();
                insertSupervisorsErrorLabel.setText("Ξ— Ξ΄ΞΉΞ±Ξ΄ΞΉΞΊΞ±ΟƒΞ―Ξ± Ξ΄ΞµΞ½ ΞΏΞ»ΞΏΞΊΞ»Ξ·Ο�Ο�ΞΈΞ·ΞΊΞµ : Ξ¤ΞΏ Ξ±Ο�Ο‡ΞµΞ―ΞΏ Ξ΄ΞµΞ½ ΞµΞ―Ξ½Ξ±ΞΉ excel "
                            + "Ξ® ΞΏΞΉ ΞµΞ³Ξ³Ο�Ξ±Ο†Ξ­Ο‚ ΞµΞ―Ξ½Ξ±ΞΉ Ξ»Ξ¬ΞΈΞΏΟ‚");
            } catch (IOException ex) {
                ex.printStackTrace();
                insertSupervisorsErrorLabel.setText("Ξ— Ξ΄ΞΉΞ±Ξ΄ΞΉΞΊΞ±ΟƒΞ―Ξ± Ξ΄ΞµΞ½ ΞΏΞ»ΞΏΞΊΞ»Ξ·Ο�Ο�ΞΈΞ·ΞΊΞµ : Ξ¤ΞΏ Ξ±Ο�Ο‡ΞµΞ―ΞΏ Ξ΄ΞµΞ½ ΞµΞ―Ξ½Ξ±ΞΉ excel "
                            + "Ξ® ΞΏΞΉ ΞµΞ³Ξ³Ο�Ξ±Ο†Ξ­Ο‚ ΞµΞ―Ξ½Ξ±ΞΉ Ξ»Ξ¬ΞΈΞΏΟ‚");
            }    
        } else {
            //cancel by user
        }
    }//GEN-LAST:event_insertSupervisorsFileButtonActionPerformed

    private void insertSupervisorsSubmitButtonMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_insertSupervisorsSubmitButtonMouseEntered
        // TODO add your handling code here:
        insertSupervisorsSubmitButton.setBorder(BorderFactory.createMatteBorder(1,1,1,1,Color.decode("0x448AFF")));
    }//GEN-LAST:event_insertSupervisorsSubmitButtonMouseEntered

    private void insertSupervisorsSubmitButtonMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_insertSupervisorsSubmitButtonMouseExited
        // TODO add your handling code here:
        insertSupervisorsSubmitButton.setBorder(BorderFactory.createMatteBorder(0,1,0,1,Color.decode("0x448AFF")));
    }//GEN-LAST:event_insertSupervisorsSubmitButtonMouseExited

    private void insertSupervisorsSubmitButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_insertSupervisorsSubmitButtonActionPerformed
        // TODO add your handling code here:
        String regex = "[a-zA-ZΞ±-Ο‰Ξ‘-Ξ©Ο�Ο�Ξ­Ξ¬Ξ―Ξ®Ο�]{5,}[a-zA-ZΞ±-Ο‰Ξ‘-Ξ©Ο�Ξ¬Ο�Ξ­Ξ―Ξ®Ο�0-9]*";
        String username = insertSupervisorsUsernameTextField.getText();
        String name = insertSupervisorsNameTextField.getText();
        String lastname = insertSupervisorsLastnameTextField.getText();
        String id_class = insertSupervisorsId_classComboBox.getSelectedItem().toString();
        if(username.isEmpty() || name.isEmpty() || lastname.isEmpty() || id_class.isEmpty()){
            insertSupervisorsErrorLabel.setText("Ξ Ο�Ξ­Ο€ΞµΞΉ Ξ½Ξ± ΟƒΟ…ΞΌΟ€Ξ»Ξ·Ο�Ο�ΟƒΞµΟ„Ξµ Ο�Ξ»Ξ± Ο„Ξ± Ο€ΞµΞ΄Ξ―Ξ±");
        }else{
            if(username.matches(regex) && name.matches(regex) && lastname.matches(regex)){
                try{
                    Class.forName("com.mysql.jdbc.Driver");
                    String database = "jdbc:mysql://localhost:3306/examination_centers?user=root&password=026849";
                    Connection connection = DriverManager.getConnection(database);
                    Statement statement = connection.createStatement();
                    //check if the user exists in the database
                    String sql = "select count(*) from user where username = '"+username+"' and lastname = '"+lastname+"' and name = '"+name+"' and role='1'";
                    ResultSet rs = statement.executeQuery(sql);
                    boolean flag = true;
                    if(rs.first()){
                        if(rs.getInt("count(*)")==0)
                            flag = false;
                    }
                    rs.close();
                    if(flag){
                        //take users id
                        sql = "select * from user where username = '"+username+"'";
                        rs = statement.executeQuery(sql);
                        if(rs.first()){
                            id_user = rs.getString("id_user");
                        }
                        rs.close();
                        //check if the user is not already assigned to the class
                        sql = "select count(*) from class_has_user where id_class = '"+id_class+"' and id_user = '"+id_user+"'";
                        rs = statement.executeQuery(sql);
                        flag = false;
                        if(rs.first()){
                            if(rs.getInt("count(*)")==0){
                                flag = true;
                            }
                        }
                        rs.close();
                        if(flag){
                            //insert supervisor to the class
                            sql = "insert into class_has_user(id_class,id_user) values('"+id_class+"','"+id_user+"')";
                            statement.executeUpdate(sql);
                            insertSupervisorsErrorLabel.setText("Ξ— ΞµΞΉΟƒΞ±Ξ³Ο‰Ξ³Ξ® Ο„ΞΏΟ… Ο‡Ο�Ξ®ΟƒΟ„Ξ· Ο‰Ο‚ Ο…Ο€ΞµΟ�ΞΈΟ…Ξ½ΞΏ Ο„ΞΌΞ®ΞΌΞ±Ο„ΞΏΟ‚ ΞΏΞ»ΞΏΞΊΞ»Ξ·Ο�Ο�ΞΈΞ·ΞΊΞµ");
                        }else{
                            insertSupervisorsErrorLabel.setText("Ξ� Ο‡Ο�Ξ®ΟƒΟ„Ξ·Ο‚ ΞµΞ―Ξ½Ξ±ΞΉ Ξ®Ξ΄Ξ· ΞµΞ³Ξ³ΞµΞ³Ο�Ξ±ΞΌΞΌΞ­Ξ½ΞΏΟ‚ ΟƒΟ„ΞΏ ΞµΞΎΞµΟ„Ξ±ΟƒΟ„ΞΉΞΊΟ� ΞΊΞ­Ξ½Ο„Ο�ΞΏ");
                        }
                    }else{
                        insertSupervisorsErrorLabel.setText("Ξ”ΞµΞ½ Ο…Ο€Ξ¬Ο�Ο‡ΞµΞΉ Ο‡Ο�Ξ®ΟƒΟ„Ξ·Ο‚ ΞΌΞµ Ξ±Ο…Ο„Ξ¬ Ο„Ξ± ΟƒΟ„ΞΏΞΉΟ‡ΞµΞ―Ξ±");
                    }
                    connection.close();
                }catch(ClassNotFoundException | SQLException e4){
                    e4.printStackTrace();
                }
            }else{
                insertSupervisorsErrorLabel.setText("Ξ”ΞµΞ½ ΞµΟ€ΞΉΟ„Ο�Ξ­Ο€ΞΏΞ½Ο„Ξ±ΞΉ ΟƒΟ�ΞΌΞ²ΞΏΞ»Ξ± ΞΊΞ±ΞΉ ΞΊΞ¬Ο„Ο‰ Ξ±Ο€Ο� 5 Ο‡Ξ±Ο�Ξ±ΞΊΟ„Ξ®Ο�ΞµΟ‚");
            }
        }
    }//GEN-LAST:event_insertSupervisorsSubmitButtonActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(AdminApp.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(AdminApp.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(AdminApp.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(AdminApp.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                AdminApp main = new AdminApp();
                main.setVisible(true);
                main.setLocationRelativeTo(null);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel addressTitleLabel;
    private javax.swing.JButton classesButton;
    private javax.swing.JPanel classesContainerPanel;
    private javax.swing.JPanel classesMenuPanel;
    private javax.swing.JPanel classesPanel;
    private javax.swing.JPanel containerPanel;
    private javax.swing.JLabel emailTitleLabel;
    private javax.swing.JButton examsButton;
    private javax.swing.JPanel examsContainerPanel;
    private javax.swing.JPanel examsMenuPanel;
    private javax.swing.JPanel examsPanel;
    private javax.swing.JFileChooser fileChooser;
    private javax.swing.JPanel generalPanel;
    private javax.swing.JLabel insertClassesAddressLabel;
    private javax.swing.JTextField insertClassesAddressTextField;
    private javax.swing.JButton insertClassesButton;
    private javax.swing.JLabel insertClassesErrorLabel;
    private javax.swing.JButton insertClassesFileButton;
    private javax.swing.JLabel insertClassesFileInfo2Label;
    private javax.swing.JLabel insertClassesFileInfoLabel;
    private javax.swing.JLabel insertClassesId_classLabel;
    private javax.swing.JTextField insertClassesId_classTextField;
    private javax.swing.JComboBox<String> insertClassesId_examComboBox;
    private javax.swing.JLabel insertClassesId_examLabel;
    private javax.swing.JLabel insertClassesNameLabel;
    private javax.swing.JTextField insertClassesNameTextField;
    private javax.swing.JPanel insertClassesPanel;
    private javax.swing.JButton insertClassesSubmitButton;
    private javax.swing.JLabel insertClassesTitle2Label;
    private javax.swing.JLabel insertClassesTitleLabel;
    private javax.swing.JButton insertExamsButton;
    private javax.swing.JLabel insertExamsDateLabel;
    private javax.swing.JTextField insertExamsDayTextField;
    private javax.swing.JLabel insertExamsErrorLabel;
    private javax.swing.JButton insertExamsFileButton;
    private javax.swing.JLabel insertExamsFileInfo2Label;
    private javax.swing.JLabel insertExamsFileInfoLabel;
    private javax.swing.JTextField insertExamsHourTextField;
    private javax.swing.JLabel insertExamsId_examLabel;
    private javax.swing.JTextField insertExamsId_examTextField;
    private javax.swing.JComboBox<String> insertExamsId_subjectComboBox;
    private javax.swing.JLabel insertExamsId_subjectLabel;
    private javax.swing.JTextField insertExamsMinuteTextField;
    private javax.swing.JTextField insertExamsMonthTextField;
    private javax.swing.JPanel insertExamsPanel;
    private javax.swing.JTextField insertExamsSecondTextField;
    private javax.swing.JButton insertExamsSubmitButton;
    private javax.swing.JLabel insertExamsTitle2Label;
    private javax.swing.JLabel insertExamsTitleLabel;
    private javax.swing.JTextField insertExamsYearTextField;
    private javax.swing.JLabel insertQuestionsAnswer1Label;
    private javax.swing.JTextArea insertQuestionsAnswer1TextArea;
    private javax.swing.JLabel insertQuestionsAnswer2Label;
    private javax.swing.JTextArea insertQuestionsAnswer2TextArea;
    private javax.swing.JLabel insertQuestionsAnswer3Label;
    private javax.swing.JTextArea insertQuestionsAnswer3TextArea;
    private javax.swing.JLabel insertQuestionsAnswer4Label;
    private javax.swing.JTextArea insertQuestionsAnswer4TextArea;
    private javax.swing.JButton insertQuestionsButton;
    private javax.swing.JLabel insertQuestionsCorrectLabel;
    private javax.swing.JTextArea insertQuestionsCorrectTextArea;
    private javax.swing.JLabel insertQuestionsErrorLabel;
    private javax.swing.JButton insertQuestionsFileButton;
    private javax.swing.JLabel insertQuestionsFileInfo2Label;
    private javax.swing.JLabel insertQuestionsFileInfoLabel;
    private javax.swing.JLabel insertQuestionsId_questionLabel;
    private javax.swing.JTextField insertQuestionsId_questionTextField;
    private javax.swing.JComboBox<String> insertQuestionsId_subjectComboBox;
    private javax.swing.JLabel insertQuestionsId_subjectLabel;
    private javax.swing.JPanel insertQuestionsPanel;
    private javax.swing.JLabel insertQuestionsQuestionLabel;
    private javax.swing.JTextArea insertQuestionsQuestionTextArea;
    private javax.swing.JButton insertQuestionsSubmitButton;
    private javax.swing.JLabel insertQuestionsTitle2Label1;
    private javax.swing.JLabel insertQuestionsTitleLabel;
    private javax.swing.JButton insertSubjectsButton;
    private javax.swing.JLabel insertSubjectsDescriptionLabel;
    private javax.swing.JTextArea insertSubjectsDescriptionTextArea;
    private javax.swing.JLabel insertSubjectsErrorLabel;
    private javax.swing.JButton insertSubjectsFileButton;
    private javax.swing.JLabel insertSubjectsFileInfo2Label;
    private javax.swing.JLabel insertSubjectsFileInfoLabel;
    private javax.swing.JLabel insertSubjectsId_subjectLabel;
    private javax.swing.JTextField insertSubjectsId_subjectTextField;
    private javax.swing.JPanel insertSubjectsPanel;
    private javax.swing.JLabel insertSubjectsSubjectTitleLabel;
    private javax.swing.JButton insertSubjectsSubmitButton;
    private javax.swing.JLabel insertSubjectsTitle2Label;
    private javax.swing.JLabel insertSubjectsTitleLabel;
    private javax.swing.JTextField insertSubjectsTitleTextField;
    private javax.swing.JButton insertSupervisorsButton;
    private javax.swing.JLabel insertSupervisorsErrorLabel;
    private javax.swing.JButton insertSupervisorsFileButton;
    private javax.swing.JLabel insertSupervisorsFileInfo2Label;
    private javax.swing.JLabel insertSupervisorsFileInfoLabel;
    private javax.swing.JComboBox<String> insertSupervisorsId_classComboBox;
    private javax.swing.JLabel insertSupervisorsId_classLabel;
    private javax.swing.JLabel insertSupervisorsLastnameLabel;
    private javax.swing.JTextField insertSupervisorsLastnameTextField;
    private javax.swing.JLabel insertSupervisorsNameLabel;
    private javax.swing.JTextField insertSupervisorsNameTextField;
    private javax.swing.JPanel insertSupervisorsPanel;
    private javax.swing.JButton insertSupervisorsSubmitButton;
    private javax.swing.JLabel insertSupervisorsTitle2Label;
    private javax.swing.JLabel insertSupervisorsTitleLabel;
    private javax.swing.JLabel insertSupervisorsUsernameLabel;
    private javax.swing.JTextField insertSupervisorsUsernameTextField;
    private javax.swing.JLabel insertUserTitle2Label;
    private javax.swing.JLabel insertUserTitleLabel;
    private javax.swing.JLabel insertUsersAddressLabel;
    private javax.swing.JTextField insertUsersAddressTextField;
    private javax.swing.JButton insertUsersButton;
    private javax.swing.JLabel insertUsersEmailLabel;
    private javax.swing.JTextField insertUsersEmailTextField;
    private javax.swing.JLabel insertUsersErrorLabel;
    private javax.swing.JButton insertUsersFileButton;
    private javax.swing.JLabel insertUsersFileInfo2Label;
    private javax.swing.JLabel insertUsersFileInfoLabel;
    private javax.swing.JLabel insertUsersLastnameLabel;
    private javax.swing.JTextField insertUsersLastnameTextField;
    private javax.swing.JLabel insertUsersNameLabel;
    private javax.swing.JTextField insertUsersNameTextField;
    private javax.swing.JPanel insertUsersPanel;
    private javax.swing.JLabel insertUsersPasswordLabel;
    private javax.swing.JPasswordField insertUsersPasswordPasswordField;
    private javax.swing.JLabel insertUsersPhoneLabel;
    private javax.swing.JTextField insertUsersPhoneTextField;
    private javax.swing.JComboBox<String> insertUsersRoleComboBox;
    private javax.swing.JLabel insertUsersRoleLabel;
    private javax.swing.JButton insertUsersSubmitButton;
    private javax.swing.JLabel insertUsersUsernameLabel;
    private javax.swing.JTextField insertUsersUsernameTextField;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane10;
    private javax.swing.JScrollPane jScrollPane11;
    private javax.swing.JScrollPane jScrollPane12;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JScrollPane jScrollPane4;
    private javax.swing.JScrollPane jScrollPane5;
    private javax.swing.JScrollPane jScrollPane6;
    private javax.swing.JScrollPane jScrollPane7;
    private javax.swing.JScrollPane jScrollPane8;
    private javax.swing.JScrollPane jScrollPane9;
    private javax.swing.JLabel lastnameTitleLabel;
    private javax.swing.JButton logoutButton;
    private javax.swing.JPanel menuPanel;
    private javax.swing.JLabel nameTitleLabel;
    private javax.swing.JLabel phoneTitleLabel;
    private javax.swing.JLabel profilAddressLabel;
    private javax.swing.JButton profilButton;
    private javax.swing.JLabel profilEmailLabel;
    private javax.swing.JLabel profilLastnameLabel;
    private javax.swing.JLabel profilNameLabel;
    private javax.swing.JPanel profilPanel;
    private javax.swing.JLabel profilPhoneLabel;
    private javax.swing.JLabel profilRoleLabel;
    private javax.swing.JLabel profilUsernameLabel;
    private javax.swing.JButton questionsButton;
    private javax.swing.JPanel questionsContainerPanel;
    private javax.swing.JPanel questionsMenuPanel;
    private javax.swing.JPanel questionsPanel;
    private javax.swing.JButton removeClassesButton;
    private javax.swing.JLabel removeClassesErrorLabel;
    private javax.swing.JButton removeClassesFileButton;
    private javax.swing.JLabel removeClassesFileInfo2Label;
    private javax.swing.JLabel removeClassesFileInfoLabel;
    private javax.swing.JLabel removeClassesId_classLabel;
    private javax.swing.JTextField removeClassesId_classTextField;
    private javax.swing.JPanel removeClassesPanel;
    private javax.swing.JButton removeClassesSubmitButton;
    private javax.swing.JLabel removeClassesTitle2Label;
    private javax.swing.JLabel removeClassesTitleLabel;
    private javax.swing.JButton removeExamsButton;
    private javax.swing.JLabel removeExamsErrorLabel;
    private javax.swing.JButton removeExamsFileButton;
    private javax.swing.JLabel removeExamsFileInfo2Label;
    private javax.swing.JLabel removeExamsFileInfoLabel;
    private javax.swing.JLabel removeExamsId_examLabel;
    private javax.swing.JTextField removeExamsId_examTextField;
    private javax.swing.JPanel removeExamsPanel;
    private javax.swing.JButton removeExamsSubmitButton;
    private javax.swing.JLabel removeExamsTitle2Label;
    private javax.swing.JLabel removeExamsTitleLabel;
    private javax.swing.JButton removeQuestionsButton;
    private javax.swing.JLabel removeQuestionsErrorLabel;
    private javax.swing.JButton removeQuestionsFileButton;
    private javax.swing.JLabel removeQuestionsFileInfo2Label;
    private javax.swing.JLabel removeQuestionsFileInfoLabel;
    private javax.swing.JLabel removeQuestionsId_questionLabel;
    private javax.swing.JTextField removeQuestionsId_questionTextField;
    private javax.swing.JPanel removeQuestionsPanel;
    private javax.swing.JButton removeQuestionsSubmitButton;
    private javax.swing.JLabel removeQuestionsTitle2Label;
    private javax.swing.JLabel removeQuestionsTitleLabel;
    private javax.swing.JButton removeSubjectsButton;
    private javax.swing.JLabel removeSubjectsErrorLabel;
    private javax.swing.JButton removeSubjectsFileButton;
    private javax.swing.JLabel removeSubjectsFileInfo2Label;
    private javax.swing.JLabel removeSubjectsFileInfoLabel;
    private javax.swing.JLabel removeSubjectsId_subjectLabel;
    private javax.swing.JTextField removeSubjectsId_subjectTextField;
    private javax.swing.JPanel removeSubjectsPanel;
    private javax.swing.JButton removeSubjectsSubmitButton;
    private javax.swing.JLabel removeSubjectsTitle2Label;
    private javax.swing.JLabel removeSubjectsTitleLabel;
    private javax.swing.JLabel removeUserTitle2Label;
    private javax.swing.JLabel removeUserTitleLabel;
    private javax.swing.JButton removeUsersButton;
    private javax.swing.JLabel removeUsersErrorLabel;
    private javax.swing.JButton removeUsersFileButton;
    private javax.swing.JLabel removeUsersFileInfo2Label;
    private javax.swing.JLabel removeUsersFileInfoLabel;
    private javax.swing.JLabel removeUsersLastnameLabel;
    private javax.swing.JTextField removeUsersLastnameTextField;
    private javax.swing.JLabel removeUsersNameLabel;
    private javax.swing.JTextField removeUsersNameTextField;
    private javax.swing.JPanel removeUsersPanel;
    private javax.swing.JButton removeUsersSubmitButton;
    private javax.swing.JLabel removeUsersUsernameLabel;
    private javax.swing.JTextField removeUsersUsernameTextField;
    private javax.swing.JButton reportsButton;
    private javax.swing.JButton reportsClassesButton;
    private javax.swing.JButton reportsClassesDownloadButton;
    private javax.swing.JLabel reportsClassesMessageLabel;
    private javax.swing.JPanel reportsClassesPanel;
    private javax.swing.JTable reportsClassesTable;
    private javax.swing.JLabel reportsClassesTitleLabel;
    private javax.swing.JPanel reportsContainerPanel;
    private javax.swing.JButton reportsExamsButton;
    private javax.swing.JButton reportsExamsDownloadButton;
    private javax.swing.JLabel reportsExamsMessageLabel;
    private javax.swing.JPanel reportsExamsPanel;
    private javax.swing.JTable reportsExamsTable;
    private javax.swing.JLabel reportsExamsTitleLabel;
    private javax.swing.JPanel reportsMenuPanel;
    private javax.swing.JPanel reportsPanel;
    private javax.swing.JButton reportsStudentsButton;
    private javax.swing.JButton reportsStudentsDownloadButton;
    private javax.swing.JLabel reportsStudentsMessageLabel;
    private javax.swing.JPanel reportsStudentsPanel;
    private javax.swing.JTable reportsStudentsTable;
    private javax.swing.JLabel reportsStudentsTitleLabel;
    private javax.swing.JLabel roleTitleLabel;
    private javax.swing.JButton searchButton;
    private javax.swing.JLabel searchErrorLabel;
    private javax.swing.JLabel searchLastnameLabel;
    private javax.swing.JTextField searchLastnameTextField;
    private javax.swing.JLabel searchNameLabel;
    private javax.swing.JTextField searchNameTextField;
    private javax.swing.JPanel searchPanel;
    private javax.swing.JLabel searchResultAddress;
    private javax.swing.JLabel searchResultAddressLabel;
    private javax.swing.JButton searchResultBackButton;
    private javax.swing.JLabel searchResultEmail;
    private javax.swing.JLabel searchResultEmailLabel;
    private javax.swing.JLabel searchResultLastname;
    private javax.swing.JLabel searchResultLastnameLabel;
    private javax.swing.JLabel searchResultName;
    private javax.swing.JLabel searchResultNameLabel;
    private javax.swing.JPanel searchResultPanel;
    private javax.swing.JLabel searchResultPhone;
    private javax.swing.JLabel searchResultPhoneLabel;
    private javax.swing.JLabel searchResultRole;
    private javax.swing.JLabel searchResultRoleLabel;
    private javax.swing.JLabel searchResultStudentAddress;
    private javax.swing.JLabel searchResultStudentAddressLabel;
    private javax.swing.JButton searchResultStudentBackButton;
    private javax.swing.JLabel searchResultStudentEmail;
    private javax.swing.JLabel searchResultStudentEmailLabel;
    private javax.swing.JLabel searchResultStudentId_class;
    private javax.swing.JLabel searchResultStudentId_classLabel;
    private javax.swing.JLabel searchResultStudentId_exam;
    private javax.swing.JLabel searchResultStudentId_examLabel;
    private javax.swing.JLabel searchResultStudentLastname;
    private javax.swing.JLabel searchResultStudentLastnameLabel;
    private javax.swing.JLabel searchResultStudentName;
    private javax.swing.JLabel searchResultStudentNameLabel;
    private javax.swing.JPanel searchResultStudentPanel;
    private javax.swing.JLabel searchResultStudentPhone;
    private javax.swing.JLabel searchResultStudentPhoneLabel;
    private javax.swing.JLabel searchResultStudentRole;
    private javax.swing.JLabel searchResultStudentRoleLabel;
    private javax.swing.JTable searchResultStudentTable;
    private javax.swing.JLabel searchResultStudentTitle2Label;
    private javax.swing.JLabel searchResultStudentTitleLabel;
    private javax.swing.JLabel searchResultStudentUsername;
    private javax.swing.JLabel searchResultStudentUsernameLabel;
    private javax.swing.JTable searchResultTable;
    private javax.swing.JLabel searchResultTitle2Label;
    private javax.swing.JLabel searchResultTitleLabel;
    private javax.swing.JLabel searchResultUsername;
    private javax.swing.JLabel searchResultUsernameLabel;
    private javax.swing.JButton searchSubmitButton;
    private javax.swing.JLabel searchTitleLabel;
    private javax.swing.JLabel searchUsernameLabel;
    private javax.swing.JTextField searchUsernameTextField;
    private javax.swing.JButton subjectsButton;
    private javax.swing.JPanel subjectsContainerPanel;
    private javax.swing.JPanel subjectsMenuPanel;
    private javax.swing.JPanel subjectsPanel;
    private javax.swing.JLabel title;
    private javax.swing.JLabel titleMessage;
    private javax.swing.JPanel titlePanel;
    private javax.swing.JLabel usernameTitleLabel;
    private javax.swing.JButton usersButton;
    private javax.swing.JPanel usersContainerPanel;
    private javax.swing.JPanel usersMenuPanel;
    private javax.swing.JPanel usersPanel;
    // End of variables declaration//GEN-END:variables

    static class ClassesReport_JerseyClient {

        private WebTarget webTarget;
        private Client client;
        private static final String BASE_URI = "http://localhost:8080/WebApplication/webresources";

        public ClassesReport_JerseyClient() {
            client = javax.ws.rs.client.ClientBuilder.newClient();
            webTarget = client.target(BASE_URI).path("admin-reports/classesReport");
        }

        public String getJson() throws ClientErrorException {
            WebTarget resource = webTarget;
            return resource.request(javax.ws.rs.core.MediaType.APPLICATION_JSON).get(String.class);
        }

        public void close() {
            client.close();
        }
    }

    static class ExamsReport_JerseyClient {

        private WebTarget webTarget;
        private Client client;
        private static final String BASE_URI = "http://localhost:8080/WebApplication/webresources";

        public ExamsReport_JerseyClient() {
            client = javax.ws.rs.client.ClientBuilder.newClient();
            webTarget = client.target(BASE_URI).path("admin-reports/examsReport");
        }

        public String getJson() throws ClientErrorException {
            WebTarget resource = webTarget;
            return resource.request(javax.ws.rs.core.MediaType.APPLICATION_JSON).get(String.class);
        }

        public void close() {
            client.close();
        }
    }

    static class StudentsReport_JerseyClient {

        private WebTarget webTarget;
        private Client client;
        private static final String BASE_URI = "http://localhost:8080/WebApplication/webresources";

        public StudentsReport_JerseyClient() {
            client = javax.ws.rs.client.ClientBuilder.newClient();
            webTarget = client.target(BASE_URI).path("admin-reports/studentsReport");
        }

        public String getJson() throws ClientErrorException {
            WebTarget resource = webTarget;
            return resource.request(javax.ws.rs.core.MediaType.APPLICATION_JSON).get(String.class);
        }

        public void close() {
            client.close();
        }
    }

 
}
